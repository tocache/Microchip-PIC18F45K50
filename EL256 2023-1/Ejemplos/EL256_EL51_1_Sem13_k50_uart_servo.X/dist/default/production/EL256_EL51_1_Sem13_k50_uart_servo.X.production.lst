

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 14 17:00:40 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.35
    53                           ; Generated 05/05/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F45K50 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     _ANSELCbits	set	3933
    88  0000                     _TRISCbits	set	3988
    89  0000                     _TXSTA1bits	set	4012
    90  0000                     _ANSELBbits	set	3932
    91  0000                     _ANSELD	set	3934
    92  0000                     _ANSELE	set	3935
    93  0000                     _PORTD	set	3971
    94  0000                     _LATD	set	3980
    95  0000                     _LATEbits	set	3981
    96  0000                     _TRISBbits	set	3987
    97  0000                     _TRISD	set	3989
    98  0000                     _RCSTA1	set	4011
    99  0000                     _TXSTA1	set	4012
   100  0000                     _SPBRG1	set	4015
   101  0000                     _SPBRGH1	set	4016
   102  0000                     _RCONbits	set	4048
   103  0000                     _TRISE	set	3990
   104  0000                     _OSCCON	set	4051
   105  0000                     _WPUBbits	set	3973
   106  0000                     _INTCON3bits	set	4080
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _INTCONbits	set	4082
   109  0000                     _TXREG1	set	4013
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	callstack 0
   114  000800  00                 	db	0
   115  000801                     STR_2:
   116  000801  4D                 	db	77	;'M'
   117  000802  69                 	db	105	;'i'
   118  000803  63                 	db	99	;'c'
   119  000804  72                 	db	114	;'r'
   120  000805  6F                 	db	111	;'o'
   121  000806  20                 	db	32
   122  000807  73                 	db	115	;'s'
   123  000808  65                 	db	101	;'e'
   124  000809  6D                 	db	109	;'m'
   125  00080A  61                 	db	97	;'a'
   126  00080B  6E                 	db	110	;'n'
   127  00080C  61                 	db	97	;'a'
   128  00080D  20                 	db	32
   129  00080E  31                 	db	49	;'1'
   130  00080F  33                 	db	51	;'3'
   131  000810  00                 	db	0
   132  000811                     STR_1:
   133  000811  48                 	db	72	;'H'
   134  000812  6F                 	db	111	;'o'
   135  000813  6C                 	db	108	;'l'
   136  000814  61                 	db	97	;'a'
   137  000815  20                 	db	32
   138  000816  4D                 	db	77	;'M'
   139  000817  75                 	db	117	;'u'
   140  000818  6E                 	db	110	;'n'
   141  000819  64                 	db	100	;'d'
   142  00081A  6F                 	db	111	;'o'
   143  00081B  21                 	db	33
   144  00081C  00                 	db	0
   145  00081D  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150  000F80                     __pcinit:
   151                           	callstack 0
   152  000F80                     start_initialization:
   153                           	callstack 0
   154  000F80                     __initialization:
   155                           	callstack 0
   156  000F80                     end_of_initialization:
   157                           	callstack 0
   158  000F80                     __end_of__initialization:
   159                           	callstack 0
   160  000F80  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   161  000F82  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   162  000F84  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  000F86  6EF8               	movwf	tblptru,c
   164  000F88  0E08               	movlw	high __Lsmallconst
   165  000F8A  6EF7               	movwf	tblptrh,c
   166  000F8C  0100               	movlb	0
   167  000F8E  EFC9  F007         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	cstackCOMRAM
   170  000001                     __pcstackCOMRAM:
   171                           	callstack 0
   172  000001                     ?i2_strlen:
   173                           	callstack 0
   174  000001                     i2ENVIA_NIBBLE@dato:
   175                           	callstack 0
   176  000001                     i2LEER_LCD@aux:
   177                           	callstack 0
   178  000001                     i2EUSART_Sendbyte@dato:
   179                           	callstack 0
   180  000001                     i2strlen@s:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x0
   184  000001                     	ds	1
   185  000002                     i2ENVIA_CHAR@dato:
   186                           	callstack 0
   187  000002                     i2ENVIA_LCD_CMD@dato:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1
   191  000002                     	ds	1
   192  000003                     i2ENVIA_CHAR@aux:
   193                           	callstack 0
   194  000003                     i2ENVIA_LCD_CMD@aux:
   195                           	callstack 0
   196  000003                     i2strlen@a:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x2
   200  000003                     	ds	1
   201  000004                     i2POS_CURSOR@columna:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x3
   205  000004                     	ds	1
   206  000005                     i2POS_CURSOR@fila:
   207                           	callstack 0
   208  000005                     i2ESCRIBE_MENSAJE2@cadena:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x4
   212  000005                     	ds	2
   213  000007                     ??i2_ESCRIBE_MENSAJE2:
   214                           
   215                           ; 1 bytes @ 0x6
   216  000007                     	ds	2
   217  000009                     i2ESCRIBE_MENSAJE2@tam:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x8
   221  000009                     	ds	1
   222  00000A                     i2ESCRIBE_MENSAJE2@i:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x9
   226  00000A                     	ds	1
   227  00000B                     ??i2_pantallazo:
   228                           
   229                           ; 1 bytes @ 0xA
   230  00000B                     	ds	2
   231  00000D                     ??_INT0_ISR:
   232                           
   233                           ; 1 bytes @ 0xC
   234  00000D                     	ds	4
   235  000011                     ?i1_strlen:
   236                           	callstack 0
   237  000011                     EUSART_Sendbyte@dato:
   238                           	callstack 0
   239  000011                     i1ENVIA_NIBBLE@dato:
   240                           	callstack 0
   241  000011                     i1LEER_LCD@aux:
   242                           	callstack 0
   243  000011                     i1strlen@s:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x10
   247  000011                     	ds	1
   248  000012                     i1ENVIA_CHAR@dato:
   249                           	callstack 0
   250  000012                     i1ENVIA_LCD_CMD@dato:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x11
   254  000012                     	ds	1
   255  000013                     i1ENVIA_CHAR@aux:
   256                           	callstack 0
   257  000013                     i1ENVIA_LCD_CMD@aux:
   258                           	callstack 0
   259  000013                     i1strlen@a:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x12
   263  000013                     	ds	1
   264  000014                     i1POS_CURSOR@columna:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x13
   268  000014                     	ds	1
   269  000015                     i1POS_CURSOR@fila:
   270                           	callstack 0
   271  000015                     i1ESCRIBE_MENSAJE2@cadena:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x14
   275  000015                     	ds	2
   276  000017                     ??i1_ESCRIBE_MENSAJE2:
   277                           
   278                           ; 1 bytes @ 0x16
   279  000017                     	ds	2
   280  000019                     i1ESCRIBE_MENSAJE2@tam:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x18
   284  000019                     	ds	1
   285  00001A                     i1ESCRIBE_MENSAJE2@i:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x19
   289  00001A                     	ds	1
   290  00001B                     ??i1_pantallazo:
   291                           
   292                           ; 1 bytes @ 0x1A
   293  00001B                     	ds	2
   294  00001D                     ??_INT1_ISR:
   295                           
   296                           ; 1 bytes @ 0x1C
   297  00001D                     	ds	7
   298  000024                     ?_strlen:
   299                           	callstack 0
   300  000024                     ENVIA_NIBBLE@dato:
   301                           	callstack 0
   302  000024                     LEER_LCD@aux:
   303                           	callstack 0
   304  000024                     strlen@s:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x23
   308  000024                     	ds	1
   309  000025                     ENVIA_CHAR@dato:
   310                           	callstack 0
   311  000025                     ENVIA_LCD_CMD@dato:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x24
   315  000025                     	ds	1
   316  000026                     ENVIA_CHAR@aux:
   317                           	callstack 0
   318  000026                     ENVIA_LCD_CMD@aux:
   319                           	callstack 0
   320  000026                     strlen@a:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x25
   324  000026                     	ds	1
   325  000027                     ??_LCD_CONFIG:
   326  000027                     POS_CURSOR@columna:
   327                           	callstack 0
   328  000027                     CURSOR_ONOFF@estado:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x26
   332  000027                     	ds	1
   333  000028                     ??_LCD_INIT:
   334  000028                     POS_CURSOR@fila:
   335                           	callstack 0
   336  000028                     ESCRIBE_MENSAJE2@cadena:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x27
   340  000028                     	ds	1
   341  000029                     
   342                           ; 1 bytes @ 0x28
   343  000029                     	ds	1
   344  00002A                     ??_ESCRIBE_MENSAJE2:
   345                           
   346                           ; 1 bytes @ 0x29
   347  00002A                     	ds	2
   348  00002C                     ESCRIBE_MENSAJE2@tam:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x2B
   352  00002C                     	ds	1
   353  00002D                     ESCRIBE_MENSAJE2@i:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x2C
   357  00002D                     	ds	1
   358  00002E                     ??_pantallazo:
   359                           
   360                           ; 1 bytes @ 0x2D
   361  00002E                     	ds	2
   362  000030                     
   363                           ; 1 bytes @ 0x2F
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 50 in file "maincode2.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   383 ;;      Params:         0       0       0       0       0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels required when called: 15
   389 ;; This function calls:
   390 ;;		_configuro
   391 ;;		_pantallazo
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text0
   398  000F92                     __ptext0:
   399                           	callstack 0
   400  000F92                     _main:
   401                           	callstack 16
   402  000F92                     
   403                           ;maincode2.c: 51:     configuro();
   404  000F92  ECE3  F004         	call	_configuro	;wreg free
   405  000F96                     
   406                           ;maincode2.c: 52:     pantallazo();
   407  000F96  EC79  F005         	call	_pantallazo	;wreg free
   408  000F9A                     l164:
   409  000F9A  EFCD  F007         	goto	l164
   410  000F9E  EF3D  F000         	goto	start
   411  000FA2                     __end_of_main:
   412                           	callstack 0
   413                           
   414 ;; *************** function _pantallazo *****************
   415 ;; Defined at:
   416 ;;		line 36 in file "maincode2.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 13
   437 ;; This function calls:
   438 ;;		_BORRAR_LCD
   439 ;;		_ESCRIBE_MENSAJE2
   440 ;;		_POS_CURSOR
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text1
   447  000AF2                     __ptext1:
   448                           	callstack 0
   449  000AF2                     _pantallazo:
   450                           	callstack 17
   451  000AF2                     
   452                           ;maincode2.c: 37:     POS_CURSOR(1,0);
   453  000AF2  0E00               	movlw	0
   454  000AF4  6E27               	movwf	POS_CURSOR@columna^0,c
   455  000AF6  0E01               	movlw	1
   456  000AF8  EC06  F006         	call	_POS_CURSOR
   457  000AFC                     
   458                           ;maincode2.c: 38:     ESCRIBE_MENSAJE2("Hola Mundo!");
   459  000AFC  0E11               	movlw	low STR_1
   460  000AFE  6E28               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   461  000B00  0E08               	movlw	high STR_1
   462  000B02  6E29               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   463  000B04  EC0A  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   464  000B08                     
   465                           ;maincode2.c: 39:     POS_CURSOR(2,0);
   466  000B08  0E00               	movlw	0
   467  000B0A  6E27               	movwf	POS_CURSOR@columna^0,c
   468  000B0C  0E02               	movlw	2
   469  000B0E  EC06  F006         	call	_POS_CURSOR
   470                           
   471                           ;maincode2.c: 40:     ESCRIBE_MENSAJE2("Micro semana 13");
   472  000B12  0E01               	movlw	low STR_2
   473  000B14  6E28               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   474  000B16  0E08               	movlw	high STR_2
   475  000B18  6E29               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   476  000B1A  EC0A  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   477  000B1E                     
   478                           ;maincode2.c: 41:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   479  000B1E  0E0B               	movlw	11
   480  000B20  6E2F               	movwf	(??_pantallazo+1)^0,c
   481  000B22  0E26               	movlw	38
   482  000B24  6E2E               	movwf	??_pantallazo^0,c
   483  000B26  0E5E               	movlw	94
   484  000B28                     u417:
   485  000B28  2EE8               	decfsz	wreg,f,c
   486  000B2A  D7FE               	bra	u417
   487  000B2C  2E2E               	decfsz	??_pantallazo^0,f,c
   488  000B2E  D7FC               	bra	u417
   489  000B30  2E2F               	decfsz	(??_pantallazo+1)^0,f,c
   490  000B32  D7FA               	bra	u417
   491  000B34                     
   492                           ;maincode2.c: 42:     BORRAR_LCD();
   493  000B34  ECD5  F007         	call	_BORRAR_LCD	;wreg free
   494  000B38  0012               	return		;funcret
   495  000B3A                     __end_of_pantallazo:
   496                           	callstack 0
   497                           
   498 ;; *************** function _POS_CURSOR *****************
   499 ;; Defined at:
   500 ;;		line 5 in file "LCD.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  fila            1    wreg     unsigned char 
   503 ;;  columna         1   38[COMRAM] unsigned char 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  fila            1   39[COMRAM] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         1       0       0       0       0       0       0       0       0
   516 ;;      Locals:         1       0       0       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0
   518 ;;      Totals:         2       0       0       0       0       0       0       0       0
   519 ;;Total ram usage:        2 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; Hardware stack levels required when called: 12
   522 ;; This function calls:
   523 ;;		_ENVIA_LCD_CMD
   524 ;; This function is called by:
   525 ;;		_pantallazo
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text2
   530  000C0C                     __ptext2:
   531                           	callstack 0
   532  000C0C                     _POS_CURSOR:
   533                           	callstack 17
   534                           
   535                           ;incstack = 0
   536                           ;POS_CURSOR@fila stored from wreg
   537  000C0C  6E28               	movwf	POS_CURSOR@fila^0,c
   538  000C0E                     
   539                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   540  000C0E  0428               	decf	POS_CURSOR@fila^0,w,c
   541  000C10  A4D8               	btfss	status,2,c
   542  000C12  EF0D  F006         	goto	u311
   543  000C16  EF0F  F006         	goto	u310
   544  000C1A                     u311:
   545  000C1A  EF15  F006         	goto	l1613
   546  000C1E                     u310:
   547  000C1E                     
   548                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   549  000C1E  5027               	movf	POS_CURSOR@columna^0,w,c
   550  000C20  0F80               	addlw	128
   551  000C22  ECCE  F006         	call	_ENVIA_LCD_CMD
   552                           
   553                           ;LCD.c: 10:  }
   554  000C26  EF22  F006         	goto	l26
   555  000C2A                     l1613:
   556  000C2A  0E02               	movlw	2
   557  000C2C  1828               	xorwf	POS_CURSOR@fila^0,w,c
   558  000C2E  A4D8               	btfss	status,2,c
   559  000C30  EF1C  F006         	goto	u321
   560  000C34  EF1E  F006         	goto	u320
   561  000C38                     u321:
   562  000C38  EF22  F006         	goto	l26
   563  000C3C                     u320:
   564  000C3C                     
   565                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   566  000C3C  5027               	movf	POS_CURSOR@columna^0,w,c
   567  000C3E  0FC0               	addlw	192
   568  000C40  ECCE  F006         	call	_ENVIA_LCD_CMD
   569  000C44                     l26:
   570  000C44  0012               	return		;funcret
   571  000C46                     __end_of_POS_CURSOR:
   572                           	callstack 0
   573                           
   574 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   575 ;; Defined at:
   576 ;;		line 69 in file "LCD.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  cadena          2   39[COMRAM] PTR const unsigned char 
   579 ;;		 -> STR_2(16), STR_1(12), 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  i               1   44[COMRAM] unsigned char 
   582 ;;  tam             1   43[COMRAM] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         2       0       0       0       0       0       0       0       0
   593 ;;      Locals:         2       0       0       0       0       0       0       0       0
   594 ;;      Temps:          2       0       0       0       0       0       0       0       0
   595 ;;      Totals:         6       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        6 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 12
   599 ;; This function calls:
   600 ;;		_ENVIA_CHAR
   601 ;;		_strlen
   602 ;; This function is called by:
   603 ;;		_pantallazo
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text3
   608  000A14                     __ptext3:
   609                           	callstack 0
   610  000A14                     _ESCRIBE_MENSAJE2:
   611                           	callstack 17
   612  000A14                     
   613                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   614  000A14  C028  F024         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   615  000A18  C029  F025         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   616  000A1C  EC23  F006         	call	_strlen	;wreg free
   617  000A20  5024               	movf	?_strlen^0,w,c
   618  000A22  6E2C               	movwf	ESCRIBE_MENSAJE2@tam^0,c
   619  000A24                     
   620                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   621  000A24  0E00               	movlw	0
   622  000A26  6E2D               	movwf	ESCRIBE_MENSAJE2@i^0,c
   623  000A28  EF25  F005         	goto	l1627
   624  000A2C                     l1623:
   625                           
   626                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   627  000A2C  502D               	movf	ESCRIBE_MENSAJE2@i^0,w,c
   628  000A2E  2428               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
   629  000A30  6E2A               	movwf	??_ESCRIBE_MENSAJE2^0,c
   630  000A32  0E00               	movlw	0
   631  000A34  2029               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
   632  000A36  6E2B               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
   633  000A38  C02A  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   634  000A3C  C02B  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   635  000A40                     	if	0	;tblptru may be non-zero
   636  000A40                     	endif
   637  000A40                     	if	0	;tblptru may be non-zero
   638  000A40                     	endif
   639  000A40  0008               	tblrd		*
   640  000A42  50F5               	movf	tablat,w,c
   641  000A44  ECB4  F006         	call	_ENVIA_CHAR
   642  000A48                     
   643                           ;LCD.c: 77:  }
   644  000A48  2A2D               	incf	ESCRIBE_MENSAJE2@i^0,f,c
   645  000A4A                     l1627:
   646  000A4A  502C               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
   647  000A4C  5C2D               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
   648  000A4E  A0D8               	btfss	status,0,c
   649  000A50  EF2C  F005         	goto	u331
   650  000A54  EF2E  F005         	goto	u330
   651  000A58                     u331:
   652  000A58  EF16  F005         	goto	l1623
   653  000A5C                     u330:
   654  000A5C  0012               	return		;funcret
   655  000A5E                     __end_of_ESCRIBE_MENSAJE2:
   656                           	callstack 0
   657                           
   658 ;; *************** function _strlen *****************
   659 ;; Defined at:
   660 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  s               2   35[COMRAM] PTR const unsigned char 
   663 ;;		 -> STR_2(16), STR_1(12), 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  a               2   37[COMRAM] PTR const unsigned char 
   666 ;;		 -> STR_2(16), STR_1(12), 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  2   35[COMRAM] unsigned int 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         2       0       0       0       0       0       0       0       0
   677 ;;      Locals:         2       0       0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0
   679 ;;      Totals:         4       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        4 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 10
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_ESCRIBE_MENSAJE2
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text4
   691  000C46                     __ptext4:
   692                           	callstack 0
   693  000C46                     _strlen:
   694                           	callstack 18
   695  000C46  C024  F026         	movff	strlen@s,strlen@a
   696  000C4A  C025  F027         	movff	strlen@s+1,strlen@a+1
   697  000C4E  EF2B  F006         	goto	l1495
   698  000C52                     l1493:
   699  000C52  4A24               	infsnz	strlen@s^0,f,c
   700  000C54  2A25               	incf	(strlen@s+1)^0,f,c
   701  000C56                     l1495:
   702  000C56  C024  FFF6         	movff	strlen@s,tblptrl
   703  000C5A  C025  FFF7         	movff	strlen@s+1,tblptrh
   704  000C5E                     	if	0	;tblptru may be non-zero
   705  000C5E                     	endif
   706  000C5E                     	if	0	;tblptru may be non-zero
   707  000C5E                     	endif
   708  000C5E  0008               	tblrd		*
   709  000C60  50F5               	movf	tablat,w,c
   710  000C62  0900               	iorlw	0
   711  000C64  A4D8               	btfss	status,2,c
   712  000C66  EF37  F006         	goto	u281
   713  000C6A  EF39  F006         	goto	u280
   714  000C6E                     u281:
   715  000C6E  EF29  F006         	goto	l1493
   716  000C72                     u280:
   717  000C72  5026               	movf	strlen@a^0,w,c
   718  000C74  5C24               	subwf	strlen@s^0,w,c
   719  000C76  6E24               	movwf	?_strlen^0,c
   720  000C78  5027               	movf	(strlen@a+1)^0,w,c
   721  000C7A  5825               	subwfb	(strlen@s+1)^0,w,c
   722  000C7C  6E25               	movwf	(?_strlen+1)^0,c
   723  000C7E  0012               	return		;funcret
   724  000C80                     __end_of_strlen:
   725                           	callstack 0
   726                           
   727 ;; *************** function _ENVIA_CHAR *****************
   728 ;; Defined at:
   729 ;;		line 80 in file "LCD.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  dato            1    wreg     unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  dato            1   36[COMRAM] unsigned char 
   734 ;;  aux             1   37[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         0       0       0       0       0       0       0       0       0
   745 ;;      Locals:         2       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:         2       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 11
   751 ;; This function calls:
   752 ;;		_ENVIA_NIBBLE
   753 ;;		_LEER_LCD
   754 ;; This function is called by:
   755 ;;		_ESCRIBE_MENSAJE2
   756 ;;		_ESCRIBE_MENSAJE
   757 ;;		_GENERACARACTER
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text5
   762  000D68                     __ptext5:
   763                           	callstack 0
   764  000D68                     _ENVIA_CHAR:
   765                           	callstack 17
   766                           
   767                           ;incstack = 0
   768                           ;ENVIA_CHAR@dato stored from wreg
   769  000D68  6E25               	movwf	ENVIA_CHAR@dato^0,c
   770  000D6A                     
   771                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
   772  000D6A  808D               	bsf	141,0,c	;volatile
   773  000D6C                     
   774                           ;LCD.c: 84:  LEER_LCD();
   775  000D6C  EC0F  F004         	call	_LEER_LCD	;wreg free
   776  000D70                     
   777                           ;LCD.c: 85:  TRISD = 0x00;
   778  000D70  0E00               	movlw	0
   779  000D72  6E95               	movwf	149,c	;volatile
   780  000D74                     
   781                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   782  000D74  0E21               	movlw	33
   783  000D76                     u427:
   784  000D76  2EE8               	decfsz	wreg,f,c
   785  000D78  D7FE               	bra	u427
   786  000D7A  F000               	nop	
   787  000D7C                     
   788                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
   789  000D7C  928D               	bcf	141,1,c	;volatile
   790  000D7E                     
   791                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
   792  000D7E  948D               	bcf	141,2,c	;volatile
   793  000D80                     
   794                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
   795  000D80  808D               	bsf	141,0,c	;volatile
   796  000D82                     
   797                           ;LCD.c: 90:  aux = dato & 0xF0;
   798  000D82  5025               	movf	ENVIA_CHAR@dato^0,w,c
   799  000D84  0BF0               	andlw	240
   800  000D86  6E26               	movwf	ENVIA_CHAR@aux^0,c
   801  000D88                     
   802                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
   803  000D88  5026               	movf	ENVIA_CHAR@aux^0,w,c
   804  000D8A  EC80  F007         	call	_ENVIA_NIBBLE
   805  000D8E                     
   806                           ;LCD.c: 92:  aux = dato << 4;
   807  000D8E  3825               	swapf	ENVIA_CHAR@dato^0,w,c
   808  000D90  0BF0               	andlw	240
   809  000D92  6E26               	movwf	ENVIA_CHAR@aux^0,c
   810  000D94                     
   811                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
   812  000D94  5026               	movf	ENVIA_CHAR@aux^0,w,c
   813  000D96  EC80  F007         	call	_ENVIA_NIBBLE
   814  000D9A  0012               	return		;funcret
   815  000D9C                     __end_of_ENVIA_CHAR:
   816                           	callstack 0
   817                           
   818 ;; *************** function _configuro *****************
   819 ;; Defined at:
   820 ;;		line 6 in file "maincode2.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   834 ;;      Params:         0       0       0       0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 14
   841 ;; This function calls:
   842 ;;		_LCD_INIT
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text6
   849  0009C6                     __ptext6:
   850                           	callstack 0
   851  0009C6                     _configuro:
   852                           	callstack 16
   853  0009C6                     
   854                           ;maincode2.c: 7:     OSCCON = 0x52;
   855  0009C6  0E52               	movlw	82
   856  0009C8  6ED3               	movwf	211,c	;volatile
   857                           
   858                           ;maincode2.c: 8:     TRISE = 0xF8;
   859  0009CA  0EF8               	movlw	248
   860  0009CC  6E96               	movwf	150,c	;volatile
   861                           
   862                           ;maincode2.c: 9:     ANSELE = 0xF8;
   863  0009CE  0EF8               	movlw	248
   864  0009D0  010F               	movlb	15	; () banked
   865  0009D2  6F5F               	movwf	95,b	;volatile
   866                           
   867                           ;maincode2.c: 10:     TRISD = 0x0F;
   868  0009D4  0E0F               	movlw	15
   869  0009D6  6E95               	movwf	149,c	;volatile
   870                           
   871                           ;maincode2.c: 11:     ANSELD = 0x0F;
   872  0009D8  0E0F               	movlw	15
   873  0009DA  6F5E               	movwf	94,b	;volatile
   874  0009DC                     
   875                           ; BSR set to: 15
   876                           ;maincode2.c: 12:     TRISBbits.TRISB0 = 1;
   877  0009DC  8093               	bsf	147,0,c	;volatile
   878  0009DE                     
   879                           ; BSR set to: 15
   880                           ;maincode2.c: 13:     ANSELBbits.ANSB0 = 0;
   881  0009DE  915C               	bcf	92,0,b	;volatile
   882  0009E0                     
   883                           ; BSR set to: 15
   884                           ;maincode2.c: 14:     TRISBbits.TRISB1 = 1;
   885  0009E0  8293               	bsf	147,1,c	;volatile
   886  0009E2                     
   887                           ; BSR set to: 15
   888                           ;maincode2.c: 15:     ANSELBbits.ANSB1 = 0;
   889  0009E2  935C               	bcf	92,1,b	;volatile
   890  0009E4                     
   891                           ; BSR set to: 15
   892                           ;maincode2.c: 16:     INTCON2bits.RBPU = 0;
   893  0009E4  9EF1               	bcf	241,7,c	;volatile
   894  0009E6                     
   895                           ; BSR set to: 15
   896                           ;maincode2.c: 17:     WPUBbits.WPUB0 = 1;
   897  0009E6  8085               	bsf	133,0,c	;volatile
   898  0009E8                     
   899                           ; BSR set to: 15
   900                           ;maincode2.c: 18:     WPUBbits.WPUB1 = 1;
   901  0009E8  8285               	bsf	133,1,c	;volatile
   902  0009EA                     
   903                           ; BSR set to: 15
   904                           ;maincode2.c: 19:     RCONbits.IPEN = 1;
   905  0009EA  8ED0               	bsf	208,7,c	;volatile
   906  0009EC                     
   907                           ; BSR set to: 15
   908                           ;maincode2.c: 20:     INTCONbits.GIEH = 1;
   909  0009EC  8EF2               	bsf	242,7,c	;volatile
   910  0009EE                     
   911                           ; BSR set to: 15
   912                           ;maincode2.c: 21:     INTCONbits.GIEL = 1;
   913  0009EE  8CF2               	bsf	242,6,c	;volatile
   914  0009F0                     
   915                           ; BSR set to: 15
   916                           ;maincode2.c: 22:     INTCONbits.INT0IE = 1;
   917  0009F0  88F2               	bsf	242,4,c	;volatile
   918  0009F2                     
   919                           ; BSR set to: 15
   920                           ;maincode2.c: 23:     INTCON2bits.INTEDG0 = 0;
   921  0009F2  9CF1               	bcf	241,6,c	;volatile
   922  0009F4                     
   923                           ; BSR set to: 15
   924                           ;maincode2.c: 24:     INTCON3bits.INT1E = 1;
   925  0009F4  86F0               	bsf	240,3,c	;volatile
   926  0009F6                     
   927                           ; BSR set to: 15
   928                           ;maincode2.c: 25:     INTCON3bits.INT1IP = 0;
   929  0009F6  9CF0               	bcf	240,6,c	;volatile
   930  0009F8                     
   931                           ; BSR set to: 15
   932                           ;maincode2.c: 26:     INTCON2bits.INTEDG1 = 0;
   933  0009F8  9AF1               	bcf	241,5,c	;volatile
   934  0009FA                     
   935                           ; BSR set to: 15
   936                           ;maincode2.c: 27:     TRISCbits.RC6 = 0;
   937  0009FA  9C94               	bcf	148,6,c	;volatile
   938  0009FC                     
   939                           ; BSR set to: 15
   940                           ;maincode2.c: 28:     ANSELCbits.ANSC6 = 0;
   941  0009FC  9D5D               	bcf	93,6,b	;volatile
   942                           
   943                           ;maincode2.c: 29:     SPBRGH1 = 0;
   944  0009FE  0E00               	movlw	0
   945  000A00  6EB0               	movwf	176,c	;volatile
   946                           
   947                           ;maincode2.c: 30:     SPBRG1 = 25;
   948  000A02  0E19               	movlw	25
   949  000A04  6EAF               	movwf	175,c	;volatile
   950                           
   951                           ;maincode2.c: 31:     TXSTA1 = 0x24;
   952  000A06  0E24               	movlw	36
   953  000A08  6EAC               	movwf	172,c	;volatile
   954                           
   955                           ;maincode2.c: 32:     RCSTA1 = 0x80;
   956  000A0A  0E80               	movlw	128
   957  000A0C  6EAB               	movwf	171,c	;volatile
   958  000A0E                     
   959                           ; BSR set to: 15
   960                           ;maincode2.c: 33:     LCD_INIT();
   961  000A0E  EC50  F007         	call	_LCD_INIT	;wreg free
   962  000A12  0012               	return		;funcret
   963  000A14                     __end_of_configuro:
   964                           	callstack 0
   965                           
   966 ;; *************** function _LCD_INIT *****************
   967 ;; Defined at:
   968 ;;		line 184 in file "LCD.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   982 ;;      Params:         0       0       0       0       0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0
   984 ;;      Temps:          1       0       0       0       0       0       0       0       0
   985 ;;      Totals:         1       0       0       0       0       0       0       0       0
   986 ;;Total ram usage:        1 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 13
   989 ;; This function calls:
   990 ;;		_BORRAR_LCD
   991 ;;		_CURSOR_HOME
   992 ;;		_CURSOR_ONOFF
   993 ;;		_LCD_CONFIG
   994 ;; This function is called by:
   995 ;;		_configuro
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text7
  1000  000EA0                     __ptext7:
  1001                           	callstack 0
  1002  000EA0                     _LCD_INIT:
  1003                           	callstack 16
  1004  000EA0                     
  1005                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1006  000EA0  0E14               	movlw	20
  1007  000EA2  6E28               	movwf	??_LCD_INIT^0,c
  1008  000EA4  0E7A               	movlw	122
  1009  000EA6                     u437:
  1010  000EA6  2EE8               	decfsz	wreg,f,c
  1011  000EA8  D7FE               	bra	u437
  1012  000EAA  2E28               	decfsz	??_LCD_INIT^0,f,c
  1013  000EAC  D7FC               	bra	u437
  1014  000EAE                     
  1015                           ;LCD.c: 186:     LCD_CONFIG();
  1016  000EAE  ECBA  F004         	call	_LCD_CONFIG	;wreg free
  1017  000EB2                     
  1018                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1019  000EB2  0E14               	movlw	20
  1020  000EB4  6E28               	movwf	??_LCD_INIT^0,c
  1021  000EB6  0E7A               	movlw	122
  1022  000EB8                     u447:
  1023  000EB8  2EE8               	decfsz	wreg,f,c
  1024  000EBA  D7FE               	bra	u447
  1025  000EBC  2E28               	decfsz	??_LCD_INIT^0,f,c
  1026  000EBE  D7FC               	bra	u447
  1027                           
  1028                           ;LCD.c: 188:     BORRAR_LCD();
  1029  000EC0  ECD5  F007         	call	_BORRAR_LCD	;wreg free
  1030                           
  1031                           ;LCD.c: 189:     CURSOR_HOME();
  1032  000EC4  ECD1  F007         	call	_CURSOR_HOME	;wreg free
  1033                           
  1034                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1035  000EC8  0E01               	movlw	1
  1036  000ECA  EC68  F007         	call	_CURSOR_ONOFF
  1037  000ECE  0012               	return		;funcret
  1038  000ED0                     __end_of_LCD_INIT:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _LCD_CONFIG *****************
  1042 ;; Defined at:
  1043 ;;		line 101 in file "LCD.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        1 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 12
  1064 ;; This function calls:
  1065 ;;		_ENVIA_LCD_CMD
  1066 ;;		_ENVIA_NIBBLE
  1067 ;; This function is called by:
  1068 ;;		_LCD_INIT
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text8
  1073  000974                     __ptext8:
  1074                           	callstack 0
  1075  000974                     _LCD_CONFIG:
  1076                           	callstack 16
  1077  000974                     
  1078                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
  1079  000974  908D               	bcf	141,0,c	;volatile
  1080                           
  1081                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
  1082  000976  928D               	bcf	141,1,c	;volatile
  1083  000978                     
  1084                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1085  000978  0E30               	movlw	48
  1086  00097A  EC80  F007         	call	_ENVIA_NIBBLE
  1087  00097E                     
  1088                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1089  00097E  0E03               	movlw	3
  1090  000980  6E27               	movwf	??_LCD_CONFIG^0,c
  1091  000982  0E98               	movlw	152
  1092  000984                     u457:
  1093  000984  2EE8               	decfsz	wreg,f,c
  1094  000986  D7FE               	bra	u457
  1095  000988  2E27               	decfsz	??_LCD_CONFIG^0,f,c
  1096  00098A  D7FC               	bra	u457
  1097  00098C                     
  1098                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1099  00098C  0E30               	movlw	48
  1100  00098E  EC80  F007         	call	_ENVIA_NIBBLE
  1101                           
  1102                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1103  000992  0E21               	movlw	33
  1104  000994                     u467:
  1105  000994  2EE8               	decfsz	wreg,f,c
  1106  000996  D7FE               	bra	u467
  1107  000998  F000               	nop	
  1108  00099A                     
  1109                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1110  00099A  0E30               	movlw	48
  1111  00099C  EC80  F007         	call	_ENVIA_NIBBLE
  1112  0009A0                     
  1113                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1114  0009A0  0E20               	movlw	32
  1115  0009A2  EC80  F007         	call	_ENVIA_NIBBLE
  1116  0009A6                     
  1117                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1118  0009A6  0E01               	movlw	1
  1119  0009A8  ECCE  F006         	call	_ENVIA_LCD_CMD
  1120  0009AC                     
  1121                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1122  0009AC  0E28               	movlw	40
  1123  0009AE  ECCE  F006         	call	_ENVIA_LCD_CMD
  1124  0009B2                     
  1125                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1126  0009B2  0E0F               	movlw	15
  1127  0009B4  ECCE  F006         	call	_ENVIA_LCD_CMD
  1128  0009B8                     
  1129                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1130  0009B8  0E06               	movlw	6
  1131  0009BA  ECCE  F006         	call	_ENVIA_LCD_CMD
  1132  0009BE                     
  1133                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1134  0009BE  0E01               	movlw	1
  1135  0009C0  ECCE  F006         	call	_ENVIA_LCD_CMD
  1136  0009C4  0012               	return		;funcret
  1137  0009C6                     __end_of_LCD_CONFIG:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _CURSOR_ONOFF *****************
  1141 ;; Defined at:
  1142 ;;		line 54 in file "LCD.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  estado          1    wreg     unsigned char 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  estado          1   38[COMRAM] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        1 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 12
  1163 ;; This function calls:
  1164 ;;		_ENVIA_LCD_CMD
  1165 ;; This function is called by:
  1166 ;;		_LCD_INIT
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text9
  1171  000ED0                     __ptext9:
  1172                           	callstack 0
  1173  000ED0                     _CURSOR_ONOFF:
  1174                           	callstack 16
  1175                           
  1176                           ;incstack = 0
  1177                           ;CURSOR_ONOFF@estado stored from wreg
  1178  000ED0  6E27               	movwf	CURSOR_ONOFF@estado^0,c
  1179  000ED2                     
  1180                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1181  000ED2  5027               	movf	CURSOR_ONOFF@estado^0,w,c
  1182  000ED4  A4D8               	btfss	status,2,c
  1183  000ED6  EF6F  F007         	goto	u41
  1184  000EDA  EF71  F007         	goto	u40
  1185  000EDE                     u41:
  1186  000EDE  EF74  F007         	goto	l1025
  1187  000EE2                     u40:
  1188  000EE2  0E0E               	movlw	14
  1189  000EE4  ECCE  F006         	call	_ENVIA_LCD_CMD
  1190  000EE8                     l1025:
  1191                           
  1192                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1193  000EE8  0427               	decf	CURSOR_ONOFF@estado^0,w,c
  1194  000EEA  A4D8               	btfss	status,2,c
  1195  000EEC  EF7A  F007         	goto	u51
  1196  000EF0  EF7C  F007         	goto	u50
  1197  000EF4                     u51:
  1198  000EF4  EF7F  F007         	goto	l56
  1199  000EF8                     u50:
  1200  000EF8  0E0C               	movlw	12
  1201  000EFA  ECCE  F006         	call	_ENVIA_LCD_CMD
  1202  000EFE                     l56:
  1203  000EFE  0012               	return		;funcret
  1204  000F00                     __end_of_CURSOR_ONOFF:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _CURSOR_HOME *****************
  1208 ;; Defined at:
  1209 ;;		line 29 in file "LCD.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 12
  1230 ;; This function calls:
  1231 ;;		_ENVIA_LCD_CMD
  1232 ;; This function is called by:
  1233 ;;		_LCD_INIT
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text10
  1238  000FA2                     __ptext10:
  1239                           	callstack 0
  1240  000FA2                     _CURSOR_HOME:
  1241                           	callstack 16
  1242  000FA2                     
  1243                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1244  000FA2  0E02               	movlw	2
  1245  000FA4  ECCE  F006         	call	_ENVIA_LCD_CMD
  1246  000FA8  0012               	return		;funcret
  1247  000FAA                     __end_of_CURSOR_HOME:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _BORRAR_LCD *****************
  1251 ;; Defined at:
  1252 ;;		line 96 in file "LCD.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 12
  1273 ;; This function calls:
  1274 ;;		_ENVIA_LCD_CMD
  1275 ;; This function is called by:
  1276 ;;		_LCD_INIT
  1277 ;;		_pantallazo
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text11
  1282  000FAA                     __ptext11:
  1283                           	callstack 0
  1284  000FAA                     _BORRAR_LCD:
  1285                           	callstack 17
  1286  000FAA                     
  1287                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1288  000FAA  0E01               	movlw	1
  1289  000FAC  ECCE  F006         	call	_ENVIA_LCD_CMD
  1290  000FB0  0012               	return		;funcret
  1291  000FB2                     __end_of_BORRAR_LCD:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _ENVIA_LCD_CMD *****************
  1295 ;; Defined at:
  1296 ;;		line 128 in file "LCD.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  dato            1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  dato            1   36[COMRAM] unsigned char 
  1301 ;;  aux             1   37[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1311 ;;      Params:         0       0       0       0       0       0       0       0       0
  1312 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1314 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1315 ;;Total ram usage:        2 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 11
  1318 ;; This function calls:
  1319 ;;		_ENVIA_NIBBLE
  1320 ;;		_LEER_LCD
  1321 ;; This function is called by:
  1322 ;;		_POS_CURSOR
  1323 ;;		_CURSOR_HOME
  1324 ;;		_CURSOR_ONOFF
  1325 ;;		_BORRAR_LCD
  1326 ;;		_LCD_CONFIG
  1327 ;;		_BLINK_CURSOR
  1328 ;;		_DISPLAY_ONOFF
  1329 ;;		_CURSOR_SHIFTLEFT
  1330 ;;		_CURSOR_SHIFTRIGHT
  1331 ;;		_DISPLAY_SHIFTLEFT
  1332 ;;		_DISPLAY_SHIFTRIGHT
  1333 ;;		_GENERACARACTER
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text12
  1338  000D9C                     __ptext12:
  1339                           	callstack 0
  1340  000D9C                     _ENVIA_LCD_CMD:
  1341                           	callstack 17
  1342                           
  1343                           ;incstack = 0
  1344                           ;ENVIA_LCD_CMD@dato stored from wreg
  1345  000D9C  6E25               	movwf	ENVIA_LCD_CMD@dato^0,c
  1346  000D9E                     
  1347                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1348  000D9E  908D               	bcf	141,0,c	;volatile
  1349  000DA0                     
  1350                           ;LCD.c: 132:  LEER_LCD();
  1351  000DA0  EC0F  F004         	call	_LEER_LCD	;wreg free
  1352  000DA4                     
  1353                           ;LCD.c: 133:  TRISD = 0b00000000;
  1354  000DA4  0E00               	movlw	0
  1355  000DA6  6E95               	movwf	149,c	;volatile
  1356  000DA8                     
  1357                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1358  000DA8  0E21               	movlw	33
  1359  000DAA                     u477:
  1360  000DAA  2EE8               	decfsz	wreg,f,c
  1361  000DAC  D7FE               	bra	u477
  1362  000DAE  F000               	nop	
  1363  000DB0                     
  1364                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1365  000DB0  928D               	bcf	141,1,c	;volatile
  1366  000DB2                     
  1367                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1368  000DB2  948D               	bcf	141,2,c	;volatile
  1369  000DB4                     
  1370                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1371  000DB4  908D               	bcf	141,0,c	;volatile
  1372  000DB6                     
  1373                           ;LCD.c: 138:  aux = dato & 0xF0;
  1374  000DB6  5025               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1375  000DB8  0BF0               	andlw	240
  1376  000DBA  6E26               	movwf	ENVIA_LCD_CMD@aux^0,c
  1377  000DBC                     
  1378                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1379  000DBC  5026               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1380  000DBE  EC80  F007         	call	_ENVIA_NIBBLE
  1381  000DC2                     
  1382                           ;LCD.c: 140:  aux = dato<<4;
  1383  000DC2  3825               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1384  000DC4  0BF0               	andlw	240
  1385  000DC6  6E26               	movwf	ENVIA_LCD_CMD@aux^0,c
  1386  000DC8                     
  1387                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1388  000DC8  5026               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1389  000DCA  EC80  F007         	call	_ENVIA_NIBBLE
  1390  000DCE  0012               	return		;funcret
  1391  000DD0                     __end_of_ENVIA_LCD_CMD:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _LEER_LCD *****************
  1395 ;; Defined at:
  1396 ;;		line 144 in file "LCD.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  aux             1   35[COMRAM] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0
  1411 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1413 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1414 ;;Total ram usage:        1 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 10
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_ENVIA_CHAR
  1421 ;;		_ENVIA_LCD_CMD
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text13
  1426  00081E                     __ptext13:
  1427                           	callstack 0
  1428  00081E                     _LEER_LCD:
  1429                           	callstack 17
  1430  00081E                     
  1431                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1432  00081E  0EF8               	movlw	248
  1433  000820  6E95               	movwf	149,c	;volatile
  1434  000822                     
  1435                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1436  000822  908D               	bcf	141,0,c	;volatile
  1437  000824                     
  1438                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1439  000824  828D               	bsf	141,1,c	;volatile
  1440  000826                     
  1441                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1442  000826  848D               	bsf	141,2,c	;volatile
  1443  000828                     
  1444                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1445  000828  0E21               	movlw	33
  1446  00082A                     u487:
  1447  00082A  2EE8               	decfsz	wreg,f,c
  1448  00082C  D7FE               	bra	u487
  1449  00082E  F000               	nop	
  1450  000830                     
  1451                           ;LCD.c: 152:  aux = PORTD;
  1452  000830  CF83 F024          	movff	3971,LEER_LCD@aux	;volatile
  1453  000834                     
  1454                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1455  000834  948D               	bcf	141,2,c	;volatile
  1456  000836                     
  1457                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1458  000836  0E21               	movlw	33
  1459  000838                     u497:
  1460  000838  2EE8               	decfsz	wreg,f,c
  1461  00083A  D7FE               	bra	u497
  1462  00083C  F000               	nop	
  1463  00083E                     
  1464                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1465  00083E  848D               	bsf	141,2,c	;volatile
  1466  000840                     
  1467                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1468  000840  0E21               	movlw	33
  1469  000842                     u507:
  1470  000842  2EE8               	decfsz	wreg,f,c
  1471  000844  D7FE               	bra	u507
  1472  000846  F000               	nop	
  1473  000848                     
  1474                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1475  000848  948D               	bcf	141,2,c	;volatile
  1476  00084A                     l881:
  1477                           
  1478                           ;LCD.c: 158:  aux = aux & 0x80;
  1479  00084A  5024               	movf	LEER_LCD@aux^0,w,c
  1480  00084C  0B80               	andlw	128
  1481  00084E  6E24               	movwf	LEER_LCD@aux^0,c
  1482                           
  1483                           ;LCD.c: 159:  while(aux == 0x80)
  1484  000850  EF3E  F004         	goto	l895
  1485  000854                     l87:
  1486                           
  1487                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1488  000854  848D               	bsf	141,2,c	;volatile
  1489  000856                     
  1490                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1491  000856  0E21               	movlw	33
  1492  000858                     u517:
  1493  000858  2EE8               	decfsz	wreg,f,c
  1494  00085A  D7FE               	bra	u517
  1495  00085C  F000               	nop	
  1496  00085E                     
  1497                           ;LCD.c: 163:             aux = PORTD;
  1498  00085E  CF83 F024          	movff	3971,LEER_LCD@aux	;volatile
  1499  000862                     
  1500                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1501  000862  948D               	bcf	141,2,c	;volatile
  1502                           
  1503                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1504  000864  0E21               	movlw	33
  1505  000866                     u527:
  1506  000866  2EE8               	decfsz	wreg,f,c
  1507  000868  D7FE               	bra	u527
  1508  00086A  F000               	nop	
  1509  00086C                     
  1510                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1511  00086C  848D               	bsf	141,2,c	;volatile
  1512                           
  1513                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1514  00086E  0E21               	movlw	33
  1515  000870                     u537:
  1516  000870  2EE8               	decfsz	wreg,f,c
  1517  000872  D7FE               	bra	u537
  1518  000874  F000               	nop	
  1519  000876                     
  1520                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1521  000876  948D               	bcf	141,2,c	;volatile
  1522  000878  EF25  F004         	goto	l881
  1523  00087C                     l895:
  1524                           
  1525                           ;LCD.c: 159:  while(aux == 0x80)
  1526  00087C  0E80               	movlw	128
  1527  00087E  1824               	xorwf	LEER_LCD@aux^0,w,c
  1528  000880  B4D8               	btfsc	status,2,c
  1529  000882  EF45  F004         	goto	u11
  1530  000886  EF47  F004         	goto	u10
  1531  00088A                     u11:
  1532  00088A  EF2A  F004         	goto	l87
  1533  00088E                     u10:
  1534  00088E  0012               	return		;funcret
  1535  000890                     __end_of_LEER_LCD:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _ENVIA_NIBBLE *****************
  1539 ;; Defined at:
  1540 ;;		line 118 in file "LCD.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  dato            1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  dato            1   35[COMRAM] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1557 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 10
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_ENVIA_CHAR
  1565 ;;		_LCD_CONFIG
  1566 ;;		_ENVIA_LCD_CMD
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text14
  1571  000F00                     __ptext14:
  1572                           	callstack 0
  1573  000F00                     _ENVIA_NIBBLE:
  1574                           	callstack 17
  1575                           
  1576                           ;incstack = 0
  1577                           ;ENVIA_NIBBLE@dato stored from wreg
  1578  000F00  6E24               	movwf	ENVIA_NIBBLE@dato^0,c
  1579  000F02                     
  1580                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1581  000F02  0E0F               	movlw	15
  1582  000F04  168C               	andwf	140,f,c	;volatile
  1583                           
  1584                           ;LCD.c: 121:  dato &= 0xF0;
  1585  000F06  0EF0               	movlw	240
  1586  000F08  1624               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1587                           
  1588                           ;LCD.c: 122:  LATD|= dato;
  1589  000F0A  5024               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1590  000F0C  128C               	iorwf	140,f,c	;volatile
  1591  000F0E                     
  1592                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  1593  000F0E  848D               	bsf	141,2,c	;volatile
  1594  000F10                     
  1595                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1596  000F10  0E21               	movlw	33
  1597  000F12                     u547:
  1598  000F12  2EE8               	decfsz	wreg,f,c
  1599  000F14  D7FE               	bra	u547
  1600  000F16  F000               	nop	
  1601  000F18                     
  1602                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  1603  000F18  948D               	bcf	141,2,c	;volatile
  1604  000F1A  0012               	return		;funcret
  1605  000F1C                     __end_of_ENVIA_NIBBLE:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _INT1_ISR *****************
  1609 ;; Defined at:
  1610 ;;		line 67 in file "maincode2.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        7 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 9
  1631 ;; This function calls:
  1632 ;;		_EUSART_Sendbyte
  1633 ;;		i1_pantallazo
  1634 ;; This function is called by:
  1635 ;;		Interrupt level 1
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	intcodelo
  1640  000018                     __pintcodelo:
  1641                           	callstack 0
  1642  000018                     _INT1_ISR:
  1643                           	callstack 16
  1644                           
  1645                           ;incstack = 0
  1646  000018  8030               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1647  00001A  CFD8 F01D          	movff	status,??_INT1_ISR
  1648  00001E  CFE8 F01E          	movff	wreg,??_INT1_ISR+1
  1649  000022  CFE0 F01F          	movff	bsr,??_INT1_ISR+2
  1650  000026  CFF6 F020          	movff	tblptrl,??_INT1_ISR+3
  1651  00002A  CFF7 F021          	movff	tblptrh,??_INT1_ISR+4
  1652  00002E  CFF8 F022          	movff	tblptru,??_INT1_ISR+5
  1653  000032  CFF5 F023          	movff	tablat,??_INT1_ISR+6
  1654  000036                     
  1655                           ;maincode2.c: 68:     INTCON3bits.INT1IF = 0;
  1656  000036  90F0               	bcf	240,0,c	;volatile
  1657  000038                     
  1658                           ;maincode2.c: 69:     EUSART_Sendbyte('m');
  1659  000038  0E6D               	movlw	109
  1660  00003A  ECAA  F007         	call	_EUSART_Sendbyte
  1661                           
  1662                           ;maincode2.c: 70:     EUSART_Sendbyte('u');
  1663  00003E  0E75               	movlw	117
  1664  000040  ECAA  F007         	call	_EUSART_Sendbyte
  1665                           
  1666                           ;maincode2.c: 71:     EUSART_Sendbyte('n');
  1667  000044  0E6E               	movlw	110
  1668  000046  ECAA  F007         	call	_EUSART_Sendbyte
  1669                           
  1670                           ;maincode2.c: 72:     EUSART_Sendbyte('d');
  1671  00004A  0E64               	movlw	100
  1672  00004C  ECAA  F007         	call	_EUSART_Sendbyte
  1673                           
  1674                           ;maincode2.c: 73:     EUSART_Sendbyte('o');
  1675  000050  0E6F               	movlw	111
  1676  000052  ECAA  F007         	call	_EUSART_Sendbyte
  1677  000056                     
  1678                           ;maincode2.c: 74:     pantallazo();
  1679  000056  EC9D  F005         	call	i1_pantallazo	;wreg free
  1680  00005A  C023  FFF5         	movff	??_INT1_ISR+6,tablat
  1681  00005E  C022  FFF8         	movff	??_INT1_ISR+5,tblptru
  1682  000062  C021  FFF7         	movff	??_INT1_ISR+4,tblptrh
  1683  000066  C020  FFF6         	movff	??_INT1_ISR+3,tblptrl
  1684  00006A  C01F  FFE0         	movff	??_INT1_ISR+2,bsr
  1685  00006E  C01E  FFE8         	movff	??_INT1_ISR+1,wreg
  1686  000072  C01D  FFD8         	movff	??_INT1_ISR,status
  1687  000076  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1688  000078  0010               	retfie	
  1689  00007A                     __end_of_INT1_ISR:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function i1_pantallazo *****************
  1693 ;; Defined at:
  1694 ;;		line 36 in file "maincode2.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1710 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1711 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 8
  1715 ;; This function calls:
  1716 ;;		i1_BORRAR_LCD
  1717 ;;		i1_ESCRIBE_MENSAJE2
  1718 ;;		i1_POS_CURSOR
  1719 ;; This function is called by:
  1720 ;;		_INT1_ISR
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text16
  1725  000B3A                     __ptext16:
  1726                           	callstack 0
  1727  000B3A                     i1_pantallazo:
  1728                           	callstack 16
  1729  000B3A                     
  1730                           ;maincode2.c: 37:     POS_CURSOR(1,0);
  1731  000B3A  0E00               	movlw	0
  1732  000B3C  6E14               	movwf	i1POS_CURSOR@columna^0,c
  1733  000B3E  0E01               	movlw	1
  1734  000B40  EC40  F006         	call	i1_POS_CURSOR
  1735  000B44                     
  1736                           ;maincode2.c: 38:     ESCRIBE_MENSAJE2("Hola Mundo!");
  1737  000B44  0E11               	movlw	low STR_1
  1738  000B46  6E15               	movwf	i1ESCRIBE_MENSAJE2@cadena^0,c
  1739  000B48  0E08               	movlw	high STR_1
  1740  000B4A  6E16               	movwf	(i1ESCRIBE_MENSAJE2@cadena+1)^0,c
  1741  000B4C  EC2F  F005         	call	i1_ESCRIBE_MENSAJE2	;wreg free
  1742  000B50                     
  1743                           ;maincode2.c: 39:     POS_CURSOR(2,0);
  1744  000B50  0E00               	movlw	0
  1745  000B52  6E14               	movwf	i1POS_CURSOR@columna^0,c
  1746  000B54  0E02               	movlw	2
  1747  000B56  EC40  F006         	call	i1_POS_CURSOR
  1748                           
  1749                           ;maincode2.c: 40:     ESCRIBE_MENSAJE2("Micro semana 13");
  1750  000B5A  0E01               	movlw	low STR_2
  1751  000B5C  6E15               	movwf	i1ESCRIBE_MENSAJE2@cadena^0,c
  1752  000B5E  0E08               	movlw	high STR_2
  1753  000B60  6E16               	movwf	(i1ESCRIBE_MENSAJE2@cadena+1)^0,c
  1754  000B62  EC2F  F005         	call	i1_ESCRIBE_MENSAJE2	;wreg free
  1755  000B66                     
  1756                           ;maincode2.c: 41:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1757  000B66  0E0B               	movlw	11
  1758  000B68  6E1C               	movwf	(??i1_pantallazo+1)^0,c
  1759  000B6A  0E26               	movlw	38
  1760  000B6C  6E1B               	movwf	??i1_pantallazo^0,c
  1761  000B6E  0E5E               	movlw	94
  1762  000B70                     i1u55_27:
  1763  000B70  2EE8               	decfsz	wreg,f,c
  1764  000B72  D7FE               	bra	i1u55_27
  1765  000B74  2E1B               	decfsz	??i1_pantallazo^0,f,c
  1766  000B76  D7FC               	bra	i1u55_27
  1767  000B78  2E1C               	decfsz	(??i1_pantallazo+1)^0,f,c
  1768  000B7A  D7FA               	bra	i1u55_27
  1769  000B7C                     
  1770                           ;maincode2.c: 42:     BORRAR_LCD();
  1771  000B7C  ECD9  F007         	call	i1_BORRAR_LCD	;wreg free
  1772  000B80  0012               	return		;funcret
  1773  000B82                     __end_ofi1_pantallazo:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function i1_POS_CURSOR *****************
  1777 ;; Defined at:
  1778 ;;		line 5 in file "LCD.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  fila            1    wreg     unsigned char 
  1781 ;;  columna         1   19[COMRAM] unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  fila            1   20[COMRAM] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1793 ;;      Params:         1       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        2 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 7
  1800 ;; This function calls:
  1801 ;;		i1_ENVIA_LCD_CMD
  1802 ;; This function is called by:
  1803 ;;		i1_pantallazo
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text17
  1808  000C80                     __ptext17:
  1809                           	callstack 0
  1810  000C80                     i1_POS_CURSOR:
  1811                           	callstack 16
  1812                           
  1813                           ;incstack = 0
  1814                           ;i1POS_CURSOR@fila stored from wreg
  1815  000C80  6E15               	movwf	i1POS_CURSOR@fila^0,c
  1816  000C82                     
  1817                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1818  000C82  0415               	decf	i1POS_CURSOR@fila^0,w,c
  1819  000C84  A4D8               	btfss	status,2,c
  1820  000C86  EF47  F006         	goto	i1u34_21
  1821  000C8A  EF49  F006         	goto	i1u34_20
  1822  000C8E                     i1u34_21:
  1823  000C8E  EF4F  F006         	goto	i1l1633
  1824  000C92                     i1u34_20:
  1825  000C92                     
  1826                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1827  000C92  5014               	movf	i1POS_CURSOR@columna^0,w,c
  1828  000C94  0F80               	addlw	128
  1829  000C96  EC02  F007         	call	i1_ENVIA_LCD_CMD
  1830                           
  1831                           ;LCD.c: 10:  }
  1832  000C9A  EF5C  F006         	goto	i1l26
  1833  000C9E                     i1l1633:
  1834  000C9E  0E02               	movlw	2
  1835  000CA0  1815               	xorwf	i1POS_CURSOR@fila^0,w,c
  1836  000CA2  A4D8               	btfss	status,2,c
  1837  000CA4  EF56  F006         	goto	i1u35_21
  1838  000CA8  EF58  F006         	goto	i1u35_20
  1839  000CAC                     i1u35_21:
  1840  000CAC  EF5C  F006         	goto	i1l26
  1841  000CB0                     i1u35_20:
  1842  000CB0                     
  1843                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1844  000CB0  5014               	movf	i1POS_CURSOR@columna^0,w,c
  1845  000CB2  0FC0               	addlw	192
  1846  000CB4  EC02  F007         	call	i1_ENVIA_LCD_CMD
  1847  000CB8                     i1l26:
  1848  000CB8  0012               	return		;funcret
  1849  000CBA                     __end_ofi1_POS_CURSOR:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function i1_ESCRIBE_MENSAJE2 *****************
  1853 ;; Defined at:
  1854 ;;		line 69 in file "LCD.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  cadena          2   20[COMRAM] PTR const unsigned char 
  1857 ;;		 -> STR_2(16), STR_1(12), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  i               1   25[COMRAM] unsigned char 
  1860 ;;  tam             1   24[COMRAM] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1870 ;;      Params:         2       0       0       0       0       0       0       0       0
  1871 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1873 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1874 ;;Total ram usage:        6 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 7
  1877 ;; This function calls:
  1878 ;;		i1_ENVIA_CHAR
  1879 ;;		i1_strlen
  1880 ;; This function is called by:
  1881 ;;		i1_pantallazo
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text18
  1886  000A5E                     __ptext18:
  1887                           	callstack 0
  1888  000A5E                     i1_ESCRIBE_MENSAJE2:
  1889                           	callstack 16
  1890  000A5E                     
  1891                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  1892  000A5E  C015  F011         	movff	i1ESCRIBE_MENSAJE2@cadena,i1strlen@s
  1893  000A62  C016  F012         	movff	i1ESCRIBE_MENSAJE2@cadena+1,i1strlen@s+1
  1894  000A66  EC5D  F006         	call	i1_strlen	;wreg free
  1895  000A6A  5011               	movf	?i1_strlen^0,w,c
  1896  000A6C  6E19               	movwf	i1ESCRIBE_MENSAJE2@tam^0,c
  1897  000A6E                     
  1898                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  1899  000A6E  0E00               	movlw	0
  1900  000A70  6E1A               	movwf	i1ESCRIBE_MENSAJE2@i^0,c
  1901  000A72  EF4A  F005         	goto	i1l1655
  1902  000A76                     i1l1651:
  1903                           
  1904                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  1905  000A76  501A               	movf	i1ESCRIBE_MENSAJE2@i^0,w,c
  1906  000A78  2415               	addwf	i1ESCRIBE_MENSAJE2@cadena^0,w,c
  1907  000A7A  6E17               	movwf	??i1_ESCRIBE_MENSAJE2^0,c
  1908  000A7C  0E00               	movlw	0
  1909  000A7E  2016               	addwfc	(i1ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  1910  000A80  6E18               	movwf	(??i1_ESCRIBE_MENSAJE2+1)^0,c
  1911  000A82  C017  FFF6         	movff	??i1_ESCRIBE_MENSAJE2,tblptrl
  1912  000A86  C018  FFF7         	movff	??i1_ESCRIBE_MENSAJE2+1,tblptrh
  1913  000A8A                     	if	0	;tblptru may be non-zero
  1914  000A8A                     	endif
  1915  000A8A                     	if	0	;tblptru may be non-zero
  1916  000A8A                     	endif
  1917  000A8A  0008               	tblrd		*
  1918  000A8C  50F5               	movf	tablat,w,c
  1919  000A8E  ECE8  F006         	call	i1_ENVIA_CHAR
  1920  000A92                     
  1921                           ;LCD.c: 77:  }
  1922  000A92  2A1A               	incf	i1ESCRIBE_MENSAJE2@i^0,f,c
  1923  000A94                     i1l1655:
  1924  000A94  5019               	movf	i1ESCRIBE_MENSAJE2@tam^0,w,c
  1925  000A96  5C1A               	subwf	i1ESCRIBE_MENSAJE2@i^0,w,c
  1926  000A98  A0D8               	btfss	status,0,c
  1927  000A9A  EF51  F005         	goto	i1u38_21
  1928  000A9E  EF53  F005         	goto	i1u38_20
  1929  000AA2                     i1u38_21:
  1930  000AA2  EF3B  F005         	goto	i1l1651
  1931  000AA6                     i1u38_20:
  1932  000AA6  0012               	return		;funcret
  1933  000AA8                     __end_ofi1_ESCRIBE_MENSAJE2:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function i1_strlen *****************
  1937 ;; Defined at:
  1938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1941 ;;		 -> STR_2(16), STR_1(12), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  a               2   18[COMRAM] PTR const unsigned char 
  1944 ;;		 -> STR_2(16), STR_1(12), 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2   16[COMRAM] unsigned int 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:         2       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        4 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 5
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		i1_ESCRIBE_MENSAJE2
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text19
  1969  000CBA                     __ptext19:
  1970                           	callstack 0
  1971  000CBA                     i1_strlen:
  1972                           	callstack 17
  1973  000CBA  C011  F013         	movff	i1strlen@s,i1strlen@a
  1974  000CBE  C012  F014         	movff	i1strlen@s+1,i1strlen@a+1
  1975  000CC2  EF65  F006         	goto	i1l1593
  1976  000CC6                     i1l1591:
  1977  000CC6  4A11               	infsnz	i1strlen@s^0,f,c
  1978  000CC8  2A12               	incf	(i1strlen@s+1)^0,f,c
  1979  000CCA                     i1l1593:
  1980  000CCA  C011  FFF6         	movff	i1strlen@s,tblptrl
  1981  000CCE  C012  FFF7         	movff	i1strlen@s+1,tblptrh
  1982  000CD2                     	if	0	;tblptru may be non-zero
  1983  000CD2                     	endif
  1984  000CD2                     	if	0	;tblptru may be non-zero
  1985  000CD2                     	endif
  1986  000CD2  0008               	tblrd		*
  1987  000CD4  50F5               	movf	tablat,w,c
  1988  000CD6  0900               	iorlw	0
  1989  000CD8  A4D8               	btfss	status,2,c
  1990  000CDA  EF71  F006         	goto	i1u29_21
  1991  000CDE  EF73  F006         	goto	i1u29_20
  1992  000CE2                     i1u29_21:
  1993  000CE2  EF63  F006         	goto	i1l1591
  1994  000CE6                     i1u29_20:
  1995  000CE6  5013               	movf	i1strlen@a^0,w,c
  1996  000CE8  5C11               	subwf	i1strlen@s^0,w,c
  1997  000CEA  6E11               	movwf	?i1_strlen^0,c
  1998  000CEC  5014               	movf	(i1strlen@a+1)^0,w,c
  1999  000CEE  5812               	subwfb	(i1strlen@s+1)^0,w,c
  2000  000CF0  6E12               	movwf	(?i1_strlen+1)^0,c
  2001  000CF2  0012               	return		;funcret
  2002  000CF4                     __end_ofi1_strlen:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function i1_ENVIA_CHAR *****************
  2006 ;; Defined at:
  2007 ;;		line 80 in file "LCD.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  dato            1    wreg     unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  dato            1   17[COMRAM] unsigned char 
  2012 ;;  aux             1   18[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0
  2023 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2025 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2026 ;;Total ram usage:        2 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 6
  2029 ;; This function calls:
  2030 ;;		i1_ENVIA_NIBBLE
  2031 ;;		i1_LEER_LCD
  2032 ;; This function is called by:
  2033 ;;		i1_ESCRIBE_MENSAJE2
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text20
  2038  000DD0                     __ptext20:
  2039                           	callstack 0
  2040  000DD0                     i1_ENVIA_CHAR:
  2041                           	callstack 16
  2042                           
  2043                           ;incstack = 0
  2044                           ;i1ENVIA_CHAR@dato stored from wreg
  2045  000DD0  6E12               	movwf	i1ENVIA_CHAR@dato^0,c
  2046  000DD2                     
  2047                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2048  000DD2  808D               	bsf	141,0,c	;volatile
  2049  000DD4                     
  2050                           ;LCD.c: 84:  LEER_LCD();
  2051  000DD4  EC48  F004         	call	i1_LEER_LCD	;wreg free
  2052  000DD8                     
  2053                           ;LCD.c: 85:  TRISD = 0x00;
  2054  000DD8  0E00               	movlw	0
  2055  000DDA  6E95               	movwf	149,c	;volatile
  2056  000DDC                     
  2057                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2058  000DDC  0E21               	movlw	33
  2059  000DDE                     i1u56_27:
  2060  000DDE  2EE8               	decfsz	wreg,f,c
  2061  000DE0  D7FE               	bra	i1u56_27
  2062  000DE2  F000               	nop	
  2063  000DE4                     
  2064                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2065  000DE4  928D               	bcf	141,1,c	;volatile
  2066  000DE6                     
  2067                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2068  000DE6  948D               	bcf	141,2,c	;volatile
  2069  000DE8                     
  2070                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2071  000DE8  808D               	bsf	141,0,c	;volatile
  2072  000DEA                     
  2073                           ;LCD.c: 90:  aux = dato & 0xF0;
  2074  000DEA  5012               	movf	i1ENVIA_CHAR@dato^0,w,c
  2075  000DEC  0BF0               	andlw	240
  2076  000DEE  6E13               	movwf	i1ENVIA_CHAR@aux^0,c
  2077  000DF0                     
  2078                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2079  000DF0  5013               	movf	i1ENVIA_CHAR@aux^0,w,c
  2080  000DF2  EC8E  F007         	call	i1_ENVIA_NIBBLE
  2081  000DF6                     
  2082                           ;LCD.c: 92:  aux = dato << 4;
  2083  000DF6  3812               	swapf	i1ENVIA_CHAR@dato^0,w,c
  2084  000DF8  0BF0               	andlw	240
  2085  000DFA  6E13               	movwf	i1ENVIA_CHAR@aux^0,c
  2086  000DFC                     
  2087                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2088  000DFC  5013               	movf	i1ENVIA_CHAR@aux^0,w,c
  2089  000DFE  EC8E  F007         	call	i1_ENVIA_NIBBLE
  2090  000E02  0012               	return		;funcret
  2091  000E04                     __end_ofi1_ENVIA_CHAR:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function i1_BORRAR_LCD *****************
  2095 ;; Defined at:
  2096 ;;		line 96 in file "LCD.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 7
  2117 ;; This function calls:
  2118 ;;		i1_ENVIA_LCD_CMD
  2119 ;; This function is called by:
  2120 ;;		i1_pantallazo
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text21
  2125  000FB2                     __ptext21:
  2126                           	callstack 0
  2127  000FB2                     i1_BORRAR_LCD:
  2128                           	callstack 16
  2129  000FB2                     
  2130                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2131  000FB2  0E01               	movlw	1
  2132  000FB4  EC02  F007         	call	i1_ENVIA_LCD_CMD
  2133  000FB8  0012               	return		;funcret
  2134  000FBA                     __end_ofi1_BORRAR_LCD:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function i1_ENVIA_LCD_CMD *****************
  2138 ;; Defined at:
  2139 ;;		line 128 in file "LCD.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  dato            1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  dato            1   17[COMRAM] unsigned char 
  2144 ;;  aux             1   18[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0
  2155 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2157 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2158 ;;Total ram usage:        2 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 6
  2161 ;; This function calls:
  2162 ;;		i1_ENVIA_NIBBLE
  2163 ;;		i1_LEER_LCD
  2164 ;; This function is called by:
  2165 ;;		i1_POS_CURSOR
  2166 ;;		i1_BORRAR_LCD
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text22
  2171  000E04                     __ptext22:
  2172                           	callstack 0
  2173  000E04                     i1_ENVIA_LCD_CMD:
  2174                           	callstack 16
  2175                           
  2176                           ;incstack = 0
  2177                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  2178  000E04  6E12               	movwf	i1ENVIA_LCD_CMD@dato^0,c
  2179  000E06                     
  2180                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  2181  000E06  908D               	bcf	141,0,c	;volatile
  2182  000E08                     
  2183                           ;LCD.c: 132:  LEER_LCD();
  2184  000E08  EC48  F004         	call	i1_LEER_LCD	;wreg free
  2185  000E0C                     
  2186                           ;LCD.c: 133:  TRISD = 0b00000000;
  2187  000E0C  0E00               	movlw	0
  2188  000E0E  6E95               	movwf	149,c	;volatile
  2189  000E10                     
  2190                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2191  000E10  0E21               	movlw	33
  2192  000E12                     i1u57_27:
  2193  000E12  2EE8               	decfsz	wreg,f,c
  2194  000E14  D7FE               	bra	i1u57_27
  2195  000E16  F000               	nop	
  2196  000E18                     
  2197                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  2198  000E18  928D               	bcf	141,1,c	;volatile
  2199  000E1A                     
  2200                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  2201  000E1A  948D               	bcf	141,2,c	;volatile
  2202  000E1C                     
  2203                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  2204  000E1C  908D               	bcf	141,0,c	;volatile
  2205  000E1E                     
  2206                           ;LCD.c: 138:  aux = dato & 0xF0;
  2207  000E1E  5012               	movf	i1ENVIA_LCD_CMD@dato^0,w,c
  2208  000E20  0BF0               	andlw	240
  2209  000E22  6E13               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2210  000E24                     
  2211                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2212  000E24  5013               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2213  000E26  EC8E  F007         	call	i1_ENVIA_NIBBLE
  2214  000E2A                     
  2215                           ;LCD.c: 140:  aux = dato<<4;
  2216  000E2A  3812               	swapf	i1ENVIA_LCD_CMD@dato^0,w,c
  2217  000E2C  0BF0               	andlw	240
  2218  000E2E  6E13               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2219  000E30                     
  2220                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2221  000E30  5013               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2222  000E32  EC8E  F007         	call	i1_ENVIA_NIBBLE
  2223  000E36  0012               	return		;funcret
  2224  000E38                     __end_ofi1_ENVIA_LCD_CMD:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function i1_LEER_LCD *****************
  2228 ;; Defined at:
  2229 ;;		line 144 in file "LCD.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  aux             1   16[COMRAM] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        1 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 5
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		i1_ENVIA_CHAR
  2254 ;;		i1_ENVIA_LCD_CMD
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text23
  2259  000890                     __ptext23:
  2260                           	callstack 0
  2261  000890                     i1_LEER_LCD:
  2262                           	callstack 16
  2263  000890                     
  2264                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2265  000890  0EF8               	movlw	248
  2266  000892  6E95               	movwf	149,c	;volatile
  2267  000894                     
  2268                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  2269  000894  908D               	bcf	141,0,c	;volatile
  2270  000896                     
  2271                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  2272  000896  828D               	bsf	141,1,c	;volatile
  2273  000898                     
  2274                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  2275  000898  848D               	bsf	141,2,c	;volatile
  2276  00089A                     
  2277                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2278  00089A  0E21               	movlw	33
  2279  00089C                     i1u58_27:
  2280  00089C  2EE8               	decfsz	wreg,f,c
  2281  00089E  D7FE               	bra	i1u58_27
  2282  0008A0  F000               	nop	
  2283  0008A2                     
  2284                           ;LCD.c: 152:  aux = PORTD;
  2285  0008A2  CF83 F011          	movff	3971,i1LEER_LCD@aux	;volatile
  2286  0008A6                     
  2287                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  2288  0008A6  948D               	bcf	141,2,c	;volatile
  2289  0008A8                     
  2290                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2291  0008A8  0E21               	movlw	33
  2292  0008AA                     i1u59_27:
  2293  0008AA  2EE8               	decfsz	wreg,f,c
  2294  0008AC  D7FE               	bra	i1u59_27
  2295  0008AE  F000               	nop	
  2296  0008B0                     
  2297                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  2298  0008B0  848D               	bsf	141,2,c	;volatile
  2299  0008B2                     
  2300                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2301  0008B2  0E21               	movlw	33
  2302  0008B4                     i1u60_27:
  2303  0008B4  2EE8               	decfsz	wreg,f,c
  2304  0008B6  D7FE               	bra	i1u60_27
  2305  0008B8  F000               	nop	
  2306  0008BA                     
  2307                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  2308  0008BA  948D               	bcf	141,2,c	;volatile
  2309  0008BC                     i1l1437:
  2310                           
  2311                           ;LCD.c: 158:  aux = aux & 0x80;
  2312  0008BC  5011               	movf	i1LEER_LCD@aux^0,w,c
  2313  0008BE  0B80               	andlw	128
  2314  0008C0  6E11               	movwf	i1LEER_LCD@aux^0,c
  2315                           
  2316                           ;LCD.c: 159:  while(aux == 0x80)
  2317  0008C2  EF77  F004         	goto	i1l1451
  2318  0008C6                     i1l87:
  2319                           
  2320                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  2321  0008C6  848D               	bsf	141,2,c	;volatile
  2322  0008C8                     
  2323                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2324  0008C8  0E21               	movlw	33
  2325  0008CA                     i1u61_27:
  2326  0008CA  2EE8               	decfsz	wreg,f,c
  2327  0008CC  D7FE               	bra	i1u61_27
  2328  0008CE  F000               	nop	
  2329  0008D0                     
  2330                           ;LCD.c: 163:             aux = PORTD;
  2331  0008D0  CF83 F011          	movff	3971,i1LEER_LCD@aux	;volatile
  2332  0008D4                     
  2333                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  2334  0008D4  948D               	bcf	141,2,c	;volatile
  2335                           
  2336                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2337  0008D6  0E21               	movlw	33
  2338  0008D8                     i1u62_27:
  2339  0008D8  2EE8               	decfsz	wreg,f,c
  2340  0008DA  D7FE               	bra	i1u62_27
  2341  0008DC  F000               	nop	
  2342  0008DE                     
  2343                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  2344  0008DE  848D               	bsf	141,2,c	;volatile
  2345                           
  2346                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2347  0008E0  0E21               	movlw	33
  2348  0008E2                     i1u63_27:
  2349  0008E2  2EE8               	decfsz	wreg,f,c
  2350  0008E4  D7FE               	bra	i1u63_27
  2351  0008E6  F000               	nop	
  2352  0008E8                     
  2353                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  2354  0008E8  948D               	bcf	141,2,c	;volatile
  2355  0008EA  EF5E  F004         	goto	i1l1437
  2356  0008EE                     i1l1451:
  2357                           
  2358                           ;LCD.c: 159:  while(aux == 0x80)
  2359  0008EE  0E80               	movlw	128
  2360  0008F0  1811               	xorwf	i1LEER_LCD@aux^0,w,c
  2361  0008F2  B4D8               	btfsc	status,2,c
  2362  0008F4  EF7E  F004         	goto	i1u26_21
  2363  0008F8  EF80  F004         	goto	i1u26_20
  2364  0008FC                     i1u26_21:
  2365  0008FC  EF63  F004         	goto	i1l87
  2366  000900                     i1u26_20:
  2367  000900  0012               	return		;funcret
  2368  000902                     __end_ofi1_LEER_LCD:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function i1_ENVIA_NIBBLE *****************
  2372 ;; Defined at:
  2373 ;;		line 118 in file "LCD.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  dato            1    wreg     unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  dato            1   16[COMRAM] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0
  2388 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2390 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2391 ;;Total ram usage:        1 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 5
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		i1_ENVIA_CHAR
  2398 ;;		i1_ENVIA_LCD_CMD
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text24
  2403  000F1C                     __ptext24:
  2404                           	callstack 0
  2405  000F1C                     i1_ENVIA_NIBBLE:
  2406                           	callstack 16
  2407                           
  2408                           ;incstack = 0
  2409                           ;i1ENVIA_NIBBLE@dato stored from wreg
  2410  000F1C  6E11               	movwf	i1ENVIA_NIBBLE@dato^0,c
  2411  000F1E                     
  2412                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2413  000F1E  0E0F               	movlw	15
  2414  000F20  168C               	andwf	140,f,c	;volatile
  2415                           
  2416                           ;LCD.c: 121:  dato &= 0xF0;
  2417  000F22  0EF0               	movlw	240
  2418  000F24  1611               	andwf	i1ENVIA_NIBBLE@dato^0,f,c
  2419                           
  2420                           ;LCD.c: 122:  LATD|= dato;
  2421  000F26  5011               	movf	i1ENVIA_NIBBLE@dato^0,w,c	;volatile
  2422  000F28  128C               	iorwf	140,f,c	;volatile
  2423  000F2A                     
  2424                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  2425  000F2A  848D               	bsf	141,2,c	;volatile
  2426  000F2C                     
  2427                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2428  000F2C  0E21               	movlw	33
  2429  000F2E                     i1u64_27:
  2430  000F2E  2EE8               	decfsz	wreg,f,c
  2431  000F30  D7FE               	bra	i1u64_27
  2432  000F32  F000               	nop	
  2433  000F34                     
  2434                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  2435  000F34  948D               	bcf	141,2,c	;volatile
  2436  000F36  0012               	return		;funcret
  2437  000F38                     __end_ofi1_ENVIA_NIBBLE:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _EUSART_Sendbyte *****************
  2441 ;; Defined at:
  2442 ;;		line 45 in file "maincode2.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  dato            1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  dato            1   16[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 5
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_INT1_ISR
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text25
  2471  000F54                     __ptext25:
  2472                           	callstack 0
  2473  000F54                     _EUSART_Sendbyte:
  2474                           	callstack 19
  2475                           
  2476                           ;incstack = 0
  2477                           ;EUSART_Sendbyte@dato stored from wreg
  2478  000F54  6E11               	movwf	EUSART_Sendbyte@dato^0,c
  2479  000F56                     
  2480                           ;maincode2.c: 46:     TXREG1 = dato;
  2481  000F56  C011  FFAD         	movff	EUSART_Sendbyte@dato,4013	;volatile
  2482  000F5A                     i1l156:
  2483  000F5A  A2AC               	btfss	172,1,c	;volatile
  2484  000F5C  EFB2  F007         	goto	i1u18_21
  2485  000F60  EFB4  F007         	goto	i1u18_20
  2486  000F64                     i1u18_21:
  2487  000F64  EFAD  F007         	goto	i1l156
  2488  000F68                     i1u18_20:
  2489  000F68  0012               	return		;funcret
  2490  000F6A                     __end_of_EUSART_Sendbyte:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _INT0_ISR *****************
  2494 ;; Defined at:
  2495 ;;		line 58 in file "maincode2.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2511 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2512 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2513 ;;Total ram usage:        4 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 4
  2516 ;; This function calls:
  2517 ;;		i2_EUSART_Sendbyte
  2518 ;;		i2_pantallazo
  2519 ;; This function is called by:
  2520 ;;		Interrupt level 2
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	intcode
  2525  000008                     __pintcode:
  2526                           	callstack 0
  2527  000008                     _INT0_ISR:
  2528                           	callstack 16
  2529                           
  2530                           ;incstack = 0
  2531  000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2532  00000A  EFE5  F005         	goto	int_func
  2533                           
  2534                           	psect	intcode_body
  2535  000BCA                     __pintcode_body:
  2536                           	callstack 16
  2537  000BCA                     int_func:
  2538                           	callstack 16
  2539  000BCA  CFF6 F00D          	movff	tblptrl,??_INT0_ISR
  2540  000BCE  CFF7 F00E          	movff	tblptrh,??_INT0_ISR+1
  2541  000BD2  CFF8 F00F          	movff	tblptru,??_INT0_ISR+2
  2542  000BD6  CFF5 F010          	movff	tablat,??_INT0_ISR+3
  2543  000BDA                     
  2544                           ;maincode2.c: 59:     INTCONbits.INT0IF = 0;
  2545  000BDA  92F2               	bcf	242,1,c	;volatile
  2546  000BDC                     
  2547                           ;maincode2.c: 60:     EUSART_Sendbyte('H');
  2548  000BDC  0E48               	movlw	72
  2549  000BDE  ECB5  F007         	call	i2_EUSART_Sendbyte
  2550                           
  2551                           ;maincode2.c: 61:     EUSART_Sendbyte('o');
  2552  000BE2  0E6F               	movlw	111
  2553  000BE4  ECB5  F007         	call	i2_EUSART_Sendbyte
  2554                           
  2555                           ;maincode2.c: 62:     EUSART_Sendbyte('l');
  2556  000BE8  0E6C               	movlw	108
  2557  000BEA  ECB5  F007         	call	i2_EUSART_Sendbyte
  2558                           
  2559                           ;maincode2.c: 63:     EUSART_Sendbyte('a');
  2560  000BEE  0E61               	movlw	97
  2561  000BF0  ECB5  F007         	call	i2_EUSART_Sendbyte
  2562  000BF4                     
  2563                           ;maincode2.c: 64:     pantallazo();
  2564  000BF4  ECC1  F005         	call	i2_pantallazo	;wreg free
  2565  000BF8  C010  FFF5         	movff	??_INT0_ISR+3,tablat
  2566  000BFC  C00F  FFF8         	movff	??_INT0_ISR+2,tblptru
  2567  000C00  C00E  FFF7         	movff	??_INT0_ISR+1,tblptrh
  2568  000C04  C00D  FFF6         	movff	??_INT0_ISR,tblptrl
  2569  000C08  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2570  000C0A  0011               	retfie		f
  2571  000C0C                     __end_of_INT0_ISR:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function i2_pantallazo *****************
  2575 ;; Defined at:
  2576 ;;		line 36 in file "maincode2.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2593 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        2 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 3
  2597 ;; This function calls:
  2598 ;;		i2_BORRAR_LCD
  2599 ;;		i2_ESCRIBE_MENSAJE2
  2600 ;;		i2_POS_CURSOR
  2601 ;; This function is called by:
  2602 ;;		_INT0_ISR
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text27
  2607  000B82                     __ptext27:
  2608                           	callstack 0
  2609  000B82                     i2_pantallazo:
  2610                           	callstack 16
  2611  000B82                     
  2612                           ;maincode2.c: 37:     POS_CURSOR(1,0);
  2613  000B82  0E00               	movlw	0
  2614  000B84  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2615  000B86  0E01               	movlw	1
  2616  000B88  EC7A  F006         	call	i2_POS_CURSOR
  2617  000B8C                     
  2618                           ;maincode2.c: 38:     ESCRIBE_MENSAJE2("Hola Mundo!");
  2619  000B8C  0E11               	movlw	low STR_1
  2620  000B8E  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2621  000B90  0E08               	movlw	high STR_1
  2622  000B92  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2623  000B94  EC54  F005         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2624  000B98                     
  2625                           ;maincode2.c: 39:     POS_CURSOR(2,0);
  2626  000B98  0E00               	movlw	0
  2627  000B9A  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2628  000B9C  0E02               	movlw	2
  2629  000B9E  EC7A  F006         	call	i2_POS_CURSOR
  2630                           
  2631                           ;maincode2.c: 40:     ESCRIBE_MENSAJE2("Micro semana 13");
  2632  000BA2  0E01               	movlw	low STR_2
  2633  000BA4  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2634  000BA6  0E08               	movlw	high STR_2
  2635  000BA8  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2636  000BAA  EC54  F005         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2637  000BAE                     
  2638                           ;maincode2.c: 41:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  2639  000BAE  0E0B               	movlw	11
  2640  000BB0  6E0C               	movwf	(??i2_pantallazo+1)^0,c
  2641  000BB2  0E26               	movlw	38
  2642  000BB4  6E0B               	movwf	??i2_pantallazo^0,c
  2643  000BB6  0E5E               	movlw	94
  2644  000BB8                     i2u65_47:
  2645  000BB8  2EE8               	decfsz	wreg,f,c
  2646  000BBA  D7FE               	bra	i2u65_47
  2647  000BBC  2E0B               	decfsz	??i2_pantallazo^0,f,c
  2648  000BBE  D7FC               	bra	i2u65_47
  2649  000BC0  2E0C               	decfsz	(??i2_pantallazo+1)^0,f,c
  2650  000BC2  D7FA               	bra	i2u65_47
  2651  000BC4                     
  2652                           ;maincode2.c: 42:     BORRAR_LCD();
  2653  000BC4  ECDD  F007         	call	i2_BORRAR_LCD	;wreg free
  2654  000BC8  0012               	return		;funcret
  2655  000BCA                     __end_ofi2_pantallazo:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function i2_POS_CURSOR *****************
  2659 ;; Defined at:
  2660 ;;		line 5 in file "LCD.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  fila            1    wreg     unsigned char 
  2663 ;;  columna         1    3[COMRAM] unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  fila            1    4[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         1       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 2
  2682 ;; This function calls:
  2683 ;;		i2_ENVIA_LCD_CMD
  2684 ;; This function is called by:
  2685 ;;		i2_pantallazo
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text28
  2690  000CF4                     __ptext28:
  2691                           	callstack 0
  2692  000CF4                     i2_POS_CURSOR:
  2693                           	callstack 16
  2694                           
  2695                           ;incstack = 0
  2696                           ;i2POS_CURSOR@fila stored from wreg
  2697  000CF4  6E05               	movwf	i2POS_CURSOR@fila^0,c
  2698  000CF6                     
  2699                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2700  000CF6  0405               	decf	i2POS_CURSOR@fila^0,w,c
  2701  000CF8  A4D8               	btfss	status,2,c
  2702  000CFA  EF81  F006         	goto	i2u36_41
  2703  000CFE  EF83  F006         	goto	i2u36_40
  2704  000D02                     i2u36_41:
  2705  000D02  EF89  F006         	goto	i2l1641
  2706  000D06                     i2u36_40:
  2707  000D06                     
  2708                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2709  000D06  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2710  000D08  0F80               	addlw	128
  2711  000D0A  EC36  F007         	call	i2_ENVIA_LCD_CMD
  2712                           
  2713                           ;LCD.c: 10:  }
  2714  000D0E  EF96  F006         	goto	i2l26
  2715  000D12                     i2l1641:
  2716  000D12  0E02               	movlw	2
  2717  000D14  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  2718  000D16  A4D8               	btfss	status,2,c
  2719  000D18  EF90  F006         	goto	i2u37_41
  2720  000D1C  EF92  F006         	goto	i2u37_40
  2721  000D20                     i2u37_41:
  2722  000D20  EF96  F006         	goto	i2l26
  2723  000D24                     i2u37_40:
  2724  000D24                     
  2725                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2726  000D24  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2727  000D26  0FC0               	addlw	192
  2728  000D28  EC36  F007         	call	i2_ENVIA_LCD_CMD
  2729  000D2C                     i2l26:
  2730  000D2C  0012               	return		;funcret
  2731  000D2E                     __end_ofi2_POS_CURSOR:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  2735 ;; Defined at:
  2736 ;;		line 69 in file "LCD.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  2739 ;;		 -> STR_2(16), STR_1(12), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  i               1    9[COMRAM] unsigned char 
  2742 ;;  tam             1    8[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         2       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        6 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 2
  2759 ;; This function calls:
  2760 ;;		i2_ENVIA_CHAR
  2761 ;;		i2_strlen
  2762 ;; This function is called by:
  2763 ;;		i2_pantallazo
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text29
  2768  000AA8                     __ptext29:
  2769                           	callstack 0
  2770  000AA8                     i2_ESCRIBE_MENSAJE2:
  2771                           	callstack 16
  2772  000AA8                     
  2773                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2774  000AA8  C005  F001         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  2775  000AAC  C006  F002         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  2776  000AB0  EC97  F006         	call	i2_strlen	;wreg free
  2777  000AB4  5001               	movf	?i2_strlen^0,w,c
  2778  000AB6  6E09               	movwf	i2ESCRIBE_MENSAJE2@tam^0,c
  2779  000AB8                     
  2780                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2781  000AB8  0E00               	movlw	0
  2782  000ABA  6E0A               	movwf	i2ESCRIBE_MENSAJE2@i^0,c
  2783  000ABC  EF6F  F005         	goto	i2l1667
  2784  000AC0                     i2l1663:
  2785                           
  2786                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2787  000AC0  500A               	movf	i2ESCRIBE_MENSAJE2@i^0,w,c
  2788  000AC2  2405               	addwf	i2ESCRIBE_MENSAJE2@cadena^0,w,c
  2789  000AC4  6E07               	movwf	??i2_ESCRIBE_MENSAJE2^0,c
  2790  000AC6  0E00               	movlw	0
  2791  000AC8  2006               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  2792  000ACA  6E08               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^0,c
  2793  000ACC  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  2794  000AD0  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  2795  000AD4                     	if	0	;tblptru may be non-zero
  2796  000AD4                     	endif
  2797  000AD4                     	if	0	;tblptru may be non-zero
  2798  000AD4                     	endif
  2799  000AD4  0008               	tblrd		*
  2800  000AD6  50F5               	movf	tablat,w,c
  2801  000AD8  EC1C  F007         	call	i2_ENVIA_CHAR
  2802  000ADC                     
  2803                           ;LCD.c: 77:  }
  2804  000ADC  2A0A               	incf	i2ESCRIBE_MENSAJE2@i^0,f,c
  2805  000ADE                     i2l1667:
  2806  000ADE  5009               	movf	i2ESCRIBE_MENSAJE2@tam^0,w,c
  2807  000AE0  5C0A               	subwf	i2ESCRIBE_MENSAJE2@i^0,w,c
  2808  000AE2  A0D8               	btfss	status,0,c
  2809  000AE4  EF76  F005         	goto	i2u39_41
  2810  000AE8  EF78  F005         	goto	i2u39_40
  2811  000AEC                     i2u39_41:
  2812  000AEC  EF60  F005         	goto	i2l1663
  2813  000AF0                     i2u39_40:
  2814  000AF0  0012               	return		;funcret
  2815  000AF2                     __end_ofi2_ESCRIBE_MENSAJE2:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function i2_strlen *****************
  2819 ;; Defined at:
  2820 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2823 ;;		 -> STR_2(16), STR_1(12), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2826 ;;		 -> STR_2(16), STR_1(12), 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2    0[COMRAM] unsigned int 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2836 ;;      Params:         2       0       0       0       0       0       0       0       0
  2837 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2839 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2840 ;;Total ram usage:        4 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		i2_ESCRIBE_MENSAJE2
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text30
  2850  000D2E                     __ptext30:
  2851                           	callstack 0
  2852  000D2E                     i2_strlen:
  2853                           	callstack 17
  2854  000D2E  C001  F003         	movff	i2strlen@s,i2strlen@a
  2855  000D32  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  2856  000D36  EF9F  F006         	goto	i2l1603
  2857  000D3A                     i2l1601:
  2858  000D3A  4A01               	infsnz	i2strlen@s^0,f,c
  2859  000D3C  2A02               	incf	(i2strlen@s+1)^0,f,c
  2860  000D3E                     i2l1603:
  2861  000D3E  C001  FFF6         	movff	i2strlen@s,tblptrl
  2862  000D42  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  2863  000D46                     	if	0	;tblptru may be non-zero
  2864  000D46                     	endif
  2865  000D46                     	if	0	;tblptru may be non-zero
  2866  000D46                     	endif
  2867  000D46  0008               	tblrd		*
  2868  000D48  50F5               	movf	tablat,w,c
  2869  000D4A  0900               	iorlw	0
  2870  000D4C  A4D8               	btfss	status,2,c
  2871  000D4E  EFAB  F006         	goto	i2u30_41
  2872  000D52  EFAD  F006         	goto	i2u30_40
  2873  000D56                     i2u30_41:
  2874  000D56  EF9D  F006         	goto	i2l1601
  2875  000D5A                     i2u30_40:
  2876  000D5A  5003               	movf	i2strlen@a^0,w,c
  2877  000D5C  5C01               	subwf	i2strlen@s^0,w,c
  2878  000D5E  6E01               	movwf	?i2_strlen^0,c
  2879  000D60  5004               	movf	(i2strlen@a+1)^0,w,c
  2880  000D62  5802               	subwfb	(i2strlen@s+1)^0,w,c
  2881  000D64  6E02               	movwf	(?i2_strlen+1)^0,c
  2882  000D66  0012               	return		;funcret
  2883  000D68                     __end_ofi2_strlen:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function i2_ENVIA_CHAR *****************
  2887 ;; Defined at:
  2888 ;;		line 80 in file "LCD.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  dato            1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  dato            1    1[COMRAM] unsigned char 
  2893 ;;  aux             1    2[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 1
  2910 ;; This function calls:
  2911 ;;		i2_ENVIA_NIBBLE
  2912 ;;		i2_LEER_LCD
  2913 ;; This function is called by:
  2914 ;;		i2_ESCRIBE_MENSAJE2
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text31
  2919  000E38                     __ptext31:
  2920                           	callstack 0
  2921  000E38                     i2_ENVIA_CHAR:
  2922                           	callstack 16
  2923                           
  2924                           ;incstack = 0
  2925                           ;i2ENVIA_CHAR@dato stored from wreg
  2926  000E38  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  2927  000E3A                     
  2928                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2929  000E3A  808D               	bsf	141,0,c	;volatile
  2930  000E3C                     
  2931                           ;LCD.c: 84:  LEER_LCD();
  2932  000E3C  EC81  F004         	call	i2_LEER_LCD	;wreg free
  2933  000E40                     
  2934                           ;LCD.c: 85:  TRISD = 0x00;
  2935  000E40  0E00               	movlw	0
  2936  000E42  6E95               	movwf	149,c	;volatile
  2937  000E44                     
  2938                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2939  000E44  0E21               	movlw	33
  2940  000E46                     i2u66_47:
  2941  000E46  2EE8               	decfsz	wreg,f,c
  2942  000E48  D7FE               	bra	i2u66_47
  2943  000E4A  F000               	nop	
  2944  000E4C                     
  2945                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2946  000E4C  928D               	bcf	141,1,c	;volatile
  2947  000E4E                     
  2948                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2949  000E4E  948D               	bcf	141,2,c	;volatile
  2950  000E50                     
  2951                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2952  000E50  808D               	bsf	141,0,c	;volatile
  2953  000E52                     
  2954                           ;LCD.c: 90:  aux = dato & 0xF0;
  2955  000E52  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  2956  000E54  0BF0               	andlw	240
  2957  000E56  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2958  000E58                     
  2959                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2960  000E58  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2961  000E5A  EC9C  F007         	call	i2_ENVIA_NIBBLE
  2962  000E5E                     
  2963                           ;LCD.c: 92:  aux = dato << 4;
  2964  000E5E  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  2965  000E60  0BF0               	andlw	240
  2966  000E62  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2967  000E64                     
  2968                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2969  000E64  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2970  000E66  EC9C  F007         	call	i2_ENVIA_NIBBLE
  2971  000E6A  0012               	return		;funcret
  2972  000E6C                     __end_ofi2_ENVIA_CHAR:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function i2_BORRAR_LCD *****************
  2976 ;; Defined at:
  2977 ;;		line 96 in file "LCD.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 2
  2998 ;; This function calls:
  2999 ;;		i2_ENVIA_LCD_CMD
  3000 ;; This function is called by:
  3001 ;;		i2_pantallazo
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text32
  3006  000FBA                     __ptext32:
  3007                           	callstack 0
  3008  000FBA                     i2_BORRAR_LCD:
  3009                           	callstack 16
  3010  000FBA                     
  3011                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  3012  000FBA  0E01               	movlw	1
  3013  000FBC  EC36  F007         	call	i2_ENVIA_LCD_CMD
  3014  000FC0  0012               	return		;funcret
  3015  000FC2                     __end_ofi2_BORRAR_LCD:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function i2_ENVIA_LCD_CMD *****************
  3019 ;; Defined at:
  3020 ;;		line 128 in file "LCD.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  dato            1    wreg     unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  dato            1    1[COMRAM] unsigned char 
  3025 ;;  aux             1    2[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0
  3036 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3038 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 1
  3042 ;; This function calls:
  3043 ;;		i2_ENVIA_NIBBLE
  3044 ;;		i2_LEER_LCD
  3045 ;; This function is called by:
  3046 ;;		i2_POS_CURSOR
  3047 ;;		i2_BORRAR_LCD
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text33
  3052  000E6C                     __ptext33:
  3053                           	callstack 0
  3054  000E6C                     i2_ENVIA_LCD_CMD:
  3055                           	callstack 16
  3056                           
  3057                           ;incstack = 0
  3058                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  3059  000E6C  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  3060  000E6E                     
  3061                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  3062  000E6E  908D               	bcf	141,0,c	;volatile
  3063  000E70                     
  3064                           ;LCD.c: 132:  LEER_LCD();
  3065  000E70  EC81  F004         	call	i2_LEER_LCD	;wreg free
  3066  000E74                     
  3067                           ;LCD.c: 133:  TRISD = 0b00000000;
  3068  000E74  0E00               	movlw	0
  3069  000E76  6E95               	movwf	149,c	;volatile
  3070  000E78                     
  3071                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3072  000E78  0E21               	movlw	33
  3073  000E7A                     i2u67_47:
  3074  000E7A  2EE8               	decfsz	wreg,f,c
  3075  000E7C  D7FE               	bra	i2u67_47
  3076  000E7E  F000               	nop	
  3077  000E80                     
  3078                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  3079  000E80  928D               	bcf	141,1,c	;volatile
  3080  000E82                     
  3081                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  3082  000E82  948D               	bcf	141,2,c	;volatile
  3083  000E84                     
  3084                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  3085  000E84  908D               	bcf	141,0,c	;volatile
  3086  000E86                     
  3087                           ;LCD.c: 138:  aux = dato & 0xF0;
  3088  000E86  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  3089  000E88  0BF0               	andlw	240
  3090  000E8A  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3091  000E8C                     
  3092                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  3093  000E8C  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3094  000E8E  EC9C  F007         	call	i2_ENVIA_NIBBLE
  3095  000E92                     
  3096                           ;LCD.c: 140:  aux = dato<<4;
  3097  000E92  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  3098  000E94  0BF0               	andlw	240
  3099  000E96  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3100  000E98                     
  3101                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  3102  000E98  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3103  000E9A  EC9C  F007         	call	i2_ENVIA_NIBBLE
  3104  000E9E  0012               	return		;funcret
  3105  000EA0                     __end_ofi2_ENVIA_LCD_CMD:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function i2_LEER_LCD *****************
  3109 ;; Defined at:
  3110 ;;		line 144 in file "LCD.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  aux             1    0[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0
  3125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3128 ;;Total ram usage:        1 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		i2_ENVIA_CHAR
  3134 ;;		i2_ENVIA_LCD_CMD
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text34
  3139  000902                     __ptext34:
  3140                           	callstack 0
  3141  000902                     i2_LEER_LCD:
  3142                           	callstack 16
  3143  000902                     
  3144                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  3145  000902  0EF8               	movlw	248
  3146  000904  6E95               	movwf	149,c	;volatile
  3147  000906                     
  3148                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  3149  000906  908D               	bcf	141,0,c	;volatile
  3150  000908                     
  3151                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  3152  000908  828D               	bsf	141,1,c	;volatile
  3153  00090A                     
  3154                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  3155  00090A  848D               	bsf	141,2,c	;volatile
  3156  00090C                     
  3157                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3158  00090C  0E21               	movlw	33
  3159  00090E                     i2u68_47:
  3160  00090E  2EE8               	decfsz	wreg,f,c
  3161  000910  D7FE               	bra	i2u68_47
  3162  000912  F000               	nop	
  3163  000914                     
  3164                           ;LCD.c: 152:  aux = PORTD;
  3165  000914  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3166  000918                     
  3167                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  3168  000918  948D               	bcf	141,2,c	;volatile
  3169  00091A                     
  3170                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3171  00091A  0E21               	movlw	33
  3172  00091C                     i2u69_47:
  3173  00091C  2EE8               	decfsz	wreg,f,c
  3174  00091E  D7FE               	bra	i2u69_47
  3175  000920  F000               	nop	
  3176  000922                     
  3177                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  3178  000922  848D               	bsf	141,2,c	;volatile
  3179  000924                     
  3180                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3181  000924  0E21               	movlw	33
  3182  000926                     i2u70_47:
  3183  000926  2EE8               	decfsz	wreg,f,c
  3184  000928  D7FE               	bra	i2u70_47
  3185  00092A  F000               	nop	
  3186  00092C                     
  3187                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  3188  00092C  948D               	bcf	141,2,c	;volatile
  3189  00092E                     i2l1475:
  3190                           
  3191                           ;LCD.c: 158:  aux = aux & 0x80;
  3192  00092E  5001               	movf	i2LEER_LCD@aux^0,w,c
  3193  000930  0B80               	andlw	128
  3194  000932  6E01               	movwf	i2LEER_LCD@aux^0,c
  3195                           
  3196                           ;LCD.c: 159:  while(aux == 0x80)
  3197  000934  EFB0  F004         	goto	i2l1489
  3198  000938                     i2l87:
  3199                           
  3200                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  3201  000938  848D               	bsf	141,2,c	;volatile
  3202  00093A                     
  3203                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3204  00093A  0E21               	movlw	33
  3205  00093C                     i2u71_47:
  3206  00093C  2EE8               	decfsz	wreg,f,c
  3207  00093E  D7FE               	bra	i2u71_47
  3208  000940  F000               	nop	
  3209  000942                     
  3210                           ;LCD.c: 163:             aux = PORTD;
  3211  000942  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3212  000946                     
  3213                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  3214  000946  948D               	bcf	141,2,c	;volatile
  3215                           
  3216                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3217  000948  0E21               	movlw	33
  3218  00094A                     i2u72_47:
  3219  00094A  2EE8               	decfsz	wreg,f,c
  3220  00094C  D7FE               	bra	i2u72_47
  3221  00094E  F000               	nop	
  3222  000950                     
  3223                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  3224  000950  848D               	bsf	141,2,c	;volatile
  3225                           
  3226                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3227  000952  0E21               	movlw	33
  3228  000954                     i2u73_47:
  3229  000954  2EE8               	decfsz	wreg,f,c
  3230  000956  D7FE               	bra	i2u73_47
  3231  000958  F000               	nop	
  3232  00095A                     
  3233                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  3234  00095A  948D               	bcf	141,2,c	;volatile
  3235  00095C  EF97  F004         	goto	i2l1475
  3236  000960                     i2l1489:
  3237                           
  3238                           ;LCD.c: 159:  while(aux == 0x80)
  3239  000960  0E80               	movlw	128
  3240  000962  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  3241  000964  B4D8               	btfsc	status,2,c
  3242  000966  EFB7  F004         	goto	i2u27_41
  3243  00096A  EFB9  F004         	goto	i2u27_40
  3244  00096E                     i2u27_41:
  3245  00096E  EF9C  F004         	goto	i2l87
  3246  000972                     i2u27_40:
  3247  000972  0012               	return		;funcret
  3248  000974                     __end_ofi2_LEER_LCD:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function i2_ENVIA_NIBBLE *****************
  3252 ;; Defined at:
  3253 ;;		line 118 in file "LCD.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  dato            1    wreg     unsigned char 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  dato            1    0[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3270 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		i2_ENVIA_CHAR
  3277 ;;		i2_ENVIA_LCD_CMD
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text35
  3282  000F38                     __ptext35:
  3283                           	callstack 0
  3284  000F38                     i2_ENVIA_NIBBLE:
  3285                           	callstack 16
  3286                           
  3287                           ;incstack = 0
  3288                           ;i2ENVIA_NIBBLE@dato stored from wreg
  3289  000F38  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  3290  000F3A                     
  3291                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  3292  000F3A  0E0F               	movlw	15
  3293  000F3C  168C               	andwf	140,f,c	;volatile
  3294                           
  3295                           ;LCD.c: 121:  dato &= 0xF0;
  3296  000F3E  0EF0               	movlw	240
  3297  000F40  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  3298                           
  3299                           ;LCD.c: 122:  LATD|= dato;
  3300  000F42  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  3301  000F44  128C               	iorwf	140,f,c	;volatile
  3302  000F46                     
  3303                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  3304  000F46  848D               	bsf	141,2,c	;volatile
  3305  000F48                     
  3306                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3307  000F48  0E21               	movlw	33
  3308  000F4A                     i2u74_47:
  3309  000F4A  2EE8               	decfsz	wreg,f,c
  3310  000F4C  D7FE               	bra	i2u74_47
  3311  000F4E  F000               	nop	
  3312  000F50                     
  3313                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  3314  000F50  948D               	bcf	141,2,c	;volatile
  3315  000F52  0012               	return		;funcret
  3316  000F54                     __end_ofi2_ENVIA_NIBBLE:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function i2_EUSART_Sendbyte *****************
  3320 ;; Defined at:
  3321 ;;		line 45 in file "maincode2.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  dato            1    wreg     unsigned char 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  dato            1    0[COMRAM] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        1 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_INT0_ISR
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text36
  3349  000F6A                     __ptext36:
  3350                           	callstack 0
  3351  000F6A                     i2_EUSART_Sendbyte:
  3352                           	callstack 19
  3353                           
  3354                           ;incstack = 0
  3355                           ;i2EUSART_Sendbyte@dato stored from wreg
  3356  000F6A  6E01               	movwf	i2EUSART_Sendbyte@dato^0,c
  3357  000F6C                     
  3358                           ;maincode2.c: 46:     TXREG1 = dato;
  3359  000F6C  C001  FFAD         	movff	i2EUSART_Sendbyte@dato,4013	;volatile
  3360  000F70                     i2l156:
  3361  000F70  A2AC               	btfss	172,1,c	;volatile
  3362  000F72  EFBD  F007         	goto	i2u40_41
  3363  000F76  EFBF  F007         	goto	i2u40_40
  3364  000F7A                     i2u40_41:
  3365  000F7A  EFB8  F007         	goto	i2l156
  3366  000F7E                     i2u40_40:
  3367  000F7E  0012               	return		;funcret
  3368  000F80                     __end_ofi2_EUSART_Sendbyte:
  3369                           	callstack 0
  3370                           
  3371                           	psect	rparam
  3372  0000                     
  3373                           	psect	temp
  3374  000030                     btemp:
  3375                           	callstack 0
  3376  000030                     	ds	1
  3377  0000                     int$flags	set	btemp
  3378  0000                     wtemp8	set	btemp+1
  3379  0000                     ttemp5	set	btemp+1
  3380  0000                     ttemp6	set	btemp+4
  3381  0000                     ttemp7	set	btemp+8
  3382                           
  3383                           	psect	idloc
  3384                           
  3385                           ;Config register IDLOC0 @ 0x200000
  3386                           ;	unspecified, using default values
  3387  200000                     	org	2097152
  3388  200000  FF                 	db	255
  3389                           
  3390                           ;Config register IDLOC1 @ 0x200001
  3391                           ;	unspecified, using default values
  3392  200001                     	org	2097153
  3393  200001  FF                 	db	255
  3394                           
  3395                           ;Config register IDLOC2 @ 0x200002
  3396                           ;	unspecified, using default values
  3397  200002                     	org	2097154
  3398  200002  FF                 	db	255
  3399                           
  3400                           ;Config register IDLOC3 @ 0x200003
  3401                           ;	unspecified, using default values
  3402  200003                     	org	2097155
  3403  200003  FF                 	db	255
  3404                           
  3405                           ;Config register IDLOC4 @ 0x200004
  3406                           ;	unspecified, using default values
  3407  200004                     	org	2097156
  3408  200004  FF                 	db	255
  3409                           
  3410                           ;Config register IDLOC5 @ 0x200005
  3411                           ;	unspecified, using default values
  3412  200005                     	org	2097157
  3413  200005  FF                 	db	255
  3414                           
  3415                           ;Config register IDLOC6 @ 0x200006
  3416                           ;	unspecified, using default values
  3417  200006                     	org	2097158
  3418  200006  FF                 	db	255
  3419                           
  3420                           ;Config register IDLOC7 @ 0x200007
  3421                           ;	unspecified, using default values
  3422  200007                     	org	2097159
  3423  200007  FF                 	db	255
  3424                           
  3425                           	psect	config
  3426                           
  3427                           ;Config register CONFIG1L @ 0x300000
  3428                           ;	PLL Selection
  3429                           ;	PLLSEL = PLL4X, 4x clock multiplier
  3430                           ;	PLL Enable Configuration bit
  3431                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  3432                           ;	CPU System Clock Postscaler
  3433                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  3434                           ;	Low Speed USB mode with 48 MHz system clock
  3435                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  3436  300000                     	org	3145728
  3437  300000  00                 	db	0
  3438                           
  3439                           ;Config register CONFIG1H @ 0x300001
  3440                           ;	Oscillator Selection
  3441                           ;	FOSC = INTOSCIO, Internal oscillator
  3442                           ;	Primary Oscillator Shutdown
  3443                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  3444                           ;	Fail-Safe Clock Monitor
  3445                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3446                           ;	Internal/External Oscillator Switchover
  3447                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3448  300001                     	org	3145729
  3449  300001  08                 	db	8
  3450                           
  3451                           ;Config register CONFIG2L @ 0x300002
  3452                           ;	Power-up Timer Enable
  3453                           ;	nPWRTEN = ON, Power up timer enabled
  3454                           ;	Brown-out Reset Enable
  3455                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  3456                           ;	Brown-out Reset Voltage
  3457                           ;	BORV = 190, BOR set to 1.9V nominal
  3458                           ;	Low-Power Brown-out Reset
  3459                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  3460  300002                     	org	3145730
  3461  300002  58                 	db	88
  3462                           
  3463                           ;Config register CONFIG2H @ 0x300003
  3464                           ;	Watchdog Timer Enable bits
  3465                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3466                           ;	Watchdog Timer Postscaler
  3467                           ;	WDTPS = 32768, 1:32768
  3468  300003                     	org	3145731
  3469  300003  3C                 	db	60
  3470                           
  3471                           ; Padding undefined space
  3472  300004                     	org	3145732
  3473  300004  FF                 	db	255
  3474                           
  3475                           ;Config register CONFIG3H @ 0x300005
  3476                           ;	CCP2 MUX bit
  3477                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  3478                           ;	PORTB A/D Enable bit
  3479                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3480                           ;	Timer3 Clock Input MUX bit
  3481                           ;	T3CMX = RC0, T3CKI function is on RC0
  3482                           ;	SDO Output MUX bit
  3483                           ;	SDOMX = RB3, SDO function is on RB3
  3484                           ;	Master Clear Reset Pin Enable
  3485                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  3486  300005                     	org	3145733
  3487  300005  D1                 	db	209
  3488                           
  3489                           ;Config register CONFIG4L @ 0x300006
  3490                           ;	Stack Full/Underflow Reset
  3491                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3492                           ;	Single-Supply ICSP Enable bit
  3493                           ;	LVP = OFF, Single-Supply ICSP disabled
  3494                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  3495                           ;	ICPRT = OFF, ICPORT disabled
  3496                           ;	Extended Instruction Set Enable bit
  3497                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  3498                           ;	Background Debugger Enable bit
  3499                           ;	DEBUG = 0x1, unprogrammed default
  3500  300006                     	org	3145734
  3501  300006  81                 	db	129
  3502                           
  3503                           ; Padding undefined space
  3504  300007                     	org	3145735
  3505  300007  FF                 	db	255
  3506                           
  3507                           ;Config register CONFIG5L @ 0x300008
  3508                           ;	Block 0 Code Protect
  3509                           ;	CP0 = OFF, Block 0 is not code-protected
  3510                           ;	Block 1 Code Protect
  3511                           ;	CP1 = OFF, Block 1 is not code-protected
  3512                           ;	Block 2 Code Protect
  3513                           ;	CP2 = OFF, Block 2 is not code-protected
  3514                           ;	Block 3 Code Protect
  3515                           ;	CP3 = OFF, Block 3 is not code-protected
  3516  300008                     	org	3145736
  3517  300008  0F                 	db	15
  3518                           
  3519                           ;Config register CONFIG5H @ 0x300009
  3520                           ;	Boot Block Code Protect
  3521                           ;	CPB = OFF, Boot block is not code-protected
  3522                           ;	Data EEPROM Code Protect
  3523                           ;	CPD = OFF, Data EEPROM is not code-protected
  3524  300009                     	org	3145737
  3525  300009  C0                 	db	192
  3526                           
  3527                           ;Config register CONFIG6L @ 0x30000A
  3528                           ;	Block 0 Write Protect
  3529                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  3530                           ;	Block 1 Write Protect
  3531                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  3532                           ;	Block 2 Write Protect
  3533                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  3534                           ;	Block 3 Write Protect
  3535                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  3536  30000A                     	org	3145738
  3537  30000A  0F                 	db	15
  3538                           
  3539                           ;Config register CONFIG6H @ 0x30000B
  3540                           ;	Configuration Registers Write Protect
  3541                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3542                           ;	Boot Block Write Protect
  3543                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  3544                           ;	Data EEPROM Write Protect
  3545                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3546  30000B                     	org	3145739
  3547  30000B  E0                 	db	224
  3548                           
  3549                           ;Config register CONFIG7L @ 0x30000C
  3550                           ;	Block 0 Table Read Protect
  3551                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  3552                           ;	Block 1 Table Read Protect
  3553                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  3554                           ;	Block 2 Table Read Protect
  3555                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  3556                           ;	Block 3 Table Read Protect
  3557                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  3558  30000C                     	org	3145740
  3559  30000C  0F                 	db	15
  3560                           
  3561                           ;Config register CONFIG7H @ 0x30000D
  3562                           ;	Boot Block Table Read Protect
  3563                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  3564  30000D                     	org	3145741
  3565  30000D  40                 	db	64
  3566                           tosu	equ	0xFFF
  3567                           tosh	equ	0xFFE
  3568                           tosl	equ	0xFFD
  3569                           stkptr	equ	0xFFC
  3570                           pclatu	equ	0xFFB
  3571                           pclath	equ	0xFFA
  3572                           pcl	equ	0xFF9
  3573                           tblptru	equ	0xFF8
  3574                           tblptrh	equ	0xFF7
  3575                           tblptrl	equ	0xFF6
  3576                           tablat	equ	0xFF5
  3577                           prodh	equ	0xFF4
  3578                           prodl	equ	0xFF3
  3579                           indf0	equ	0xFEF
  3580                           postinc0	equ	0xFEE
  3581                           postdec0	equ	0xFED
  3582                           preinc0	equ	0xFEC
  3583                           plusw0	equ	0xFEB
  3584                           fsr0h	equ	0xFEA
  3585                           fsr0l	equ	0xFE9
  3586                           wreg	equ	0xFE8
  3587                           indf1	equ	0xFE7
  3588                           postinc1	equ	0xFE6
  3589                           postdec1	equ	0xFE5
  3590                           preinc1	equ	0xFE4
  3591                           plusw1	equ	0xFE3
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           bsr	equ	0xFE0
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           preinc2	equ	0xFDC
  3599                           plusw2	equ	0xFDB
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_pantallazo
    _pantallazo->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->i1_pantallazo
    i1_pantallazo->i1_ESCRIBE_MENSAJE2
    i1_POS_CURSOR->i1_ENVIA_LCD_CMD
    i1_ESCRIBE_MENSAJE2->i1_strlen
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD
    i1_BORRAR_LCD->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_pantallazo
    i2_pantallazo->i2_ESCRIBE_MENSAJE2
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1557
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    1032
                                             45 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                             38 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     552
                                             39 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                             36 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             39 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             38 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             38 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             36 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             7     7      0     986
                                             28 COMRAM     7     7      0
                    _EUSART_Sendbyte
                       i1_pantallazo
 ---------------------------------------------------------------------------------
 (7) i1_pantallazo                                         2     2      0     971
                                             26 COMRAM     2     2      0
                       i1_BORRAR_LCD
                 i1_ESCRIBE_MENSAJE2
                       i1_POS_CURSOR
 ---------------------------------------------------------------------------------
 (8) i1_POS_CURSOR                                         2     1      1     323
                                             19 COMRAM     2     1      1
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i1_ESCRIBE_MENSAJE2                                   6     4      2     465
                                             20 COMRAM     6     4      2
                       i1_ENVIA_CHAR
                           i1_strlen
 ---------------------------------------------------------------------------------
 (9) i1_strlen                                             4     2      2     116
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) i1_ENVIA_CHAR                                         2     2      0     183
                                             17 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i1_BORRAR_LCD                                         0     0      0     183
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (9) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             17 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (10) i1_LEER_LCD                                          1     1      0      70
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_ENVIA_NIBBLE                                      1     1      0      23
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Sendbyte                                      1     1      0      15
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            4     4      0     993
                                             12 COMRAM     4     4      0
                  i2_EUSART_Sendbyte
                       i2_pantallazo
 ---------------------------------------------------------------------------------
 (12) i2_pantallazo                                        2     2      0     971
                                             10 COMRAM     2     2      0
                       i2_BORRAR_LCD
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (13) i2_POS_CURSOR                                        2     1      1     323
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (13) i2_ESCRIBE_MENSAJE2                                  6     4      2     465
                                              4 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (14) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (13) i2_BORRAR_LCD                                        0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (14) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (15) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Sendbyte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
           _ENVIA_NIBBLE
           _LEER_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _strlen
     _POS_CURSOR
       _ENVIA_LCD_CMD

 _INT1_ISR (ROOT)
   _EUSART_Sendbyte
   i1_pantallazo
     i1_BORRAR_LCD
       i1_ENVIA_LCD_CMD
         i1_ENVIA_NIBBLE
         i1_LEER_LCD
     i1_ESCRIBE_MENSAJE2
       i1_ENVIA_CHAR
         i1_ENVIA_NIBBLE
         i1_LEER_LCD
       i1_strlen
     i1_POS_CURSOR
       i1_ENVIA_LCD_CMD

 _INT0_ISR (ROOT)
   i2_EUSART_Sendbyte
   i2_pantallazo
     i2_BORRAR_LCD
       i2_ENVIA_LCD_CMD
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
     i2_ESCRIBE_MENSAJE2
       i2_ENVIA_CHAR
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
       i2_strlen
     i2_POS_CURSOR
       i2_ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     2F      2F       1       50.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhlh        2      0       0      22        0.0%
BITBIGSFRhhllh      1F      0       0      23        0.0%
BITBIGSFRhhlllh      1      0       0      24        0.0%
BITBIGSFRhhllll     14      0       0      25        0.0%
BITBIGSFRhll         5      0       0      26        0.0%
BITBIGSFRlhh         6      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRllh        23      0       0      29        0.0%
BITBIGSFRllll        9      0       0      30        0.0%
ABS                  0      0       0      31        0.0%
BIGRAM             7FF      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 14 17:00:40 2023

                        l26 0C44                          l39 0FA8                          l71 0D9A  
                        l80 0F1A                          l56 0EFE                          l74 0FB0  
                        l83 0DCE                          l68 0A5C                          l77 09C4  
                        l87 0854                          l89 088E                          l97 0ECE  
                        u10 088E                          u11 088A                          u40 0EE2  
                        u41 0EDE                          u50 0EF8                          u51 0EF4  
                        bsr 000FE0               ENVIA_CHAR@aux 0026                         l150 0A12  
                       l153 0B38                         l164 0F9A                         l165 0F9A  
                       l901 0F10                         l903 0F18                         l911 0DA8  
                       l921 0DBC                         l913 0DB0                         l905 0D9E  
                       l923 0DC2                         l915 0DB2                         l907 0DA0  
                       l861 0822                         l925 0DC8                         l917 0DB4  
                       l909 0DA4                         l871 0834                         l863 0824  
                       l919 0DB6                         l881 084A                         l873 0836  
                       l865 0826                         l857 0C7E                         l891 0876  
                       l883 0856                         l875 083E                         l867 0828  
                       l859 081E                         l885 085E                         l877 0840  
                       l869 0830                         l887 0862                         l895 087C  
                       l879 0848                         l897 0F02                         l889 086C  
                       l899 0F0E                         u310 0C1E                         u311 0C1A  
                       u320 0C3C                         u321 0C38                         u330 0A5C  
                       u331 0A58                         u280 0C72                         u281 0C6E  
                       u417 0B28                         u507 0842                         u427 0D76  
                       u517 0858                         u437 0EA6                         u527 0866  
                       u447 0EB8                         u537 0870                         u457 0984  
                       u547 0F12                         u467 0994                         u477 0DAA  
                       u487 082A                         u497 0838                 LEER_LCD@aux 0024  
                       wreg 000FE8            ??i2_ENVIA_NIBBLE 0001                ?_CURSOR_HOME 0001  
                _TXSTA1bits 000FAC             i1_ENVIA_LCD_CMD 0E04              ??_ENVIA_NIBBLE 0024  
               ?i1_LEER_LCD 0001              ENVIA_CHAR@dato 0025                        l1021 0ED2  
                      l1023 0EE2                        l1031 0D6C                        l1025 0EE8  
                      l1041 0D80                        l1033 0D70                        l1019 0FA2  
                      l1027 0EF8                        l1043 0D82                        l1035 0D74  
                      l1061 0FAA                        l1213 0EA0                        l1045 0D88  
                      l1037 0D7C                        l1029 0D6A                        l1071 099A  
                      l1063 0974                        l1215 0EAE                        l1047 0D8E  
                      l1039 0D7E                        l1081 09B8                        l1073 09A0  
                      l1065 0978                        l1217 0EB2                        l1049 0D94  
                      l1083 09BE                        l1075 09A6                        l1067 097E  
                      l1077 09AC                        l1069 098C                        l1079 09B2  
                      l1271 09E2                        l1263 09C6                        l1281 09EC  
                      l1273 09E4                        l1265 09DC                        l1291 09F6  
                      l1283 09EE                        l1275 09E6                        l1267 09DE  
                      l1611 0C1E                        l1293 09F8                        l1285 09F0  
                      l1277 09E8                        l1269 09E0                        l1621 0A24  
                      l1613 0C2A                        l1295 09FA                        l1287 09F2  
                      l1279 09EA                        l1623 0A2C                        l1615 0C3C  
                      l1297 09FC                        l1289 09F4                        l1625 0A48  
                      l1617 0A14                        l1609 0C0E                        l1705 0F92  
                      l1299 0A0E                        l1491 0C46                        l1627 0A4A  
                      l1619 0A24                        l1707 0F96                        l1493 0C52  
                      l1495 0C56                        l1497 0C72                        l1681 0B34  
                      l1673 0AF2                        l1675 0AFC                        l1677 0B08  
                      l1679 0B1E                        STR_1 0811                        STR_2 0801  
          i1POS_CURSOR@fila 0015                        _LATD 000F8C                        i1l26 0CB8  
                      i1l71 0E02                        i1l80 0F36                        i2l26 0D2C  
                      i1l74 0FB8                        i1l83 0E36                        i1l68 0AA6  
                      i2l71 0E6A                        i1l87 08C6                        i2l80 0F52  
                      i1l89 0900                        i2l74 0FC0                        i2l83 0E9E  
                      i2l68 0AF0                        i2l87 0938                        i2l89 0972  
               ?i2_LEER_LCD 0001           i2_EUSART_Sendbyte 0F6A                        _main 0F92  
                      btemp 0030           ??i2_ENVIA_LCD_CMD 0002          ?i2_EUSART_Sendbyte 0001  
                      start 007A               ?_CURSOR_ONOFF 0001                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 0025         ??i2_EUSART_Sendbyte 0001            __end_of_LCD_INIT 0ED0  
          __end_of_LEER_LCD 0890            __end_of_INT0_ISR 0C0C            __end_of_INT1_ISR 007A  
                     ?_main 0001       i2EUSART_Sendbyte@dato 0001                       i1l153 0B80  
                     i1l156 0F5A                       i1l159 0F68                       i1l177 005A  
                     i2l153 0BC8                       i2l156 0F70                       i2l172 0BF8  
                     i2l159 0F7E                       i1l857 0CF2                       i2l857 0D66  
                     _PORTD 000F83                       _TRISD 000F95                       _TRISE 000F96  
               ?_POS_CURSOR 0027   __end_ofi2_EUSART_Sendbyte 0F80                       tablat 000FF5  
                     ttemp5 0031                       ttemp6 0034                       ttemp7 0038  
                     status 000FD8                       wtemp8 0031              ??_CURSOR_ONOFF 0027  
          __end_ofi1_strlen 0CF4           ??_EUSART_Sendbyte 0011            __end_ofi2_strlen 0D68  
           __initialization 0F80                __end_of_main 0FA2               ?i1_BORRAR_LCD 0001  
  i2ESCRIBE_MENSAJE2@cadena 0005     __end_ofi1_ENVIA_LCD_CMD 0E38                      ??_main 0030  
             __activetblptr 000001               ?i1_ENVIA_CHAR 0001             i1ENVIA_CHAR@aux 0013  
             ?i2_BORRAR_LCD 0001                      _ANSELD 000F5E                      _ANSELE 000F5F  
                    i1l1311 0F56                      i1l1401 0F2A                      i1l1403 0F2C  
                    i1l1405 0F34                      i1l1421 0898                      i1l1501 0DD2  
                    i1l1431 08B0                      i1l1423 089A                      i1l1415 0890  
                    i1l1511 0DE6                      i1l1503 0DD4                      i1l1441 08D0  
                    i1l1433 08B2                      i1l1425 08A2                      i1l1417 0894  
                    i1l1521 0DFC                      i1l1513 0DE8                      i1l1505 0DD8  
                    i1l1443 08D4                      i1l1451 08EE                      i1l1435 08BA  
                    i1l1427 08A6                      i1l1419 0896                      i1l1515 0DEA  
                    i1l1507 0DDC                      i1l1445 08DE                      i1l1437 08BC  
                    i1l1429 08A8                      i1l1517 0DF0                      i1l1509 0DE4  
                    i1l1447 08E8                      i1l1439 08C8                      i1l1551 0E10  
                    i1l1519 0DF6                      i1l1631 0C92                      i1l1561 0E24  
                    i1l1553 0E18                      i1l1545 0E06                      i1l1633 0C9E  
                    i1l1563 0E2A                      i1l1555 0E1A                      i1l1547 0E08  
                    i1l1651 0A76                      i1l1635 0CB0                      i1l1715 0036  
                    i1l1565 0E30                      i1l1557 0E1C                      i1l1549 0E0C  
                    i1l1653 0A92                      i1l1645 0A5E                      i1l1629 0C82  
                    i1l1717 0038                      i1l1399 0F1E                      i1l1559 0E1E  
                    i1l1591 0CC6                      i1l1655 0A94                      i1l1647 0A6E  
                    i1l1719 0056                      i1l1593 0CCA                      i1l1649 0A6E  
                    i1l1595 0CE6                      i1l1691 0B7C                      i1l1683 0B3A  
                    i1l1669 0FB2                      i1l1589 0CBA                      i1l1685 0B44  
                    i1l1687 0B50                      i1l1689 0B66                      i2l1411 0F48  
                    i2l1413 0F50                      i2l1407 0F3A                      i2l1409 0F46  
                    i2l1601 0D3A                      i2l1531 0E4C                      i2l1523 0E3A  
                    i2l1603 0D3E                      i2l1461 090C                      i2l1453 0902  
                    i2l1541 0E5E                      i2l1533 0E4E                      i2l1525 0E3C  
                    i2l1605 0D5A                      i2l1701 0BC4                      i2l1703 0F6C  
                    i2l1471 0924                      i2l1463 0914                      i2l1455 0906  
                    i2l1543 0E64                      i2l1535 0E50                      i2l1527 0E40  
                    i2l1711 0BDC                      i2l1481 0946                      i2l1473 092C  
                    i2l1465 0918                      i2l1457 0908                      i2l1537 0E52  
                    i2l1529 0E44                      i2l1641 0D12                      i2l1713 0BF4  
                    i2l1483 0950                      i2l1475 092E                      i2l1467 091A  
                    i2l1459 090A                      i2l1571 0E74                      i2l1539 0E58  
                    i2l1643 0D24                      i2l1485 095A                      i2l1477 093A  
                    i2l1469 0922                      i2l1581 0E86                      i2l1573 0E78  
                    i2l1661 0AB8                      i2l1637 0CF6                      i2l1709 0BDA  
                    i2l1479 0942                      i2l1583 0E8C                      i2l1575 0E80  
                    i2l1567 0E6E                      i2l1671 0FBA                      i2l1663 0AC0  
                    i2l1639 0D06                      i2l1489 0960                      i2l1585 0E92  
                    i2l1577 0E82                      i2l1569 0E70                      i2l1665 0ADC  
                    i2l1657 0AA8                      i2l1587 0E98                      i2l1579 0E84  
                    i2l1667 0ADE                      i2l1659 0AB8                      i2l1693 0B82  
                    i2l1599 0D2E                      i2l1695 0B8C                      i2l1697 0B98  
                    i2l1699 0BAE                      _RCSTA1 000FAB                      _OSCCON 000FD3  
__end_ofi1_ESCRIBE_MENSAJE2 0AA8                      _SPBRG1 000FAF                      _TXREG1 000FAD  
                    _TXSTA1 000FAC         i2ESCRIBE_MENSAJE2@i 000A               ?i2_ENVIA_CHAR 0001  
              i1_pantallazo 0B3A              ??i1_BORRAR_LCD 0014        __end_of_ENVIA_NIBBLE 0F1C  
                    isa$std 000001                      _strlen 0C46              ??i1_ENVIA_CHAR 0012  
              __mediumconst 0000                i2_pantallazo 0B82                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8              ??i2_BORRAR_LCD 0004  
              ??_BORRAR_LCD 0027                   ?_LCD_INIT 0001                   ?_LEER_LCD 0001  
                __accesstop 0060     __end_of__initialization 0F80                   ?_INT0_ISR 0001  
                 ?_INT1_ISR 0001                ??_LCD_CONFIG 0027              ??i2_ENVIA_CHAR 0002  
             ___rparam_used 000001                ??_ENVIA_CHAR 0025              __pcstackCOMRAM 0001  
             ?i1_POS_CURSOR 0014          __end_of_BORRAR_LCD 0FB2            ?i1_ENVIA_LCD_CMD 0001  
       i2ENVIA_LCD_CMD@dato 0002         EUSART_Sendbyte@dato 0011            _ESCRIBE_MENSAJE2 0A14  
          ENVIA_LCD_CMD@aux 0026        __end_of_CURSOR_ONOFF 0F00          __end_of_LCD_CONFIG 09C6  
        __end_of_ENVIA_CHAR 0D9C             i2_ENVIA_LCD_CMD 0E6C                   ?i1_strlen 0011  
                 ?i2_strlen 0001                ??i1_LEER_LCD 0011               ?i2_POS_CURSOR 0004  
                ??_LCD_INIT 0028                ??i2_LEER_LCD 0001                  ??_LEER_LCD 0024  
          ENVIA_NIBBLE@dato 0024                  ??_INT0_ISR 000D                  ??_INT1_ISR 001D  
          i1ENVIA_CHAR@dato 0012              ??i1_POS_CURSOR 0015          __end_ofi1_LEER_LCD 0902  
__end_ofi2_ESCRIBE_MENSAJE2 0AF2                     ?_strlen 0024          __end_ofi2_LEER_LCD 0974  
       i1POS_CURSOR@columna 0014                     i1u18_20 0F68                     i1u26_20 0900  
                   i1u34_20 0C92                     i1u18_21 0F64                     i1u26_21 08FC  
                   i1u34_21 0C8E                     i1u35_20 0CB0                     i1u35_21 0CAC  
                   i1u60_27 08B4                     i1u29_20 0CE6                     i1u29_21 0CE2  
                   i1u61_27 08CA                     i1u38_20 0AA6                     i1u38_21 0AA2  
                   i2u30_40 0D5A                     i2u30_41 0D56                     i1u62_27 08D8  
                   i1u63_27 08E2                     i1u55_27 0B70                     i2u40_40 0F7E  
                   i2u40_41 0F7A                     i1u64_27 0F2E                     i1u56_27 0DDE  
                   i1u57_27 0E12                     i1u58_27 089C                     i2u27_40 0972  
                   i2u27_41 096E                     i1u59_27 08AA                     i2u36_40 0D06  
                   i2u36_41 0D02                     i2u37_40 0D24                     i2u37_41 0D20  
                   i2u70_47 0926                     i2u39_40 0AF0                     i2u39_41 0AEC  
                   i2u71_47 093C                     i2u72_47 094A                  ??i1_strlen 0013  
                   i2u73_47 0954                     i2u65_47 0BB8                     i2u74_47 0F4A  
                   i2u66_47 0E46                     _SPBRGH1 000FB0                     i2u67_47 0E7A  
                   i2u68_47 090E                     i2u69_47 091C                  ??i2_strlen 0003  
            ??i2_POS_CURSOR 0005        __end_ofi1_BORRAR_LCD 0FBA                ??_POS_CURSOR 0028  
           _EUSART_Sendbyte 0F54        __end_ofi1_ENVIA_CHAR 0E04                     __Hparam 0000  
                   __Lparam 0000           __end_of_configuro 0A14        __end_ofi2_BORRAR_LCD 0FC2  
              __psmallconst 0800       __end_of_ENVIA_LCD_CMD 0DD0                     __pcinit 0F80  
        __end_of_POS_CURSOR 0C46                     __ramtop 0800                     __ptext0 0F92  
                   __ptext1 0AF2                     __ptext2 0C0C                     __ptext3 0A14  
                   __ptext4 0C46                     __ptext5 0D68                     __ptext6 09C6  
                   __ptext7 0EA0                     __ptext8 0974                     __ptext9 0ED0  
   __end_ofi2_ENVIA_LCD_CMD 0EA0        __end_ofi2_ENVIA_CHAR 0E6C                  _pantallazo 0AF2  
     i1ESCRIBE_MENSAJE2@tam 0019             i2ENVIA_CHAR@aux 0003              __pintcode_body 0BCA  
              _ENVIA_NIBBLE 0F00        end_of_initialization 0F80                     int_func 0BCA  
  i1ESCRIBE_MENSAJE2@cadena 0015          i1_ESCRIBE_MENSAJE2 0A5E          i1ENVIA_LCD_CMD@aux 0013  
                   strlen@a 0026                     strlen@s 0024         ?i1_ESCRIBE_MENSAJE2 0015  
   __end_of_EUSART_Sendbyte 0F6A           ESCRIBE_MENSAJE2@i 002D                   _TRISBbits 000F93  
                 _TRISCbits 000F94          i1ENVIA_NIBBLE@dato 0011        __end_ofi1_POS_CURSOR 0CBA  
            i1_ENVIA_NIBBLE 0F1C        ??i1_ESCRIBE_MENSAJE2 0017    __end_of_ESCRIBE_MENSAJE2 0A5E  
              _CURSOR_ONOFF 0ED0          CURSOR_ONOFF@estado 0027        __end_ofi2_POS_CURSOR 0D2E  
          ?i2_ENVIA_LCD_CMD 0001              __end_of_strlen 0C80               ??_CURSOR_HOME 0027  
       start_initialization 0F80                 ?_pantallazo 0001               i1LEER_LCD@aux 0011  
    __end_ofi1_ENVIA_NIBBLE 0F38                   i1strlen@a 0013                   i1strlen@s 0011  
                 i2strlen@a 0003                   i2strlen@s 0001           ENVIA_LCD_CMD@dato 0025  
          i2POS_CURSOR@fila 0005                i1_BORRAR_LCD 0FB2                    ??_strlen 0026  
          ?_EUSART_Sendbyte 0001                i1_ENVIA_CHAR 0DD0               i2LEER_LCD@aux 0001  
              i2_BORRAR_LCD 0FBA             ?i1_ENVIA_NIBBLE 0001          i2_ESCRIBE_MENSAJE2 0AA8  
        i2ENVIA_LCD_CMD@aux 0003         __end_of_CURSOR_HOME 0FAA              i2_ENVIA_NIBBLE 0F38  
       ?i2_ESCRIBE_MENSAJE2 0005                i2_ENVIA_CHAR 0E38          i2ENVIA_NIBBLE@dato 0001  
                 __pintcode 0008                 __pintcodelo 0018                   _configuro 09C6  
      ??i2_ESCRIBE_MENSAJE2 0007                 __smallconst 0800         i2POS_CURSOR@columna 0004  
    __end_ofi2_ENVIA_NIBBLE 0F54                    _LCD_INIT 0EA0                    _LEER_LCD 081E  
                  _INT0_ISR 0008                    _INT1_ISR 0018                    _LATEbits 000F8D  
             ?i1_pantallazo 0001                    _RCONbits 000FD0                i1_POS_CURSOR 0C80  
            POS_CURSOR@fila 0028                  ?_configuro 0001      ESCRIBE_MENSAJE2@cadena 0028  
                  _WPUBbits 000F85               ?i2_pantallazo 0001                 _CURSOR_HOME 0FA2  
                  i1_strlen 0CBA       i2ESCRIBE_MENSAJE2@tam 0009                    i2_strlen 0D2E  
               _INTCON2bits 000FF1                 _INTCON3bits 000FF0                i2_POS_CURSOR 0CF4  
           ?i2_ENVIA_NIBBLE 0001           ??i1_ENVIA_LCD_CMD 0012              ??i1_pantallazo 001B  
                  __Hrparam 0000           ?_ESCRIBE_MENSAJE2 0028                    __Lrparam 0000  
              __Lsmallconst 0800          ??_ESCRIBE_MENSAJE2 002A                  _ANSELBbits 000F5C  
                _ANSELCbits 000F5D              ??i2_pantallazo 000B                ??_pantallazo 002E  
                  __ptext10 0FA2                    __ptext11 0FAA                    __ptext20 0DD0  
                  __ptext12 0D9C                    __ptext21 0FB2                    __ptext13 081E  
                  __ptext30 0D2E                    __ptext22 0E04                    __ptext14 0F00  
                  __ptext31 0E38                    __ptext23 0890                    __ptext32 0FBA  
                  __ptext24 0F1C                    __ptext16 0B3A                    __ptext33 0E6C  
                  __ptext25 0F54                    __ptext17 0C80                    __ptext34 0902  
                  __ptext18 0A5E                    __ptext35 0F38                    __ptext27 0B82  
                  __ptext19 0CBA                    __ptext36 0F6A                    __ptext28 0CF4  
                  __ptext29 0AA8                  _BORRAR_LCD 0FAA                  _LCD_CONFIG 0974  
       i1ESCRIBE_MENSAJE2@i 001A                  _ENVIA_CHAR 0D68                    isa$xinst 000000  
        __end_of_pantallazo 0B3A                    int$flags 0030            i2ENVIA_CHAR@dato 0002  
             _ENVIA_LCD_CMD 0D9C                 ??_configuro 0029                  _INTCONbits 000FF2  
          ??i1_ENVIA_NIBBLE 0011                  i1_LEER_LCD 0890                    intlevel1 0000  
                  intlevel2 0000                  i2_LEER_LCD 0902              ?_ENVIA_LCD_CMD 0001  
       i1ENVIA_LCD_CMD@dato 0012        __end_ofi1_pantallazo 0B82         ESCRIBE_MENSAJE2@tam 002C  
               ?_BORRAR_LCD 0001               ?_ENVIA_NIBBLE 0001                  _POS_CURSOR 0C0C  
               ?_LCD_CONFIG 0001                 ?_ENVIA_CHAR 0001           POS_CURSOR@columna 0027  
      __end_ofi2_pantallazo 0BCA  
