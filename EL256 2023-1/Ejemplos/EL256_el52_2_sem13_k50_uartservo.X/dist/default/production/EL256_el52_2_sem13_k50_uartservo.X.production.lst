

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 15 21:14:41 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1
    37                           	psect	text29,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.35
    45                           ; Generated 05/05/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F45K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     _RCREG1	set	4014
    80  0000                     _TXREG1	set	4013
    81  0000                     _SPBRG1	set	4015
    82  0000                     _SPBRGH1	set	4016
    83  0000                     _TRISCbits	set	3988
    84  0000                     _TRISBbits	set	3987
    85  0000                     _ANSELAbits	set	3931
    86  0000                     _PORTD	set	3971
    87  0000                     _LATD	set	3980
    88  0000                     _LATEbits	set	3981
    89  0000                     _TRISAbits	set	3986
    90  0000                     _TRISD	set	3989
    91  0000                     _PIE1bits	set	3997
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _TXSTAbits	set	4012
    94  0000                     _TRISE	set	3990
    95  0000                     _OSCCON	set	4051
    96  0000                     _WPUB	set	3973
    97  0000                     _INTCON3bits	set	4080
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _ANSELE	set	3935
   100  0000                     _ANSELD	set	3934
   101  0000                     _ANSELCbits	set	3933
   102  0000                     _ANSELBbits	set	3932
   103  0000                     _INTCONbits	set	4082
   104  0000                     _LATAbits	set	3977
   105  0000                     _PIR1bits	set	3998
   106                           
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	callstack 0
   110  000800  00                 	db	0
   111  000801                     STR_14:
   112  000801  54                 	db	84	;'T'
   113  000802  65                 	db	101	;'e'
   114  000803  63                 	db	99	;'c'
   115  000804  6C                 	db	108	;'l'
   116  000805  61                 	db	97	;'a'
   117  000806  20                 	db	32
   118  000807  65                 	db	101	;'e'
   119  000808  72                 	db	114	;'r'
   120  000809  72                 	db	114	;'r'
   121  00080A  61                 	db	97	;'a'
   122  00080B  64                 	db	100	;'d'
   123  00080C  61                 	db	97	;'a'
   124  00080D  20                 	db	32
   125  00080E  69                 	db	105	;'i'
   126  00080F  6E                 	db	110	;'n'
   127  000810  74                 	db	116	;'t'
   128  000811  65                 	db	101	;'e'
   129  000812  6E                 	db	110	;'n'
   130  000813  74                 	db	116	;'t'
   131  000814  65                 	db	101	;'e'
   132  000815  20                 	db	32
   133  000816  64                 	db	100	;'d'
   134  000817  65                 	db	101	;'e'
   135  000818  20                 	db	32
   136  000819  6E                 	db	110	;'n'
   137  00081A  75                 	db	117	;'u'
   138  00081B  65                 	db	101	;'e'
   139  00081C  76                 	db	118	;'v'
   140  00081D  6F                 	db	111	;'o'
   141  00081E  00                 	db	0
   142  00081F                     STR_20:
   143  00081F  4D                 	db	77	;'M'
   144  000820  6F                 	db	111	;'o'
   145  000821  76                 	db	118	;'v'
   146  000822  69                 	db	105	;'i'
   147  000823  65                 	db	101	;'e'
   148  000824  6E                 	db	110	;'n'
   149  000825  64                 	db	100	;'d'
   150  000826  6F                 	db	111	;'o'
   151  000827  20                 	db	32
   152  000828  73                 	db	115	;'s'
   153  000829  65                 	db	101	;'e'
   154  00082A  72                 	db	114	;'r'
   155  00082B  76                 	db	118	;'v'
   156  00082C  6F                 	db	111	;'o'
   157  00082D  20                 	db	32
   158  00082E  61                 	db	97	;'a'
   159  00082F  20                 	db	32
   160  000830  31                 	db	49	;'1'
   161  000831  38                 	db	56	;'8'
   162  000832  30                 	db	48	;'0'
   163  000833  20                 	db	32
   164  000834  67                 	db	103	;'g'
   165  000835  72                 	db	114	;'r'
   166  000836  61                 	db	97	;'a'
   167  000837  64                 	db	100	;'d'
   168  000838  6F                 	db	111	;'o'
   169  000839  73                 	db	115	;'s'
   170  00083A  00                 	db	0
   171  00083B                     STR_17:
   172  00083B  4D                 	db	77	;'M'
   173  00083C  6F                 	db	111	;'o'
   174  00083D  76                 	db	118	;'v'
   175  00083E  69                 	db	105	;'i'
   176  00083F  65                 	db	101	;'e'
   177  000840  6E                 	db	110	;'n'
   178  000841  64                 	db	100	;'d'
   179  000842  6F                 	db	111	;'o'
   180  000843  20                 	db	32
   181  000844  73                 	db	115	;'s'
   182  000845  65                 	db	101	;'e'
   183  000846  72                 	db	114	;'r'
   184  000847  76                 	db	118	;'v'
   185  000848  6F                 	db	111	;'o'
   186  000849  20                 	db	32
   187  00084A  61                 	db	97	;'a'
   188  00084B  20                 	db	32
   189  00084C  30                 	db	48	;'0'
   190  00084D  20                 	db	32
   191  00084E  67                 	db	103	;'g'
   192  00084F  72                 	db	114	;'r'
   193  000850  61                 	db	97	;'a'
   194  000851  64                 	db	100	;'d'
   195  000852  6F                 	db	111	;'o'
   196  000853  73                 	db	115	;'s'
   197  000854  00                 	db	0
   198  000855                     STR_6:
   199  000855  45                 	db	69	;'E'
   200  000856  73                 	db	115	;'s'
   201  000857  66                 	db	102	;'f'
   202  000858  6F                 	db	111	;'o'
   203  000859  72                 	db	114	;'r'
   204  00085A  7A                 	db	122	;'z'
   205  00085B  61                 	db	97	;'a'
   206  00085C  6E                 	db	110	;'n'
   207  00085D  64                 	db	100	;'d'
   208  00085E  6F                 	db	111	;'o'
   209  00085F  6D                 	db	109	;'m'
   210  000860  65                 	db	101	;'e'
   211  000861  21                 	db	33
   212  000862  21                 	db	33
   213  000863  21                 	db	33
   214  000864  00                 	db	0
   215  000865                     STR_2:
   216  000865  55                 	db	85	;'U'
   217  000866  50                 	db	80	;'P'
   218  000867  43                 	db	67	;'C'
   219  000868  20                 	db	32
   220  000869  4D                 	db	77	;'M'
   221  00086A  6F                 	db	111	;'o'
   222  00086B  6E                 	db	110	;'n'
   223  00086C  74                 	db	116	;'t'
   224  00086D  65                 	db	101	;'e'
   225  00086E  72                 	db	114	;'r'
   226  00086F  72                 	db	114	;'r'
   227  000870  69                 	db	105	;'i'
   228  000871  63                 	db	99	;'c'
   229  000872  6F                 	db	111	;'o'
   230  000873  00                 	db	0
   231  000874                     STR_15:
   232  000874  4D                 	db	77	;'M'
   233  000875  6F                 	db	111	;'o'
   234  000876  76                 	db	118	;'v'
   235  000877  69                 	db	105	;'i'
   236  000878  65                 	db	101	;'e'
   237  000879  6E                 	db	110	;'n'
   238  00087A  64                 	db	100	;'d'
   239  00087B  6F                 	db	111	;'o'
   240  00087C  20                 	db	32
   241  00087D  73                 	db	115	;'s'
   242  00087E  65                 	db	101	;'e'
   243  00087F  72                 	db	114	;'r'
   244  000880  76                 	db	118	;'v'
   245  000881  6F                 	db	111	;'o'
   246  000882  00                 	db	0
   247  000883                     STR_9:
   248  000883  50                 	db	80	;'P'
   249  000884  72                 	db	114	;'r'
   250  000885  65                 	db	101	;'e'
   251  000886  73                 	db	115	;'s'
   252  000887  69                 	db	105	;'i'
   253  000888  6F                 	db	111	;'o'
   254  000889  6E                 	db	110	;'n'
   255  00088A  61                 	db	97	;'a'
   256  00088B  73                 	db	115	;'s'
   257  00088C  74                 	db	116	;'t'
   258  00088D  65                 	db	101	;'e'
   259  00088E  20                 	db	32
   260  00088F  41                 	db	65	;'A'
   261  000890  00                 	db	0
   262  000891                     STR_10:
   263  000891  50                 	db	80	;'P'
   264  000892  72                 	db	114	;'r'
   265  000893  65                 	db	101	;'e'
   266  000894  73                 	db	115	;'s'
   267  000895  69                 	db	105	;'i'
   268  000896  6F                 	db	111	;'o'
   269  000897  6E                 	db	110	;'n'
   270  000898  61                 	db	97	;'a'
   271  000899  73                 	db	115	;'s'
   272  00089A  74                 	db	116	;'t'
   273  00089B  65                 	db	101	;'e'
   274  00089C  20                 	db	32
   275  00089D  45                 	db	69	;'E'
   276  00089E  00                 	db	0
   277  00089F                     STR_11:
   278  00089F  50                 	db	80	;'P'
   279  0008A0  72                 	db	114	;'r'
   280  0008A1  65                 	db	101	;'e'
   281  0008A2  73                 	db	115	;'s'
   282  0008A3  69                 	db	105	;'i'
   283  0008A4  6F                 	db	111	;'o'
   284  0008A5  6E                 	db	110	;'n'
   285  0008A6  61                 	db	97	;'a'
   286  0008A7  73                 	db	115	;'s'
   287  0008A8  74                 	db	116	;'t'
   288  0008A9  65                 	db	101	;'e'
   289  0008AA  20                 	db	32
   290  0008AB  49                 	db	73	;'I'
   291  0008AC  00                 	db	0
   292  0008AD                     STR_12:
   293  0008AD  50                 	db	80	;'P'
   294  0008AE  72                 	db	114	;'r'
   295  0008AF  65                 	db	101	;'e'
   296  0008B0  73                 	db	115	;'s'
   297  0008B1  69                 	db	105	;'i'
   298  0008B2  6F                 	db	111	;'o'
   299  0008B3  6E                 	db	110	;'n'
   300  0008B4  61                 	db	97	;'a'
   301  0008B5  73                 	db	115	;'s'
   302  0008B6  74                 	db	116	;'t'
   303  0008B7  65                 	db	101	;'e'
   304  0008B8  20                 	db	32
   305  0008B9  4F                 	db	79	;'O'
   306  0008BA  00                 	db	0
   307  0008BB                     STR_13:
   308  0008BB  50                 	db	80	;'P'
   309  0008BC  72                 	db	114	;'r'
   310  0008BD  65                 	db	101	;'e'
   311  0008BE  73                 	db	115	;'s'
   312  0008BF  69                 	db	105	;'i'
   313  0008C0  6F                 	db	111	;'o'
   314  0008C1  6E                 	db	110	;'n'
   315  0008C2  61                 	db	97	;'a'
   316  0008C3  73                 	db	115	;'s'
   317  0008C4  74                 	db	116	;'t'
   318  0008C5  65                 	db	101	;'e'
   319  0008C6  20                 	db	32
   320  0008C7  55                 	db	85	;'U'
   321  0008C8  00                 	db	0
   322  0008C9                     STR_5:
   323  0008C9  4D                 	db	77	;'M'
   324  0008CA  69                 	db	105	;'i'
   325  0008CB  63                 	db	99	;'c'
   326  0008CC  72                 	db	114	;'r'
   327  0008CD  6F                 	db	111	;'o'
   328  0008CE  20                 	db	32
   329  0008CF  32                 	db	50	;'2'
   330  0008D0  30                 	db	48	;'0'
   331  0008D1  32                 	db	50	;'2'
   332  0008D2  33                 	db	51	;'3'
   333  0008D3  2D                 	db	45
   334  0008D4  31                 	db	49	;'1'
   335  0008D5  00                 	db	0
   336  0008D6                     STR_16:
   337  0008D6  41                 	db	65	;'A'
   338  0008D7  6E                 	db	110	;'n'
   339  0008D8  67                 	db	103	;'g'
   340  0008D9  75                 	db	117	;'u'
   341  0008DA  6C                 	db	108	;'l'
   342  0008DB  6F                 	db	111	;'o'
   343  0008DC  3A                 	db	58	;':'
   344  0008DD  20                 	db	32
   345  0008DE  30                 	db	48	;'0'
   346  0008DF  30                 	db	48	;'0'
   347  0008E0  30                 	db	48	;'0'
   348  0008E1  00                 	db	0
   349  0008E2                     STR_19:
   350  0008E2  41                 	db	65	;'A'
   351  0008E3  6E                 	db	110	;'n'
   352  0008E4  67                 	db	103	;'g'
   353  0008E5  75                 	db	117	;'u'
   354  0008E6  6C                 	db	108	;'l'
   355  0008E7  6F                 	db	111	;'o'
   356  0008E8  3A                 	db	58	;':'
   357  0008E9  20                 	db	32
   358  0008EA  31                 	db	49	;'1'
   359  0008EB  38                 	db	56	;'8'
   360  0008EC  30                 	db	48	;'0'
   361  0008ED  00                 	db	0
   362  0008EE                     STR_1:
   363  0008EE  48                 	db	72	;'H'
   364  0008EF  6F                 	db	111	;'o'
   365  0008F0  6C                 	db	108	;'l'
   366  0008F1  61                 	db	97	;'a'
   367  0008F2  20                 	db	32
   368  0008F3  6D                 	db	109	;'m'
   369  0008F4  75                 	db	117	;'u'
   370  0008F5  6E                 	db	110	;'n'
   371  0008F6  64                 	db	100	;'d'
   372  0008F7  6F                 	db	111	;'o'
   373  0008F8  00                 	db	0
   374  0008F9  00                 	db	0	; dummy byte at the end
   375  0000                     
   376                           ; #config settings
   377                           
   378                           	psect	cinit
   379  000F4A                     __pcinit:
   380                           	callstack 0
   381  000F4A                     start_initialization:
   382                           	callstack 0
   383  000F4A                     __initialization:
   384                           	callstack 0
   385  000F4A                     end_of_initialization:
   386                           	callstack 0
   387  000F4A                     __end_of__initialization:
   388                           	callstack 0
   389  000F4A  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   390  000F4C  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   391  000F4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392  000F50  6EF8               	movwf	tblptru,c
   393  000F52  0100               	movlb	0
   394  000F54  EF9D  F007         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	callstack 0
   399  000001                     ?i2_strlen:
   400                           	callstack 0
   401  000001                     i2ENVIA_NIBBLE@dato:
   402                           	callstack 0
   403  000001                     i2LEER_LCD@aux:
   404                           	callstack 0
   405  000001                     i2EUSART_ByteSend@dato:
   406                           	callstack 0
   407  000001                     i2strlen@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     i2ENVIA_CHAR@dato:
   413                           	callstack 0
   414  000002                     i2ENVIA_LCD_CMD@dato:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     i2ENVIA_CHAR@aux:
   420                           	callstack 0
   421  000003                     i2ENVIA_LCD_CMD@aux:
   422                           	callstack 0
   423  000003                     i2strlen@a:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427  000003                     	ds	1
   428  000004                     i2POS_CURSOR@columna:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432  000004                     	ds	1
   433  000005                     i2POS_CURSOR@fila:
   434                           	callstack 0
   435  000005                     i2ESCRIBE_MENSAJE2@cadena:
   436                           	callstack 0
   437  000005                     i2EUSART_StringSend@cadenon:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x4
   441  000005                     	ds	2
   442  000007                     ??i2_ESCRIBE_MENSAJE2:
   443  000007                     ??i2_EUSART_StringSend:
   444                           
   445                           ; 1 bytes @ 0x6
   446  000007                     	ds	2
   447  000009                     i2ESCRIBE_MENSAJE2@tam:
   448                           	callstack 0
   449  000009                     i2EUSART_StringSend@tamano:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x8
   453  000009                     	ds	1
   454  00000A                     i2ESCRIBE_MENSAJE2@i:
   455                           	callstack 0
   456  00000A                     i2EUSART_StringSend@x:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x9
   460  00000A                     	ds	1
   461  00000B                     ??_INT0_INT1_ISR:
   462                           
   463                           ; 1 bytes @ 0xA
   464  00000B                     	ds	6
   465  000011                     INT0_INT1_ISR@x:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x10
   469  000011                     	ds	1
   470  000012                     ?_strlen:
   471                           	callstack 0
   472  000012                     ENVIA_NIBBLE@dato:
   473                           	callstack 0
   474  000012                     LEER_LCD@aux:
   475                           	callstack 0
   476  000012                     EUSART_ByteSend@dato:
   477                           	callstack 0
   478  000012                     strlen@s:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x11
   482  000012                     	ds	1
   483  000013                     ENVIA_CHAR@dato:
   484                           	callstack 0
   485  000013                     ENVIA_LCD_CMD@dato:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x12
   489  000013                     	ds	1
   490  000014                     ENVIA_CHAR@aux:
   491                           	callstack 0
   492  000014                     ENVIA_LCD_CMD@aux:
   493                           	callstack 0
   494  000014                     strlen@a:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x13
   498  000014                     	ds	1
   499  000015                     ??_LCD_CONFIG:
   500  000015                     POS_CURSOR@columna:
   501                           	callstack 0
   502  000015                     CURSOR_ONOFF@estado:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x14
   506  000015                     	ds	1
   507  000016                     ??_LCD_INIT:
   508  000016                     POS_CURSOR@fila:
   509                           	callstack 0
   510  000016                     ESCRIBE_MENSAJE2@cadena:
   511                           	callstack 0
   512  000016                     EUSART_StringSend@cadenon:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x15
   516  000016                     	ds	1
   517  000017                     
   518                           ; 1 bytes @ 0x16
   519  000017                     	ds	1
   520  000018                     ??_ESCRIBE_MENSAJE2:
   521  000018                     ??_EUSART_StringSend:
   522                           
   523                           ; 1 bytes @ 0x17
   524  000018                     	ds	2
   525  00001A                     ESCRIBE_MENSAJE2@tam:
   526                           	callstack 0
   527  00001A                     EUSART_StringSend@tamano:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x19
   531  00001A                     	ds	1
   532  00001B                     ESCRIBE_MENSAJE2@i:
   533                           	callstack 0
   534  00001B                     EUSART_StringSend@x:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x1A
   538  00001B                     	ds	1
   539  00001C                     ??_splash_screen:
   540                           
   541                           ; 1 bytes @ 0x1B
   542  00001C                     	ds	2
   543  00001E                     
   544                           ; 1 bytes @ 0x1D
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 84 in file "maincode3.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         0       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called: 9
   570 ;; This function calls:
   571 ;;		_configuro
   572 ;;		_splash_screen
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579  000F3A                     __ptext0:
   580                           	callstack 0
   581  000F3A                     _main:
   582                           	callstack 22
   583  000F3A                     
   584                           ;maincode3.c: 85:     configuro();
   585  000F3A  EC7D  F005         	call	_configuro	;wreg free
   586  000F3E                     
   587                           ;maincode3.c: 86:     splash_screen();
   588  000F3E  EC7D  F004         	call	_splash_screen	;wreg free
   589  000F42                     l191:
   590  000F42  EFA1  F007         	goto	l191
   591  000F46  EFFF  F000         	goto	start
   592  000F4A                     __end_of_main:
   593                           	callstack 0
   594                           
   595 ;; *************** function _splash_screen *****************
   596 ;; Defined at:
   597 ;;		line 62 in file "maincode3.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   611 ;;      Params:         0       0       0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0
   613 ;;      Temps:          2       0       0       0       0       0       0       0       0
   614 ;;      Totals:         2       0       0       0       0       0       0       0       0
   615 ;;Total ram usage:        2 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 7
   618 ;; This function calls:
   619 ;;		_BORRAR_LCD
   620 ;;		_ESCRIBE_MENSAJE2
   621 ;;		_EUSART_NewLine
   622 ;;		_EUSART_StringSend
   623 ;;		_POS_CURSOR
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text1
   630  0008FA                     __ptext1:
   631                           	callstack 0
   632  0008FA                     _splash_screen:
   633                           	callstack 23
   634  0008FA                     
   635                           ;maincode3.c: 63:     POS_CURSOR(1,0);
   636  0008FA  0E00               	movlw	0
   637  0008FC  6E15               	movwf	POS_CURSOR@columna^0,c
   638  0008FE  0E01               	movlw	1
   639  000900  EC39  F006         	call	_POS_CURSOR
   640  000904                     
   641                           ;maincode3.c: 64:     ESCRIBE_MENSAJE2("Hola mundo");
   642  000904  0EEE               	movlw	low STR_1
   643  000906  6E16               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   644  000908  0E08               	movlw	high STR_1
   645  00090A  6E17               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   646  00090C  ECCA  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   647  000910                     
   648                           ;maincode3.c: 65:     POS_CURSOR(2,0);
   649  000910  0E00               	movlw	0
   650  000912  6E15               	movwf	POS_CURSOR@columna^0,c
   651  000914  0E02               	movlw	2
   652  000916  EC39  F006         	call	_POS_CURSOR
   653                           
   654                           ;maincode3.c: 66:     ESCRIBE_MENSAJE2("UPC Monterrico");
   655  00091A  0E65               	movlw	low STR_2
   656  00091C  6E16               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   657  00091E  0E08               	movlw	high STR_2
   658  000920  6E17               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   659  000922  ECCA  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   660                           
   661                           ;maincode3.c: 67:     EUSART_StringSend("Hola mundo");
   662  000926  0EEE               	movlw	low STR_1
   663  000928  6E16               	movwf	EUSART_StringSend@cadenon^0,c
   664  00092A  0E08               	movlw	high STR_1
   665  00092C  6E17               	movwf	(EUSART_StringSend@cadenon+1)^0,c
   666  00092E  ECA5  F005         	call	_EUSART_StringSend	;wreg free
   667  000932                     
   668                           ;maincode3.c: 68:     EUSART_NewLine();
   669  000932  EC45  F007         	call	_EUSART_NewLine	;wreg free
   670  000936                     
   671                           ;maincode3.c: 69:     EUSART_StringSend("UPC Monterrico");
   672  000936  0E65               	movlw	low STR_2
   673  000938  6E16               	movwf	EUSART_StringSend@cadenon^0,c
   674  00093A  0E08               	movlw	high STR_2
   675  00093C  6E17               	movwf	(EUSART_StringSend@cadenon+1)^0,c
   676  00093E  ECA5  F005         	call	_EUSART_StringSend	;wreg free
   677                           
   678                           ;maincode3.c: 70:     EUSART_NewLine();
   679  000942  EC45  F007         	call	_EUSART_NewLine	;wreg free
   680  000946                     
   681                           ;maincode3.c: 71:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   682  000946  0E10               	movlw	16
   683  000948  6E1D               	movwf	(??_splash_screen+1)^0,c
   684  00094A  0E39               	movlw	57
   685  00094C  6E1C               	movwf	??_splash_screen^0,c
   686  00094E  0E0E               	movlw	14
   687  000950                     u497:
   688  000950  2EE8               	decfsz	wreg,f,c
   689  000952  D7FE               	bra	u497
   690  000954  2E1C               	decfsz	??_splash_screen^0,f,c
   691  000956  D7FC               	bra	u497
   692  000958  2E1D               	decfsz	(??_splash_screen+1)^0,f,c
   693  00095A  D7FA               	bra	u497
   694  00095C                     
   695                           ;maincode3.c: 72:     POS_CURSOR(1,0);
   696  00095C  0E00               	movlw	0
   697  00095E  6E15               	movwf	POS_CURSOR@columna^0,c
   698  000960  0E01               	movlw	1
   699  000962  EC39  F006         	call	_POS_CURSOR
   700  000966                     
   701                           ;maincode3.c: 73:     ESCRIBE_MENSAJE2("Micro 2023-1");
   702  000966  0EC9               	movlw	low STR_5
   703  000968  6E16               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   704  00096A  0E08               	movlw	high STR_5
   705  00096C  6E17               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   706  00096E  ECCA  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   707  000972                     
   708                           ;maincode3.c: 74:     POS_CURSOR(2,0);
   709  000972  0E00               	movlw	0
   710  000974  6E15               	movwf	POS_CURSOR@columna^0,c
   711  000976  0E02               	movlw	2
   712  000978  EC39  F006         	call	_POS_CURSOR
   713  00097C                     
   714                           ;maincode3.c: 75:     ESCRIBE_MENSAJE2("Esforzandome!!!");
   715  00097C  0E55               	movlw	low STR_6
   716  00097E  6E16               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   717  000980  0E08               	movlw	high STR_6
   718  000982  6E17               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   719  000984  ECCA  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   720  000988                     
   721                           ;maincode3.c: 76:     EUSART_StringSend("Micro 2023-1");
   722  000988  0EC9               	movlw	low STR_5
   723  00098A  6E16               	movwf	EUSART_StringSend@cadenon^0,c
   724  00098C  0E08               	movlw	high STR_5
   725  00098E  6E17               	movwf	(EUSART_StringSend@cadenon+1)^0,c
   726  000990  ECA5  F005         	call	_EUSART_StringSend	;wreg free
   727  000994                     
   728                           ;maincode3.c: 77:     EUSART_NewLine();
   729  000994  EC45  F007         	call	_EUSART_NewLine	;wreg free
   730  000998                     
   731                           ;maincode3.c: 78:     EUSART_StringSend("Esforzandome!!!");
   732  000998  0E55               	movlw	low STR_6
   733  00099A  6E16               	movwf	EUSART_StringSend@cadenon^0,c
   734  00099C  0E08               	movlw	high STR_6
   735  00099E  6E17               	movwf	(EUSART_StringSend@cadenon+1)^0,c
   736  0009A0  ECA5  F005         	call	_EUSART_StringSend	;wreg free
   737  0009A4                     
   738                           ;maincode3.c: 79:     EUSART_NewLine();
   739  0009A4  EC45  F007         	call	_EUSART_NewLine	;wreg free
   740  0009A8                     
   741                           ;maincode3.c: 80:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   742  0009A8  0E10               	movlw	16
   743  0009AA  6E1D               	movwf	(??_splash_screen+1)^0,c
   744  0009AC  0E39               	movlw	57
   745  0009AE  6E1C               	movwf	??_splash_screen^0,c
   746  0009B0  0E0E               	movlw	14
   747  0009B2                     u507:
   748  0009B2  2EE8               	decfsz	wreg,f,c
   749  0009B4  D7FE               	bra	u507
   750  0009B6  2E1C               	decfsz	??_splash_screen^0,f,c
   751  0009B8  D7FC               	bra	u507
   752  0009BA  2E1D               	decfsz	(??_splash_screen+1)^0,f,c
   753  0009BC  D7FA               	bra	u507
   754  0009BE                     
   755                           ;maincode3.c: 81:     BORRAR_LCD();
   756  0009BE  ECB0  F007         	call	_BORRAR_LCD	;wreg free
   757  0009C2  0012               	return		;funcret
   758  0009C4                     __end_of_splash_screen:
   759                           	callstack 0
   760                           
   761 ;; *************** function _POS_CURSOR *****************
   762 ;; Defined at:
   763 ;;		line 5 in file "LCD.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  fila            1    wreg     unsigned char 
   766 ;;  columna         1   20[COMRAM] unsigned char 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  fila            1   21[COMRAM] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         1       0       0       0       0       0       0       0       0
   779 ;;      Locals:         1       0       0       0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0
   781 ;;      Totals:         2       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 6
   785 ;; This function calls:
   786 ;;		_ENVIA_LCD_CMD
   787 ;; This function is called by:
   788 ;;		_splash_screen
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text2
   793  000C72                     __ptext2:
   794                           	callstack 0
   795  000C72                     _POS_CURSOR:
   796                           	callstack 23
   797                           
   798                           ;incstack = 0
   799                           ;POS_CURSOR@fila stored from wreg
   800  000C72  6E16               	movwf	POS_CURSOR@fila^0,c
   801  000C74                     
   802                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   803  000C74  0416               	decf	POS_CURSOR@fila^0,w,c
   804  000C76  A4D8               	btfss	status,2,c
   805  000C78  EF40  F006         	goto	u341
   806  000C7C  EF42  F006         	goto	u340
   807  000C80                     u341:
   808  000C80  EF48  F006         	goto	l1514
   809  000C84                     u340:
   810  000C84                     
   811                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   812  000C84  5015               	movf	POS_CURSOR@columna^0,w,c
   813  000C86  0F80               	addlw	128
   814  000C88  ECC7  F006         	call	_ENVIA_LCD_CMD
   815                           
   816                           ;LCD.c: 10:  }
   817  000C8C  EF55  F006         	goto	l26
   818  000C90                     l1514:
   819  000C90  0E02               	movlw	2
   820  000C92  1816               	xorwf	POS_CURSOR@fila^0,w,c
   821  000C94  A4D8               	btfss	status,2,c
   822  000C96  EF4F  F006         	goto	u351
   823  000C9A  EF51  F006         	goto	u350
   824  000C9E                     u351:
   825  000C9E  EF55  F006         	goto	l26
   826  000CA2                     u350:
   827  000CA2                     
   828                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   829  000CA2  5015               	movf	POS_CURSOR@columna^0,w,c
   830  000CA4  0FC0               	addlw	192
   831  000CA6  ECC7  F006         	call	_ENVIA_LCD_CMD
   832  000CAA                     l26:
   833  000CAA  0012               	return		;funcret
   834  000CAC                     __end_of_POS_CURSOR:
   835                           	callstack 0
   836                           
   837 ;; *************** function _EUSART_StringSend *****************
   838 ;; Defined at:
   839 ;;		line 53 in file "maincode3.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  cadenon         2   21[COMRAM] PTR unsigned char 
   842 ;;		 -> STR_20(28), STR_17(26), STR_14(30), STR_13(14), 
   843 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
   844 ;;		 -> STR_8(16), STR_7(13), STR_4(15), STR_3(11), 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  x               1   26[COMRAM] unsigned char 
   847 ;;  tamano          1   25[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         2       0       0       0       0       0       0       0       0
   858 ;;      Locals:         2       0       0       0       0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0
   860 ;;      Totals:         6       0       0       0       0       0       0       0       0
   861 ;;Total ram usage:        6 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 5
   864 ;; This function calls:
   865 ;;		_EUSART_ByteSend
   866 ;;		_strlen
   867 ;; This function is called by:
   868 ;;		_splash_screen
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text3
   873  000B4A                     __ptext3:
   874                           	callstack 0
   875  000B4A                     _EUSART_StringSend:
   876                           	callstack 24
   877  000B4A                     
   878                           ;maincode3.c: 54:     unsigned char tamano;;maincode3.c: 55:     tamano = strlen(cadenon
      +                          );
   879  000B4A  C016  F012         	movff	EUSART_StringSend@cadenon,strlen@s
   880  000B4E  C017  F013         	movff	EUSART_StringSend@cadenon+1,strlen@s+1
   881  000B52  EC56  F006         	call	_strlen	;wreg free
   882  000B56  5012               	movf	?_strlen^0,w,c
   883  000B58  6E1A               	movwf	EUSART_StringSend@tamano^0,c
   884  000B5A                     
   885                           ;maincode3.c: 56:     unsigned char x;;maincode3.c: 57:     for(x=0;x<tamano;x++){
   886  000B5A  0E00               	movlw	0
   887  000B5C  6E1B               	movwf	EUSART_StringSend@x^0,c
   888  000B5E  EFC0  F005         	goto	l1538
   889  000B62                     l1534:
   890                           
   891                           ;maincode3.c: 58:         EUSART_ByteSend(cadenon[x]);
   892  000B62  501B               	movf	EUSART_StringSend@x^0,w,c
   893  000B64  2416               	addwf	EUSART_StringSend@cadenon^0,w,c
   894  000B66  6E18               	movwf	??_EUSART_StringSend^0,c
   895  000B68  0E00               	movlw	0
   896  000B6A  2017               	addwfc	(EUSART_StringSend@cadenon+1)^0,w,c
   897  000B6C  6E19               	movwf	(??_EUSART_StringSend+1)^0,c
   898  000B6E  C018  FFF6         	movff	??_EUSART_StringSend,tblptrl
   899  000B72  C019  FFF7         	movff	??_EUSART_StringSend+1,tblptrh
   900  000B76                     	if	0	;tblptru may be non-zero
   901  000B76                     	endif
   902  000B76                     	if	0	;tblptru may be non-zero
   903  000B76                     	endif
   904  000B76  0008               	tblrd		*
   905  000B78  50F5               	movf	tablat,w,c
   906  000B7A  EC87  F007         	call	_EUSART_ByteSend
   907  000B7E                     
   908                           ;maincode3.c: 59:     }
   909  000B7E  2A1B               	incf	EUSART_StringSend@x^0,f,c
   910  000B80                     l1538:
   911  000B80  501A               	movf	EUSART_StringSend@tamano^0,w,c
   912  000B82  5C1B               	subwf	EUSART_StringSend@x^0,w,c
   913  000B84  A0D8               	btfss	status,0,c
   914  000B86  EFC7  F005         	goto	u371
   915  000B8A  EFC9  F005         	goto	u370
   916  000B8E                     u371:
   917  000B8E  EFB1  F005         	goto	l1534
   918  000B92                     u370:
   919  000B92  0012               	return		;funcret
   920  000B94                     __end_of_EUSART_StringSend:
   921                           	callstack 0
   922                           
   923 ;; *************** function _EUSART_ByteSend *****************
   924 ;; Defined at:
   925 ;;		line 41 in file "maincode3.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  dato            1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  dato            1   17[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 4
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_EUSART_StringSend
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text4
   954  000F0E                     __ptext4:
   955                           	callstack 0
   956  000F0E                     _EUSART_ByteSend:
   957                           	callstack 24
   958                           
   959                           ;incstack = 0
   960                           ;EUSART_ByteSend@dato stored from wreg
   961  000F0E  6E12               	movwf	EUSART_ByteSend@dato^0,c
   962  000F10                     
   963                           ;maincode3.c: 42:     TXREG1 = dato;
   964  000F10  C012  FFAD         	movff	EUSART_ByteSend@dato,4013	;volatile
   965  000F14                     l165:
   966  000F14  A2AC               	btfss	172,1,c	;volatile
   967  000F16  EF8F  F007         	goto	u51
   968  000F1A  EF91  F007         	goto	u50
   969  000F1E                     u51:
   970  000F1E  EF8A  F007         	goto	l165
   971  000F22                     u50:
   972  000F22  0012               	return		;funcret
   973  000F24                     __end_of_EUSART_ByteSend:
   974                           	callstack 0
   975                           
   976 ;; *************** function _EUSART_NewLine *****************
   977 ;; Defined at:
   978 ;;		line 46 in file "maincode3.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 4
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_splash_screen
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text5
  1007  000E8A                     __ptext5:
  1008                           	callstack 0
  1009  000E8A                     _EUSART_NewLine:
  1010                           	callstack 25
  1011  000E8A                     
  1012                           ;maincode3.c: 47:     TXREG1 = 0x0A;
  1013  000E8A  0E0A               	movlw	10
  1014  000E8C  6EAD               	movwf	173,c	;volatile
  1015  000E8E                     l171:
  1016  000E8E  A2AC               	btfss	172,1,c	;volatile
  1017  000E90  EF4C  F007         	goto	u101
  1018  000E94  EF4E  F007         	goto	u100
  1019  000E98                     u101:
  1020  000E98  EF47  F007         	goto	l171
  1021  000E9C                     u100:
  1022  000E9C                     
  1023                           ;maincode3.c: 49:     TXREG1 = 0x0D;
  1024  000E9C  0E0D               	movlw	13
  1025  000E9E  6EAD               	movwf	173,c	;volatile
  1026  000EA0                     l174:
  1027  000EA0  A2AC               	btfss	172,1,c	;volatile
  1028  000EA2  EF55  F007         	goto	u111
  1029  000EA6  EF57  F007         	goto	u110
  1030  000EAA                     u111:
  1031  000EAA  EF50  F007         	goto	l174
  1032  000EAE                     u110:
  1033  000EAE  0012               	return		;funcret
  1034  000EB0                     __end_of_EUSART_NewLine:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1038 ;; Defined at:
  1039 ;;		line 69 in file "LCD.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  cadena          2   21[COMRAM] PTR const unsigned char 
  1042 ;;		 -> STR_19(12), STR_18(15), STR_16(12), STR_15(15), 
  1043 ;;		 -> STR_6(16), STR_5(13), STR_2(15), STR_1(11), 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  i               1   26[COMRAM] unsigned char 
  1046 ;;  tam             1   25[COMRAM] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1056 ;;      Params:         2       0       0       0       0       0       0       0       0
  1057 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1058 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1059 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1060 ;;Total ram usage:        6 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 6
  1063 ;; This function calls:
  1064 ;;		_ENVIA_CHAR
  1065 ;;		_strlen
  1066 ;; This function is called by:
  1067 ;;		_splash_screen
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text6
  1072  000B94                     __ptext6:
  1073                           	callstack 0
  1074  000B94                     _ESCRIBE_MENSAJE2:
  1075                           	callstack 23
  1076  000B94                     
  1077                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  1078  000B94  C016  F012         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1079  000B98  C017  F013         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1080  000B9C  EC56  F006         	call	_strlen	;wreg free
  1081  000BA0  5012               	movf	?_strlen^0,w,c
  1082  000BA2  6E1A               	movwf	ESCRIBE_MENSAJE2@tam^0,c
  1083  000BA4                     
  1084                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  1085  000BA4  0E00               	movlw	0
  1086  000BA6  6E1B               	movwf	ESCRIBE_MENSAJE2@i^0,c
  1087  000BA8  EFE5  F005         	goto	l1528
  1088  000BAC                     l1524:
  1089                           
  1090                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  1091  000BAC  501B               	movf	ESCRIBE_MENSAJE2@i^0,w,c
  1092  000BAE  2416               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
  1093  000BB0  6E18               	movwf	??_ESCRIBE_MENSAJE2^0,c
  1094  000BB2  0E00               	movlw	0
  1095  000BB4  2017               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  1096  000BB6  6E19               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
  1097  000BB8  C018  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1098  000BBC  C019  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1099  000BC0                     	if	0	;tblptru may be non-zero
  1100  000BC0                     	endif
  1101  000BC0                     	if	0	;tblptru may be non-zero
  1102  000BC0                     	endif
  1103  000BC0  0008               	tblrd		*
  1104  000BC2  50F5               	movf	tablat,w,c
  1105  000BC4  ECAD  F006         	call	_ENVIA_CHAR
  1106  000BC8                     
  1107                           ;LCD.c: 77:  }
  1108  000BC8  2A1B               	incf	ESCRIBE_MENSAJE2@i^0,f,c
  1109  000BCA                     l1528:
  1110  000BCA  501A               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
  1111  000BCC  5C1B               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
  1112  000BCE  A0D8               	btfss	status,0,c
  1113  000BD0  EFEC  F005         	goto	u361
  1114  000BD4  EFEE  F005         	goto	u360
  1115  000BD8                     u361:
  1116  000BD8  EFD6  F005         	goto	l1524
  1117  000BDC                     u360:
  1118  000BDC  0012               	return		;funcret
  1119  000BDE                     __end_of_ESCRIBE_MENSAJE2:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _strlen *****************
  1123 ;; Defined at:
  1124 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  s               2   17[COMRAM] PTR const unsigned char 
  1127 ;;		 -> STR_20(28), STR_19(12), STR_18(15), STR_17(26), 
  1128 ;;		 -> STR_16(12), STR_15(15), STR_14(30), STR_13(14), 
  1129 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  1130 ;;		 -> STR_8(16), STR_7(13), STR_6(16), STR_5(13), 
  1131 ;;		 -> STR_4(15), STR_3(11), STR_2(15), STR_1(11), 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  a               2   19[COMRAM] PTR const unsigned char 
  1134 ;;		 -> STR_20(28), STR_19(12), STR_18(15), STR_17(26), 
  1135 ;;		 -> STR_16(12), STR_15(15), STR_14(30), STR_13(14), 
  1136 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  1137 ;;		 -> STR_8(16), STR_7(13), STR_6(16), STR_5(13), 
  1138 ;;		 -> STR_4(15), STR_3(11), STR_2(15), STR_1(11), 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2   17[COMRAM] unsigned int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1148 ;;      Params:         2       0       0       0       0       0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1151 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1152 ;;Total ram usage:        4 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 4
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_ESCRIBE_MENSAJE2
  1159 ;;		_EUSART_StringSend
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text7
  1164  000CAC                     __ptext7:
  1165                           	callstack 0
  1166  000CAC                     _strlen:
  1167                           	callstack 24
  1168  000CAC  C012  F014         	movff	strlen@s,strlen@a
  1169  000CB0  C013  F015         	movff	strlen@s+1,strlen@a+1
  1170  000CB4  EF5E  F006         	goto	l1458
  1171  000CB8                     l1456:
  1172  000CB8  4A12               	infsnz	strlen@s^0,f,c
  1173  000CBA  2A13               	incf	(strlen@s+1)^0,f,c
  1174  000CBC                     l1458:
  1175  000CBC  C012  FFF6         	movff	strlen@s,tblptrl
  1176  000CC0  C013  FFF7         	movff	strlen@s+1,tblptrh
  1177  000CC4                     	if	0	;tblptru may be non-zero
  1178  000CC4                     	endif
  1179  000CC4                     	if	0	;tblptru may be non-zero
  1180  000CC4                     	endif
  1181  000CC4  0008               	tblrd		*
  1182  000CC6  50F5               	movf	tablat,w,c
  1183  000CC8  0900               	iorlw	0
  1184  000CCA  A4D8               	btfss	status,2,c
  1185  000CCC  EF6A  F006         	goto	u321
  1186  000CD0  EF6C  F006         	goto	u320
  1187  000CD4                     u321:
  1188  000CD4  EF5C  F006         	goto	l1456
  1189  000CD8                     u320:
  1190  000CD8  5014               	movf	strlen@a^0,w,c
  1191  000CDA  5C12               	subwf	strlen@s^0,w,c
  1192  000CDC  6E12               	movwf	?_strlen^0,c
  1193  000CDE  5015               	movf	(strlen@a+1)^0,w,c
  1194  000CE0  5813               	subwfb	(strlen@s+1)^0,w,c
  1195  000CE2  6E13               	movwf	(?_strlen+1)^0,c
  1196  000CE4  0012               	return		;funcret
  1197  000CE6                     __end_of_strlen:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _ENVIA_CHAR *****************
  1201 ;; Defined at:
  1202 ;;		line 80 in file "LCD.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  dato            1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  dato            1   18[COMRAM] unsigned char 
  1207 ;;  aux             1   19[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1220 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1221 ;;Total ram usage:        2 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 5
  1224 ;; This function calls:
  1225 ;;		_ENVIA_NIBBLE
  1226 ;;		_LEER_LCD
  1227 ;; This function is called by:
  1228 ;;		_ESCRIBE_MENSAJE2
  1229 ;;		_ESCRIBE_MENSAJE
  1230 ;;		_GENERACARACTER
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text8
  1235  000D5A                     __ptext8:
  1236                           	callstack 0
  1237  000D5A                     _ENVIA_CHAR:
  1238                           	callstack 23
  1239                           
  1240                           ;incstack = 0
  1241                           ;ENVIA_CHAR@dato stored from wreg
  1242  000D5A  6E13               	movwf	ENVIA_CHAR@dato^0,c
  1243  000D5C                     
  1244                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  1245  000D5C  808D               	bsf	141,0,c	;volatile
  1246  000D5E                     
  1247                           ;LCD.c: 84:  LEER_LCD();
  1248  000D5E  ECE2  F004         	call	_LEER_LCD	;wreg free
  1249  000D62                     
  1250                           ;LCD.c: 85:  TRISD = 0x00;
  1251  000D62  0E00               	movlw	0
  1252  000D64  6E95               	movwf	149,c	;volatile
  1253  000D66                     
  1254                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1255  000D66  0E21               	movlw	33
  1256  000D68                     u517:
  1257  000D68  2EE8               	decfsz	wreg,f,c
  1258  000D6A  D7FE               	bra	u517
  1259  000D6C  F000               	nop	
  1260  000D6E                     
  1261                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  1262  000D6E  928D               	bcf	141,1,c	;volatile
  1263  000D70                     
  1264                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  1265  000D70  948D               	bcf	141,2,c	;volatile
  1266  000D72                     
  1267                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  1268  000D72  808D               	bsf	141,0,c	;volatile
  1269  000D74                     
  1270                           ;LCD.c: 90:  aux = dato & 0xF0;
  1271  000D74  5013               	movf	ENVIA_CHAR@dato^0,w,c
  1272  000D76  0BF0               	andlw	240
  1273  000D78  6E14               	movwf	ENVIA_CHAR@aux^0,c
  1274  000D7A                     
  1275                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1276  000D7A  5014               	movf	ENVIA_CHAR@aux^0,w,c
  1277  000D7C  EC6B  F007         	call	_ENVIA_NIBBLE
  1278  000D80                     
  1279                           ;LCD.c: 92:  aux = dato << 4;
  1280  000D80  3813               	swapf	ENVIA_CHAR@dato^0,w,c
  1281  000D82  0BF0               	andlw	240
  1282  000D84  6E14               	movwf	ENVIA_CHAR@aux^0,c
  1283  000D86                     
  1284                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1285  000D86  5014               	movf	ENVIA_CHAR@aux^0,w,c
  1286  000D88  EC6B  F007         	call	_ENVIA_NIBBLE
  1287  000D8C  0012               	return		;funcret
  1288  000D8E                     __end_of_ENVIA_CHAR:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _configuro *****************
  1292 ;; Defined at:
  1293 ;;		line 7 in file "maincode3.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 8
  1314 ;; This function calls:
  1315 ;;		_LCD_INIT
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text9
  1322  000AFA                     __ptext9:
  1323                           	callstack 0
  1324  000AFA                     _configuro:
  1325                           	callstack 22
  1326  000AFA                     
  1327                           ;maincode3.c: 8:     OSCCON = 0x52;
  1328  000AFA  0E52               	movlw	82
  1329  000AFC  6ED3               	movwf	211,c	;volatile
  1330  000AFE                     
  1331                           ;maincode3.c: 9:     TRISAbits.RA0 = 0;
  1332  000AFE  9092               	bcf	146,0,c	;volatile
  1333  000B00                     
  1334                           ;maincode3.c: 10:     ANSELAbits.ANSA0 = 0;
  1335  000B00  010F               	movlb	15	; () banked
  1336  000B02  915B               	bcf	91,0,b	;volatile
  1337  000B04                     
  1338                           ; BSR set to: 15
  1339                           ;maincode3.c: 11:     TRISBbits.RB1 = 1;
  1340  000B04  8293               	bsf	147,1,c	;volatile
  1341  000B06                     
  1342                           ; BSR set to: 15
  1343                           ;maincode3.c: 12:     ANSELBbits.ANSB1 = 0;
  1344  000B06  935C               	bcf	92,1,b	;volatile
  1345  000B08                     
  1346                           ; BSR set to: 15
  1347                           ;maincode3.c: 13:     TRISBbits.RB0 = 1;
  1348  000B08  8093               	bsf	147,0,c	;volatile
  1349  000B0A                     
  1350                           ; BSR set to: 15
  1351                           ;maincode3.c: 14:     ANSELBbits.ANSB0 = 0;
  1352  000B0A  915C               	bcf	92,0,b	;volatile
  1353  000B0C                     
  1354                           ; BSR set to: 15
  1355                           ;maincode3.c: 15:     TRISCbits.RC6 = 0;
  1356  000B0C  9C94               	bcf	148,6,c	;volatile
  1357  000B0E                     
  1358                           ; BSR set to: 15
  1359                           ;maincode3.c: 16:     ANSELCbits.ANSC6 = 0;
  1360  000B0E  9D5D               	bcf	93,6,b	;volatile
  1361  000B10                     
  1362                           ; BSR set to: 15
  1363                           ;maincode3.c: 17:     TRISCbits.RC7 = 1;
  1364  000B10  8E94               	bsf	148,7,c	;volatile
  1365  000B12                     
  1366                           ; BSR set to: 15
  1367                           ;maincode3.c: 18:     ANSELCbits.ANSC7 = 0;
  1368  000B12  9F5D               	bcf	93,7,b	;volatile
  1369                           
  1370                           ;maincode3.c: 19:     TRISD = 0x0F;
  1371  000B14  0E0F               	movlw	15
  1372  000B16  6E95               	movwf	149,c	;volatile
  1373                           
  1374                           ;maincode3.c: 20:     ANSELD = 0x0F;
  1375  000B18  0E0F               	movlw	15
  1376  000B1A  6F5E               	movwf	94,b	;volatile
  1377                           
  1378                           ;maincode3.c: 21:     TRISE = 0xF8;
  1379  000B1C  0EF8               	movlw	248
  1380  000B1E  6E96               	movwf	150,c	;volatile
  1381                           
  1382                           ;maincode3.c: 22:     ANSELE = 0xF8;
  1383  000B20  0EF8               	movlw	248
  1384  000B22  6F5F               	movwf	95,b	;volatile
  1385  000B24                     
  1386                           ; BSR set to: 15
  1387                           ;maincode3.c: 23:     LCD_INIT();
  1388  000B24  EC15  F007         	call	_LCD_INIT	;wreg free
  1389  000B28                     
  1390                           ;maincode3.c: 25:     INTCON2bits.RBPU = 0;
  1391  000B28  9EF1               	bcf	241,7,c	;volatile
  1392  000B2A                     
  1393                           ;maincode3.c: 26:     WPUB = 0x03;
  1394  000B2A  0E03               	movlw	3
  1395  000B2C  6E85               	movwf	133,c	;volatile
  1396  000B2E                     
  1397                           ;maincode3.c: 27:     INTCONbits.INT0IE = 1;
  1398  000B2E  88F2               	bsf	242,4,c	;volatile
  1399  000B30                     
  1400                           ;maincode3.c: 28:     INTCON3bits.INT1IE = 1;
  1401  000B30  86F0               	bsf	240,3,c	;volatile
  1402  000B32                     
  1403                           ;maincode3.c: 29:     INTCONbits.GIE = 1;
  1404  000B32  8EF2               	bsf	242,7,c	;volatile
  1405  000B34                     
  1406                           ;maincode3.c: 30:     INTCONbits.PEIE = 1;
  1407  000B34  8CF2               	bsf	242,6,c	;volatile
  1408  000B36                     
  1409                           ;maincode3.c: 32:     TXSTAbits.BRGH = 1;
  1410  000B36  84AC               	bsf	172,2,c	;volatile
  1411  000B38                     
  1412                           ;maincode3.c: 33:     SPBRGH1 = 0;
  1413  000B38  0E00               	movlw	0
  1414  000B3A  6EB0               	movwf	176,c	;volatile
  1415  000B3C                     
  1416                           ;maincode3.c: 34:     SPBRG1 = 25;
  1417  000B3C  0E19               	movlw	25
  1418  000B3E  6EAF               	movwf	175,c	;volatile
  1419  000B40                     
  1420                           ;maincode3.c: 35:     TXSTAbits.TXEN = 1;
  1421  000B40  8AAC               	bsf	172,5,c	;volatile
  1422  000B42                     
  1423                           ;maincode3.c: 36:     RCSTAbits.SPEN = 1;
  1424  000B42  8EAB               	bsf	171,7,c	;volatile
  1425  000B44                     
  1426                           ;maincode3.c: 37:     RCSTAbits.CREN = 1;
  1427  000B44  88AB               	bsf	171,4,c	;volatile
  1428  000B46                     
  1429                           ;maincode3.c: 38:     PIE1bits.RC1IE = 1;
  1430  000B46  8A9D               	bsf	157,5,c	;volatile
  1431  000B48  0012               	return		;funcret
  1432  000B4A                     __end_of_configuro:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _LCD_INIT *****************
  1436 ;; Defined at:
  1437 ;;		line 184 in file "LCD.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1454 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        1 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 7
  1458 ;; This function calls:
  1459 ;;		_BORRAR_LCD
  1460 ;;		_CURSOR_HOME
  1461 ;;		_CURSOR_ONOFF
  1462 ;;		_LCD_CONFIG
  1463 ;; This function is called by:
  1464 ;;		_configuro
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text10
  1469  000E2A                     __ptext10:
  1470                           	callstack 0
  1471  000E2A                     _LCD_INIT:
  1472                           	callstack 22
  1473  000E2A                     
  1474                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1475  000E2A  0E14               	movlw	20
  1476  000E2C  6E16               	movwf	??_LCD_INIT^0,c
  1477  000E2E  0E7A               	movlw	122
  1478  000E30                     u527:
  1479  000E30  2EE8               	decfsz	wreg,f,c
  1480  000E32  D7FE               	bra	u527
  1481  000E34  2E16               	decfsz	??_LCD_INIT^0,f,c
  1482  000E36  D7FC               	bra	u527
  1483  000E38                     
  1484                           ;LCD.c: 186:     LCD_CONFIG();
  1485  000E38  EC54  F005         	call	_LCD_CONFIG	;wreg free
  1486  000E3C                     
  1487                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1488  000E3C  0E14               	movlw	20
  1489  000E3E  6E16               	movwf	??_LCD_INIT^0,c
  1490  000E40  0E7A               	movlw	122
  1491  000E42                     u537:
  1492  000E42  2EE8               	decfsz	wreg,f,c
  1493  000E44  D7FE               	bra	u537
  1494  000E46  2E16               	decfsz	??_LCD_INIT^0,f,c
  1495  000E48  D7FC               	bra	u537
  1496                           
  1497                           ;LCD.c: 188:     BORRAR_LCD();
  1498  000E4A  ECB0  F007         	call	_BORRAR_LCD	;wreg free
  1499                           
  1500                           ;LCD.c: 189:     CURSOR_HOME();
  1501  000E4E  ECAC  F007         	call	_CURSOR_HOME	;wreg free
  1502                           
  1503                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1504  000E52  0E01               	movlw	1
  1505  000E54  EC2D  F007         	call	_CURSOR_ONOFF
  1506  000E58  0012               	return		;funcret
  1507  000E5A                     __end_of_LCD_INIT:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _LCD_CONFIG *****************
  1511 ;; Defined at:
  1512 ;;		line 101 in file "LCD.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1528 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1529 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1530 ;;Total ram usage:        1 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 6
  1533 ;; This function calls:
  1534 ;;		_ENVIA_LCD_CMD
  1535 ;;		_ENVIA_NIBBLE
  1536 ;; This function is called by:
  1537 ;;		_LCD_INIT
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text11
  1542  000AA8                     __ptext11:
  1543                           	callstack 0
  1544  000AA8                     _LCD_CONFIG:
  1545                           	callstack 22
  1546  000AA8                     
  1547                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
  1548  000AA8  908D               	bcf	141,0,c	;volatile
  1549                           
  1550                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
  1551  000AAA  928D               	bcf	141,1,c	;volatile
  1552  000AAC                     
  1553                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1554  000AAC  0E30               	movlw	48
  1555  000AAE  EC6B  F007         	call	_ENVIA_NIBBLE
  1556  000AB2                     
  1557                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1558  000AB2  0E03               	movlw	3
  1559  000AB4  6E15               	movwf	??_LCD_CONFIG^0,c
  1560  000AB6  0E98               	movlw	152
  1561  000AB8                     u547:
  1562  000AB8  2EE8               	decfsz	wreg,f,c
  1563  000ABA  D7FE               	bra	u547
  1564  000ABC  2E15               	decfsz	??_LCD_CONFIG^0,f,c
  1565  000ABE  D7FC               	bra	u547
  1566  000AC0                     
  1567                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1568  000AC0  0E30               	movlw	48
  1569  000AC2  EC6B  F007         	call	_ENVIA_NIBBLE
  1570                           
  1571                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1572  000AC6  0E21               	movlw	33
  1573  000AC8                     u557:
  1574  000AC8  2EE8               	decfsz	wreg,f,c
  1575  000ACA  D7FE               	bra	u557
  1576  000ACC  F000               	nop	
  1577  000ACE                     
  1578                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1579  000ACE  0E30               	movlw	48
  1580  000AD0  EC6B  F007         	call	_ENVIA_NIBBLE
  1581  000AD4                     
  1582                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1583  000AD4  0E20               	movlw	32
  1584  000AD6  EC6B  F007         	call	_ENVIA_NIBBLE
  1585  000ADA                     
  1586                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1587  000ADA  0E01               	movlw	1
  1588  000ADC  ECC7  F006         	call	_ENVIA_LCD_CMD
  1589  000AE0                     
  1590                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1591  000AE0  0E28               	movlw	40
  1592  000AE2  ECC7  F006         	call	_ENVIA_LCD_CMD
  1593  000AE6                     
  1594                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1595  000AE6  0E0F               	movlw	15
  1596  000AE8  ECC7  F006         	call	_ENVIA_LCD_CMD
  1597  000AEC                     
  1598                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1599  000AEC  0E06               	movlw	6
  1600  000AEE  ECC7  F006         	call	_ENVIA_LCD_CMD
  1601  000AF2                     
  1602                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1603  000AF2  0E01               	movlw	1
  1604  000AF4  ECC7  F006         	call	_ENVIA_LCD_CMD
  1605  000AF8  0012               	return		;funcret
  1606  000AFA                     __end_of_LCD_CONFIG:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _CURSOR_ONOFF *****************
  1610 ;; Defined at:
  1611 ;;		line 54 in file "LCD.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  estado          1    wreg     unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  estado          1   20[COMRAM] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1628 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:        1 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 6
  1632 ;; This function calls:
  1633 ;;		_ENVIA_LCD_CMD
  1634 ;; This function is called by:
  1635 ;;		_LCD_INIT
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text12
  1640  000E5A                     __ptext12:
  1641                           	callstack 0
  1642  000E5A                     _CURSOR_ONOFF:
  1643                           	callstack 22
  1644                           
  1645                           ;incstack = 0
  1646                           ;CURSOR_ONOFF@estado stored from wreg
  1647  000E5A  6E15               	movwf	CURSOR_ONOFF@estado^0,c
  1648  000E5C                     
  1649                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1650  000E5C  5015               	movf	CURSOR_ONOFF@estado^0,w,c
  1651  000E5E  A4D8               	btfss	status,2,c
  1652  000E60  EF34  F007         	goto	u21
  1653  000E64  EF36  F007         	goto	u20
  1654  000E68                     u21:
  1655  000E68  EF39  F007         	goto	l972
  1656  000E6C                     u20:
  1657  000E6C  0E0E               	movlw	14
  1658  000E6E  ECC7  F006         	call	_ENVIA_LCD_CMD
  1659  000E72                     l972:
  1660                           
  1661                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1662  000E72  0415               	decf	CURSOR_ONOFF@estado^0,w,c
  1663  000E74  A4D8               	btfss	status,2,c
  1664  000E76  EF3F  F007         	goto	u31
  1665  000E7A  EF41  F007         	goto	u30
  1666  000E7E                     u31:
  1667  000E7E  EF44  F007         	goto	l56
  1668  000E82                     u30:
  1669  000E82  0E0C               	movlw	12
  1670  000E84  ECC7  F006         	call	_ENVIA_LCD_CMD
  1671  000E88                     l56:
  1672  000E88  0012               	return		;funcret
  1673  000E8A                     __end_of_CURSOR_ONOFF:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _CURSOR_HOME *****************
  1677 ;; Defined at:
  1678 ;;		line 29 in file "LCD.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 6
  1699 ;; This function calls:
  1700 ;;		_ENVIA_LCD_CMD
  1701 ;; This function is called by:
  1702 ;;		_LCD_INIT
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text13
  1707  000F58                     __ptext13:
  1708                           	callstack 0
  1709  000F58                     _CURSOR_HOME:
  1710                           	callstack 22
  1711  000F58                     
  1712                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1713  000F58  0E02               	movlw	2
  1714  000F5A  ECC7  F006         	call	_ENVIA_LCD_CMD
  1715  000F5E  0012               	return		;funcret
  1716  000F60                     __end_of_CURSOR_HOME:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _BORRAR_LCD *****************
  1720 ;; Defined at:
  1721 ;;		line 96 in file "LCD.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 6
  1742 ;; This function calls:
  1743 ;;		_ENVIA_LCD_CMD
  1744 ;; This function is called by:
  1745 ;;		_LCD_INIT
  1746 ;;		_splash_screen
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text14
  1751  000F60                     __ptext14:
  1752                           	callstack 0
  1753  000F60                     _BORRAR_LCD:
  1754                           	callstack 23
  1755  000F60                     
  1756                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1757  000F60  0E01               	movlw	1
  1758  000F62  ECC7  F006         	call	_ENVIA_LCD_CMD
  1759  000F66  0012               	return		;funcret
  1760  000F68                     __end_of_BORRAR_LCD:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _ENVIA_LCD_CMD *****************
  1764 ;; Defined at:
  1765 ;;		line 128 in file "LCD.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  dato            1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  dato            1   18[COMRAM] unsigned char 
  1770 ;;  aux             1   19[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        2 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 5
  1787 ;; This function calls:
  1788 ;;		_ENVIA_NIBBLE
  1789 ;;		_LEER_LCD
  1790 ;; This function is called by:
  1791 ;;		_POS_CURSOR
  1792 ;;		_CURSOR_HOME
  1793 ;;		_CURSOR_ONOFF
  1794 ;;		_BORRAR_LCD
  1795 ;;		_LCD_CONFIG
  1796 ;;		_BLINK_CURSOR
  1797 ;;		_DISPLAY_ONOFF
  1798 ;;		_CURSOR_SHIFTLEFT
  1799 ;;		_CURSOR_SHIFTRIGHT
  1800 ;;		_DISPLAY_SHIFTLEFT
  1801 ;;		_DISPLAY_SHIFTRIGHT
  1802 ;;		_GENERACARACTER
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text15
  1807  000D8E                     __ptext15:
  1808                           	callstack 0
  1809  000D8E                     _ENVIA_LCD_CMD:
  1810                           	callstack 23
  1811                           
  1812                           ;incstack = 0
  1813                           ;ENVIA_LCD_CMD@dato stored from wreg
  1814  000D8E  6E13               	movwf	ENVIA_LCD_CMD@dato^0,c
  1815  000D90                     
  1816                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1817  000D90  908D               	bcf	141,0,c	;volatile
  1818  000D92                     
  1819                           ;LCD.c: 132:  LEER_LCD();
  1820  000D92  ECE2  F004         	call	_LEER_LCD	;wreg free
  1821  000D96                     
  1822                           ;LCD.c: 133:  TRISD = 0b00000000;
  1823  000D96  0E00               	movlw	0
  1824  000D98  6E95               	movwf	149,c	;volatile
  1825  000D9A                     
  1826                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1827  000D9A  0E21               	movlw	33
  1828  000D9C                     u567:
  1829  000D9C  2EE8               	decfsz	wreg,f,c
  1830  000D9E  D7FE               	bra	u567
  1831  000DA0  F000               	nop	
  1832  000DA2                     
  1833                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1834  000DA2  928D               	bcf	141,1,c	;volatile
  1835  000DA4                     
  1836                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1837  000DA4  948D               	bcf	141,2,c	;volatile
  1838  000DA6                     
  1839                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1840  000DA6  908D               	bcf	141,0,c	;volatile
  1841  000DA8                     
  1842                           ;LCD.c: 138:  aux = dato & 0xF0;
  1843  000DA8  5013               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1844  000DAA  0BF0               	andlw	240
  1845  000DAC  6E14               	movwf	ENVIA_LCD_CMD@aux^0,c
  1846  000DAE                     
  1847                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1848  000DAE  5014               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1849  000DB0  EC6B  F007         	call	_ENVIA_NIBBLE
  1850  000DB4                     
  1851                           ;LCD.c: 140:  aux = dato<<4;
  1852  000DB4  3813               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1853  000DB6  0BF0               	andlw	240
  1854  000DB8  6E14               	movwf	ENVIA_LCD_CMD@aux^0,c
  1855  000DBA                     
  1856                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1857  000DBA  5014               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1858  000DBC  EC6B  F007         	call	_ENVIA_NIBBLE
  1859  000DC0  0012               	return		;funcret
  1860  000DC2                     __end_of_ENVIA_LCD_CMD:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _LEER_LCD *****************
  1864 ;; Defined at:
  1865 ;;		line 144 in file "LCD.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  aux             1   17[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        1 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 4
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_ENVIA_CHAR
  1890 ;;		_ENVIA_LCD_CMD
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text16
  1895  0009C4                     __ptext16:
  1896                           	callstack 0
  1897  0009C4                     _LEER_LCD:
  1898                           	callstack 23
  1899  0009C4                     
  1900                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1901  0009C4  0EF8               	movlw	248
  1902  0009C6  6E95               	movwf	149,c	;volatile
  1903  0009C8                     
  1904                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1905  0009C8  908D               	bcf	141,0,c	;volatile
  1906  0009CA                     
  1907                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1908  0009CA  828D               	bsf	141,1,c	;volatile
  1909  0009CC                     
  1910                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1911  0009CC  848D               	bsf	141,2,c	;volatile
  1912  0009CE                     
  1913                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1914  0009CE  0E21               	movlw	33
  1915  0009D0                     u577:
  1916  0009D0  2EE8               	decfsz	wreg,f,c
  1917  0009D2  D7FE               	bra	u577
  1918  0009D4  F000               	nop	
  1919  0009D6                     
  1920                           ;LCD.c: 152:  aux = PORTD;
  1921  0009D6  CF83 F012          	movff	3971,LEER_LCD@aux	;volatile
  1922  0009DA                     
  1923                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1924  0009DA  948D               	bcf	141,2,c	;volatile
  1925  0009DC                     
  1926                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1927  0009DC  0E21               	movlw	33
  1928  0009DE                     u587:
  1929  0009DE  2EE8               	decfsz	wreg,f,c
  1930  0009E0  D7FE               	bra	u587
  1931  0009E2  F000               	nop	
  1932  0009E4                     
  1933                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1934  0009E4  848D               	bsf	141,2,c	;volatile
  1935  0009E6                     
  1936                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1937  0009E6  0E21               	movlw	33
  1938  0009E8                     u597:
  1939  0009E8  2EE8               	decfsz	wreg,f,c
  1940  0009EA  D7FE               	bra	u597
  1941  0009EC  F000               	nop	
  1942  0009EE                     
  1943                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1944  0009EE  948D               	bcf	141,2,c	;volatile
  1945  0009F0                     l920:
  1946                           
  1947                           ;LCD.c: 158:  aux = aux & 0x80;
  1948  0009F0  5012               	movf	LEER_LCD@aux^0,w,c
  1949  0009F2  0B80               	andlw	128
  1950  0009F4  6E12               	movwf	LEER_LCD@aux^0,c
  1951                           
  1952                           ;LCD.c: 159:  while(aux == 0x80)
  1953  0009F6  EF11  F005         	goto	l934
  1954  0009FA                     l87:
  1955                           
  1956                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1957  0009FA  848D               	bsf	141,2,c	;volatile
  1958  0009FC                     
  1959                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1960  0009FC  0E21               	movlw	33
  1961  0009FE                     u607:
  1962  0009FE  2EE8               	decfsz	wreg,f,c
  1963  000A00  D7FE               	bra	u607
  1964  000A02  F000               	nop	
  1965  000A04                     
  1966                           ;LCD.c: 163:             aux = PORTD;
  1967  000A04  CF83 F012          	movff	3971,LEER_LCD@aux	;volatile
  1968  000A08                     
  1969                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1970  000A08  948D               	bcf	141,2,c	;volatile
  1971                           
  1972                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1973  000A0A  0E21               	movlw	33
  1974  000A0C                     u617:
  1975  000A0C  2EE8               	decfsz	wreg,f,c
  1976  000A0E  D7FE               	bra	u617
  1977  000A10  F000               	nop	
  1978  000A12                     
  1979                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1980  000A12  848D               	bsf	141,2,c	;volatile
  1981                           
  1982                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1983  000A14  0E21               	movlw	33
  1984  000A16                     u627:
  1985  000A16  2EE8               	decfsz	wreg,f,c
  1986  000A18  D7FE               	bra	u627
  1987  000A1A  F000               	nop	
  1988  000A1C                     
  1989                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1990  000A1C  948D               	bcf	141,2,c	;volatile
  1991  000A1E  EFF8  F004         	goto	l920
  1992  000A22                     l934:
  1993                           
  1994                           ;LCD.c: 159:  while(aux == 0x80)
  1995  000A22  0E80               	movlw	128
  1996  000A24  1812               	xorwf	LEER_LCD@aux^0,w,c
  1997  000A26  B4D8               	btfsc	status,2,c
  1998  000A28  EF18  F005         	goto	u11
  1999  000A2C  EF1A  F005         	goto	u10
  2000  000A30                     u11:
  2001  000A30  EFFD  F004         	goto	l87
  2002  000A34                     u10:
  2003  000A34  0012               	return		;funcret
  2004  000A36                     __end_of_LEER_LCD:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _ENVIA_NIBBLE *****************
  2008 ;; Defined at:
  2009 ;;		line 118 in file "LCD.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  dato            1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  dato            1   17[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0
  2024 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2026 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2027 ;;Total ram usage:        1 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 4
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_ENVIA_CHAR
  2034 ;;		_LCD_CONFIG
  2035 ;;		_ENVIA_LCD_CMD
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text17
  2040  000ED6                     __ptext17:
  2041                           	callstack 0
  2042  000ED6                     _ENVIA_NIBBLE:
  2043                           	callstack 23
  2044                           
  2045                           ;incstack = 0
  2046                           ;ENVIA_NIBBLE@dato stored from wreg
  2047  000ED6  6E12               	movwf	ENVIA_NIBBLE@dato^0,c
  2048  000ED8                     
  2049                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2050  000ED8  0E0F               	movlw	15
  2051  000EDA  168C               	andwf	140,f,c	;volatile
  2052                           
  2053                           ;LCD.c: 121:  dato &= 0xF0;
  2054  000EDC  0EF0               	movlw	240
  2055  000EDE  1612               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2056                           
  2057                           ;LCD.c: 122:  LATD|= dato;
  2058  000EE0  5012               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2059  000EE2  128C               	iorwf	140,f,c	;volatile
  2060  000EE4                     
  2061                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  2062  000EE4  848D               	bsf	141,2,c	;volatile
  2063  000EE6                     
  2064                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2065  000EE6  0E21               	movlw	33
  2066  000EE8                     u637:
  2067  000EE8  2EE8               	decfsz	wreg,f,c
  2068  000EEA  D7FE               	bra	u637
  2069  000EEC  F000               	nop	
  2070  000EEE                     
  2071                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  2072  000EEE  948D               	bcf	141,2,c	;volatile
  2073  000EF0  0012               	return		;funcret
  2074  000EF2                     __end_of_ENVIA_NIBBLE:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _INT0_INT1_ISR *****************
  2078 ;; Defined at:
  2079 ;;		line 90 in file "maincode3.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  x               1   16[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        7 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 3
  2100 ;; This function calls:
  2101 ;;		i2_BORRAR_LCD
  2102 ;;		i2_ENVIA_CHAR
  2103 ;;		i2_ESCRIBE_MENSAJE2
  2104 ;;		i2_EUSART_NewLine
  2105 ;;		i2_EUSART_StringSend
  2106 ;;		i2_POS_CURSOR
  2107 ;; This function is called by:
  2108 ;;		Interrupt level 2
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	intcode
  2113  000008                     __pintcode:
  2114                           	callstack 0
  2115  000008                     _INT0_INT1_ISR:
  2116                           	callstack 22
  2117                           
  2118                           ;incstack = 0
  2119  000008  821E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2120  00000A  CFF6 F00D          	movff	tblptrl,??_INT0_INT1_ISR+2
  2121  00000E  CFF7 F00E          	movff	tblptrh,??_INT0_INT1_ISR+3
  2122  000012  CFF8 F00F          	movff	tblptru,??_INT0_INT1_ISR+4
  2123  000016  CFF5 F010          	movff	tablat,??_INT0_INT1_ISR+5
  2124  00001A                     
  2125                           ;maincode3.c: 91:     unsigned char x;;maincode3.c: 92:     if(PIR1bits.RC1IF == 1){
  2126  00001A  AA9E               	btfss	158,5,c	;volatile
  2127  00001C  EF12  F000         	goto	i2u44_41
  2128  000020  EF14  F000         	goto	i2u44_40
  2129  000024                     i2u44_41:
  2130  000024  EF69  F000         	goto	i2l199
  2131  000028                     i2u44_40:
  2132  000028  EF48  F000         	goto	i2l1694
  2133  00002C                     i2l1668:
  2134                           
  2135                           ;maincode3.c: 95:                 EUSART_StringSend("Presionaste A");
  2136  00002C  0E83               	movlw	low STR_9
  2137  00002E  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2138  000030  0E08               	movlw	high STR_9
  2139  000032  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2140  000034  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2141  000038                     i2l1670:
  2142                           
  2143                           ;maincode3.c: 96:                 EUSART_NewLine();
  2144  000038  EC58  F007         	call	i2_EUSART_NewLine	;wreg free
  2145                           
  2146                           ;maincode3.c: 97:                 break;
  2147  00003C  EFF5  F000         	goto	i2l216
  2148  000040                     i2l1672:
  2149                           
  2150                           ;maincode3.c: 99:                 EUSART_StringSend("Presionaste E");
  2151  000040  0E91               	movlw	low STR_10
  2152  000042  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2153  000044  0E08               	movlw	high STR_10
  2154  000046  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2155  000048  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2156  00004C  EF1C  F000         	goto	i2l1670
  2157  000050                     i2l1676:
  2158                           
  2159                           ;maincode3.c: 103:                 EUSART_StringSend("Presionaste I");
  2160  000050  0E9F               	movlw	low STR_11
  2161  000052  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2162  000054  0E08               	movlw	high STR_11
  2163  000056  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2164  000058  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2165  00005C  EF1C  F000         	goto	i2l1670
  2166  000060                     i2l1680:
  2167                           
  2168                           ;maincode3.c: 107:                 EUSART_StringSend("Presionaste O");
  2169  000060  0EAD               	movlw	low STR_12
  2170  000062  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2171  000064  0E08               	movlw	high STR_12
  2172  000066  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2173  000068  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2174  00006C  EF1C  F000         	goto	i2l1670
  2175  000070                     i2l1684:
  2176                           
  2177                           ;maincode3.c: 111:                 EUSART_StringSend("Presionaste U");
  2178  000070  0EBB               	movlw	low STR_13
  2179  000072  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2180  000074  0E08               	movlw	high STR_13
  2181  000076  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2182  000078  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2183  00007C  EF1C  F000         	goto	i2l1670
  2184  000080                     i2l1688:
  2185                           
  2186                           ;maincode3.c: 115:                 EUSART_StringSend("Tecla errada intente de nuevo");
  2187  000080  0E01               	movlw	low STR_14
  2188  000082  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2189  000084  0E08               	movlw	high STR_14
  2190  000086  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2191  000088  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2192  00008C  EF1C  F000         	goto	i2l1670
  2193  000090                     i2l1694:
  2194  000090  50AE               	movf	174,w,c	;volatile
  2195  000092  6E0B               	movwf	??_INT0_INT1_ISR^0,c
  2196  000094  6A0C               	clrf	(??_INT0_INT1_ISR+1)^0,c
  2197                           
  2198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2199                           ; Switch size 1, requested type "simple"
  2200                           ; Number of cases is 1, Range of values is 0 to 0
  2201                           ; switch strategies available:
  2202                           ; Name         Instructions Cycles
  2203                           ; simple_byte            4     3 (average)
  2204                           ;	Chosen strategy is simple_byte
  2205  000096  500C               	movf	(??_INT0_INT1_ISR+1)^0,w,c
  2206  000098  0A00               	xorlw	0	; case 0
  2207  00009A  B4D8               	btfsc	status,2,c
  2208  00009C  EF52  F000         	goto	i2l1772
  2209  0000A0  EF40  F000         	goto	i2l1688
  2210  0000A4                     i2l1772:
  2211                           
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 5, Range of values is 65 to 85
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte           16     9 (average)
  2217                           ;	Chosen strategy is simple_byte
  2218  0000A4  500B               	movf	??_INT0_INT1_ISR^0,w,c
  2219  0000A6  0A41               	xorlw	65	; case 65
  2220  0000A8  B4D8               	btfsc	status,2,c
  2221  0000AA  EF16  F000         	goto	i2l1668
  2222  0000AE  0A04               	xorlw	4	; case 69
  2223  0000B0  B4D8               	btfsc	status,2,c
  2224  0000B2  EF20  F000         	goto	i2l1672
  2225  0000B6  0A0C               	xorlw	12	; case 73
  2226  0000B8  B4D8               	btfsc	status,2,c
  2227  0000BA  EF28  F000         	goto	i2l1676
  2228  0000BE  0A06               	xorlw	6	; case 79
  2229  0000C0  B4D8               	btfsc	status,2,c
  2230  0000C2  EF30  F000         	goto	i2l1680
  2231  0000C6  0A1A               	xorlw	26	; case 85
  2232  0000C8  B4D8               	btfsc	status,2,c
  2233  0000CA  EF38  F000         	goto	i2l1684
  2234  0000CE  EF40  F000         	goto	i2l1688
  2235  0000D2                     i2l199:
  2236  0000D2  A2F2               	btfss	242,1,c	;volatile
  2237  0000D4  EF6E  F000         	goto	i2u45_41
  2238  0000D8  EF70  F000         	goto	i2u45_40
  2239  0000DC                     i2u45_41:
  2240  0000DC  EFAF  F000         	goto	i2l209
  2241  0000E0                     i2u45_40:
  2242  0000E0                     
  2243                           ;maincode3.c: 122:         INTCONbits.INT0IF = 0;
  2244  0000E0  92F2               	bcf	242,1,c	;volatile
  2245  0000E2                     
  2246                           ;maincode3.c: 123:         POS_CURSOR(1,0);
  2247  0000E2  0E00               	movlw	0
  2248  0000E4  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2249  0000E6  0E01               	movlw	1
  2250  0000E8  EC73  F006         	call	i2_POS_CURSOR
  2251  0000EC                     
  2252                           ;maincode3.c: 124:         ESCRIBE_MENSAJE2("Moviendo servo");
  2253  0000EC  0E74               	movlw	low STR_15
  2254  0000EE  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2255  0000F0  0E08               	movlw	high STR_15
  2256  0000F2  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2257  0000F4  EC14  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2258  0000F8                     
  2259                           ;maincode3.c: 125:         POS_CURSOR(2,0);
  2260  0000F8  0E00               	movlw	0
  2261  0000FA  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2262  0000FC  0E02               	movlw	2
  2263  0000FE  EC73  F006         	call	i2_POS_CURSOR
  2264                           
  2265                           ;maincode3.c: 126:         ESCRIBE_MENSAJE2("Angulo: 000");
  2266  000102  0ED6               	movlw	low STR_16
  2267  000104  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2268  000106  0E08               	movlw	high STR_16
  2269  000108  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2270  00010A  EC14  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2271  00010E                     
  2272                           ;maincode3.c: 127:         ENVIA_CHAR(0xDF);
  2273  00010E  0EDF               	movlw	223
  2274  000110  ECE1  F006         	call	i2_ENVIA_CHAR
  2275  000114                     
  2276                           ;maincode3.c: 128:         EUSART_StringSend("Moviendo servo a 0 grados");
  2277  000114  0E3B               	movlw	low STR_17
  2278  000116  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2279  000118  0E08               	movlw	high STR_17
  2280  00011A  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2281  00011C  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2282  000120                     
  2283                           ;maincode3.c: 129:         EUSART_NewLine();
  2284  000120  EC58  F007         	call	i2_EUSART_NewLine	;wreg free
  2285  000124                     
  2286                           ;maincode3.c: 130:         for(x=0;x<80;x++){
  2287  000124  0E00               	movlw	0
  2288  000126  6E11               	movwf	INT0_INT1_ISR@x^0,c
  2289  000128                     i2l210:
  2290                           
  2291                           ;maincode3.c: 131:             LATAbits.LA0 = 1;
  2292  000128  8089               	bsf	137,0,c	;volatile
  2293  00012A                     
  2294                           ;maincode3.c: 132:             _delay((unsigned long)((700)*(4000000UL/4000000.0)));
  2295  00012A  0EE9               	movlw	233
  2296  00012C                     i2u64_47:
  2297  00012C  2EE8               	decfsz	wreg,f,c
  2298  00012E  D7FE               	bra	i2u64_47
  2299  000130  F000               	nop	
  2300  000132                     
  2301                           ;maincode3.c: 133:             LATAbits.LA0 = 0;
  2302  000132  9089               	bcf	137,0,c	;volatile
  2303                           
  2304                           ;maincode3.c: 134:             _delay((unsigned long)((19300)*(4000000UL/4000000.0)));
  2305  000134  0E1A               	movlw	26
  2306  000136  6E0B               	movwf	??_INT0_INT1_ISR^0,c
  2307  000138  0E0F               	movlw	15
  2308  00013A                     i2u65_47:
  2309  00013A  2EE8               	decfsz	wreg,f,c
  2310  00013C  D7FE               	bra	i2u65_47
  2311  00013E  2E0B               	decfsz	??_INT0_INT1_ISR^0,f,c
  2312  000140  D7FC               	bra	i2u65_47
  2313  000142  F000               	nop	
  2314  000144                     
  2315                           ;maincode3.c: 135:         }
  2316  000144  2A11               	incf	INT0_INT1_ISR@x^0,f,c
  2317  000146  0E4F               	movlw	79
  2318  000148  6411               	cpfsgt	INT0_INT1_ISR@x^0,c
  2319  00014A  EFA9  F000         	goto	i2u46_41
  2320  00014E  EFAB  F000         	goto	i2u46_40
  2321  000152                     i2u46_41:
  2322  000152  EF94  F000         	goto	i2l210
  2323  000156                     i2u46_40:
  2324  000156                     i2l1720:
  2325                           
  2326                           ;maincode3.c: 136:         BORRAR_LCD();
  2327  000156  ECB4  F007         	call	i2_BORRAR_LCD	;wreg free
  2328                           
  2329                           ;maincode3.c: 137:     }
  2330  00015A  EFF5  F000         	goto	i2l216
  2331  00015E                     i2l209:
  2332  00015E  A0F0               	btfss	240,0,c	;volatile
  2333  000160  EFB4  F000         	goto	i2u47_41
  2334  000164  EFB6  F000         	goto	i2u47_40
  2335  000168                     i2u47_41:
  2336  000168  EFF5  F000         	goto	i2l216
  2337  00016C                     i2u47_40:
  2338  00016C                     
  2339                           ;maincode3.c: 140:         INTCON3bits.INT1IF = 0;
  2340  00016C  90F0               	bcf	240,0,c	;volatile
  2341  00016E                     
  2342                           ;maincode3.c: 141:         POS_CURSOR(1,0);
  2343  00016E  0E00               	movlw	0
  2344  000170  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2345  000172  0E01               	movlw	1
  2346  000174  EC73  F006         	call	i2_POS_CURSOR
  2347  000178                     
  2348                           ;maincode3.c: 142:         ESCRIBE_MENSAJE2("Moviendo servo");
  2349  000178  0E74               	movlw	low STR_15
  2350  00017A  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2351  00017C  0E08               	movlw	high STR_15
  2352  00017E  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2353  000180  EC14  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2354  000184                     
  2355                           ;maincode3.c: 143:         POS_CURSOR(2,0);
  2356  000184  0E00               	movlw	0
  2357  000186  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2358  000188  0E02               	movlw	2
  2359  00018A  EC73  F006         	call	i2_POS_CURSOR
  2360                           
  2361                           ;maincode3.c: 144:         ESCRIBE_MENSAJE2("Angulo: 180");
  2362  00018E  0EE2               	movlw	low STR_19
  2363  000190  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2364  000192  0E08               	movlw	high STR_19
  2365  000194  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2366  000196  EC14  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2367  00019A                     
  2368                           ;maincode3.c: 145:         ENVIA_CHAR(0xDF);
  2369  00019A  0EDF               	movlw	223
  2370  00019C  ECE1  F006         	call	i2_ENVIA_CHAR
  2371  0001A0                     
  2372                           ;maincode3.c: 146:         EUSART_StringSend("Moviendo servo a 180 grados");
  2373  0001A0  0E1F               	movlw	low STR_20
  2374  0001A2  6E05               	movwf	i2EUSART_StringSend@cadenon^0,c
  2375  0001A4  0E08               	movlw	high STR_20
  2376  0001A6  6E06               	movwf	(i2EUSART_StringSend@cadenon+1)^0,c
  2377  0001A8  ECEF  F005         	call	i2_EUSART_StringSend	;wreg free
  2378  0001AC                     
  2379                           ;maincode3.c: 147:         EUSART_NewLine();
  2380  0001AC  EC58  F007         	call	i2_EUSART_NewLine	;wreg free
  2381  0001B0                     
  2382                           ;maincode3.c: 148:         for(x=0;x<80;x++){
  2383  0001B0  0E00               	movlw	0
  2384  0001B2  6E11               	movwf	INT0_INT1_ISR@x^0,c
  2385  0001B4                     i2l214:
  2386                           
  2387                           ;maincode3.c: 149:             LATAbits.LA0 = 1;
  2388  0001B4  8089               	bsf	137,0,c	;volatile
  2389  0001B6                     
  2390                           ;maincode3.c: 150:             _delay((unsigned long)((2300)*(4000000UL/4000000.0)));
  2391  0001B6  0E03               	movlw	3
  2392  0001B8  6E0B               	movwf	??_INT0_INT1_ISR^0,c
  2393  0001BA  0EFC               	movlw	252
  2394  0001BC                     i2u66_47:
  2395  0001BC  2EE8               	decfsz	wreg,f,c
  2396  0001BE  D7FE               	bra	i2u66_47
  2397  0001C0  2E0B               	decfsz	??_INT0_INT1_ISR^0,f,c
  2398  0001C2  D7FC               	bra	i2u66_47
  2399  0001C4                     
  2400                           ;maincode3.c: 151:             LATAbits.LA0 = 0;
  2401  0001C4  9089               	bcf	137,0,c	;volatile
  2402                           
  2403                           ;maincode3.c: 152:             _delay((unsigned long)((17700)*(4000000UL/4000000.0)));
  2404  0001C6  0E17               	movlw	23
  2405  0001C8  6E0B               	movwf	??_INT0_INT1_ISR^0,c
  2406  0001CA  0EFC               	movlw	252
  2407  0001CC                     i2u67_47:
  2408  0001CC  2EE8               	decfsz	wreg,f,c
  2409  0001CE  D7FE               	bra	i2u67_47
  2410  0001D0  2E0B               	decfsz	??_INT0_INT1_ISR^0,f,c
  2411  0001D2  D7FC               	bra	i2u67_47
  2412  0001D4                     
  2413                           ;maincode3.c: 153:         }
  2414  0001D4  2A11               	incf	INT0_INT1_ISR@x^0,f,c
  2415  0001D6  0E4F               	movlw	79
  2416  0001D8  6411               	cpfsgt	INT0_INT1_ISR@x^0,c
  2417  0001DA  EFF1  F000         	goto	i2u48_41
  2418  0001DE  EFF3  F000         	goto	i2u48_40
  2419  0001E2                     i2u48_41:
  2420  0001E2  EFDA  F000         	goto	i2l214
  2421  0001E6                     i2u48_40:
  2422  0001E6  EFAB  F000         	goto	i2l1720
  2423  0001EA                     i2l216:
  2424  0001EA  C010  FFF5         	movff	??_INT0_INT1_ISR+5,tablat
  2425  0001EE  C00F  FFF8         	movff	??_INT0_INT1_ISR+4,tblptru
  2426  0001F2  C00E  FFF7         	movff	??_INT0_INT1_ISR+3,tblptrh
  2427  0001F6  C00D  FFF6         	movff	??_INT0_INT1_ISR+2,tblptrl
  2428  0001FA  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2429  0001FC  0011               	retfie		f
  2430  0001FE                     __end_of_INT0_INT1_ISR:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function i2_POS_CURSOR *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "LCD.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  fila            1    wreg     unsigned char 
  2438 ;;  columna         1    3[COMRAM] unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  fila            1    4[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         1       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2453 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 2
  2457 ;; This function calls:
  2458 ;;		i2_ENVIA_LCD_CMD
  2459 ;; This function is called by:
  2460 ;;		_INT0_INT1_ISR
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text19
  2465  000CE6                     __ptext19:
  2466                           	callstack 0
  2467  000CE6                     i2_POS_CURSOR:
  2468                           	callstack 22
  2469                           
  2470                           ;incstack = 0
  2471                           ;i2POS_CURSOR@fila stored from wreg
  2472  000CE6  6E05               	movwf	i2POS_CURSOR@fila^0,c
  2473  000CE8                     
  2474                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2475  000CE8  0405               	decf	i2POS_CURSOR@fila^0,w,c
  2476  000CEA  A4D8               	btfss	status,2,c
  2477  000CEC  EF7A  F006         	goto	i2u40_41
  2478  000CF0  EF7C  F006         	goto	i2u40_40
  2479  000CF4                     i2u40_41:
  2480  000CF4  EF82  F006         	goto	i2l1632
  2481  000CF8                     i2u40_40:
  2482  000CF8                     
  2483                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2484  000CF8  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2485  000CFA  0F80               	addlw	128
  2486  000CFC  ECFB  F006         	call	i2_ENVIA_LCD_CMD
  2487                           
  2488                           ;LCD.c: 10:  }
  2489  000D00  EF8F  F006         	goto	i2l26
  2490  000D04                     i2l1632:
  2491  000D04  0E02               	movlw	2
  2492  000D06  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  2493  000D08  A4D8               	btfss	status,2,c
  2494  000D0A  EF89  F006         	goto	i2u41_41
  2495  000D0E  EF8B  F006         	goto	i2u41_40
  2496  000D12                     i2u41_41:
  2497  000D12  EF8F  F006         	goto	i2l26
  2498  000D16                     i2u41_40:
  2499  000D16                     
  2500                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2501  000D16  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2502  000D18  0FC0               	addlw	192
  2503  000D1A  ECFB  F006         	call	i2_ENVIA_LCD_CMD
  2504  000D1E                     i2l26:
  2505  000D1E  0012               	return		;funcret
  2506  000D20                     __end_ofi2_POS_CURSOR:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function i2_EUSART_StringSend *****************
  2510 ;; Defined at:
  2511 ;;		line 53 in file "maincode3.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  cadenon         2    4[COMRAM] PTR unsigned char 
  2514 ;;		 -> STR_20(28), STR_17(26), STR_14(30), STR_13(14), 
  2515 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  2516 ;;		 -> STR_8(16), STR_7(13), STR_4(15), STR_3(11), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  x               1    9[COMRAM] unsigned char 
  2519 ;;  tamano          1    8[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         2       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        6 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 1
  2536 ;; This function calls:
  2537 ;;		i2_EUSART_ByteSend
  2538 ;;		i2_strlen
  2539 ;; This function is called by:
  2540 ;;		_INT0_INT1_ISR
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text20
  2545  000BDE                     __ptext20:
  2546                           	callstack 0
  2547  000BDE                     i2_EUSART_StringSend:
  2548                           	callstack 23
  2549  000BDE                     
  2550                           ;maincode3.c: 54:     unsigned char tamano;;maincode3.c: 55:     tamano = strlen(cadenon
      +                          );
  2551  000BDE  C005  F001         	movff	i2EUSART_StringSend@cadenon,i2strlen@s
  2552  000BE2  C006  F002         	movff	i2EUSART_StringSend@cadenon+1,i2strlen@s+1
  2553  000BE6  EC90  F006         	call	i2_strlen	;wreg free
  2554  000BEA  5001               	movf	?i2_strlen^0,w,c
  2555  000BEC  6E09               	movwf	i2EUSART_StringSend@tamano^0,c
  2556  000BEE                     
  2557                           ;maincode3.c: 56:     unsigned char x;;maincode3.c: 57:     for(x=0;x<tamano;x++){
  2558  000BEE  0E00               	movlw	0
  2559  000BF0  6E0A               	movwf	i2EUSART_StringSend@x^0,c
  2560  000BF2  EF0A  F006         	goto	i2l1658
  2561  000BF6                     i2l1654:
  2562                           
  2563                           ;maincode3.c: 58:         EUSART_ByteSend(cadenon[x]);
  2564  000BF6  500A               	movf	i2EUSART_StringSend@x^0,w,c
  2565  000BF8  2405               	addwf	i2EUSART_StringSend@cadenon^0,w,c
  2566  000BFA  6E07               	movwf	??i2_EUSART_StringSend^0,c
  2567  000BFC  0E00               	movlw	0
  2568  000BFE  2006               	addwfc	(i2EUSART_StringSend@cadenon+1)^0,w,c
  2569  000C00  6E08               	movwf	(??i2_EUSART_StringSend+1)^0,c
  2570  000C02  C007  FFF6         	movff	??i2_EUSART_StringSend,tblptrl
  2571  000C06  C008  FFF7         	movff	??i2_EUSART_StringSend+1,tblptrh
  2572  000C0A                     	if	0	;tblptru may be non-zero
  2573  000C0A                     	endif
  2574  000C0A                     	if	0	;tblptru may be non-zero
  2575  000C0A                     	endif
  2576  000C0A  0008               	tblrd		*
  2577  000C0C  50F5               	movf	tablat,w,c
  2578  000C0E  EC92  F007         	call	i2_EUSART_ByteSend
  2579  000C12                     
  2580                           ;maincode3.c: 59:     }
  2581  000C12  2A0A               	incf	i2EUSART_StringSend@x^0,f,c
  2582  000C14                     i2l1658:
  2583  000C14  5009               	movf	i2EUSART_StringSend@tamano^0,w,c
  2584  000C16  5C0A               	subwf	i2EUSART_StringSend@x^0,w,c
  2585  000C18  A0D8               	btfss	status,0,c
  2586  000C1A  EF11  F006         	goto	i2u43_41
  2587  000C1E  EF13  F006         	goto	i2u43_40
  2588  000C22                     i2u43_41:
  2589  000C22  EFFB  F005         	goto	i2l1654
  2590  000C26                     i2u43_40:
  2591  000C26  0012               	return		;funcret
  2592  000C28                     __end_ofi2_EUSART_StringSend:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function i2_EUSART_ByteSend *****************
  2596 ;; Defined at:
  2597 ;;		line 41 in file "maincode3.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dato            1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  dato            1    0[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        1 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		i2_EUSART_StringSend
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text21
  2625  000F24                     __ptext21:
  2626                           	callstack 0
  2627  000F24                     i2_EUSART_ByteSend:
  2628                           	callstack 23
  2629                           
  2630                           ;incstack = 0
  2631                           ;i2EUSART_ByteSend@dato stored from wreg
  2632  000F24  6E01               	movwf	i2EUSART_ByteSend@dato^0,c
  2633  000F26                     
  2634                           ;maincode3.c: 42:     TXREG1 = dato;
  2635  000F26  C001  FFAD         	movff	i2EUSART_ByteSend@dato,4013	;volatile
  2636  000F2A                     i2l165:
  2637  000F2A  A2AC               	btfss	172,1,c	;volatile
  2638  000F2C  EF9A  F007         	goto	i2u38_41
  2639  000F30  EF9C  F007         	goto	i2u38_40
  2640  000F34                     i2u38_41:
  2641  000F34  EF95  F007         	goto	i2l165
  2642  000F38                     i2u38_40:
  2643  000F38  0012               	return		;funcret
  2644  000F3A                     __end_ofi2_EUSART_ByteSend:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function i2_EUSART_NewLine *****************
  2648 ;; Defined at:
  2649 ;;		line 46 in file "maincode3.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_INT0_INT1_ISR
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text22
  2677  000EB0                     __ptext22:
  2678                           	callstack 0
  2679  000EB0                     i2_EUSART_NewLine:
  2680                           	callstack 24
  2681  000EB0                     
  2682                           ;maincode3.c: 47:     TXREG1 = 0x0A;
  2683  000EB0  0E0A               	movlw	10
  2684  000EB2  6EAD               	movwf	173,c	;volatile
  2685  000EB4                     i2l171:
  2686  000EB4  A2AC               	btfss	172,1,c	;volatile
  2687  000EB6  EF5F  F007         	goto	i2u18_41
  2688  000EBA  EF61  F007         	goto	i2u18_40
  2689  000EBE                     i2u18_41:
  2690  000EBE  EF5A  F007         	goto	i2l171
  2691  000EC2                     i2u18_40:
  2692  000EC2                     
  2693                           ;maincode3.c: 49:     TXREG1 = 0x0D;
  2694  000EC2  0E0D               	movlw	13
  2695  000EC4  6EAD               	movwf	173,c	;volatile
  2696  000EC6                     i2l174:
  2697  000EC6  A2AC               	btfss	172,1,c	;volatile
  2698  000EC8  EF68  F007         	goto	i2u19_41
  2699  000ECC  EF6A  F007         	goto	i2u19_40
  2700  000ED0                     i2u19_41:
  2701  000ED0  EF63  F007         	goto	i2l174
  2702  000ED4                     i2u19_40:
  2703  000ED4  0012               	return		;funcret
  2704  000ED6                     __end_ofi2_EUSART_NewLine:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  2708 ;; Defined at:
  2709 ;;		line 69 in file "LCD.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  2712 ;;		 -> STR_19(12), STR_18(15), STR_16(12), STR_15(15), 
  2713 ;;		 -> STR_6(16), STR_5(13), STR_2(15), STR_1(11), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  i               1    9[COMRAM] unsigned char 
  2716 ;;  tam             1    8[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         2       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        6 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 2
  2733 ;; This function calls:
  2734 ;;		i2_ENVIA_CHAR
  2735 ;;		i2_strlen
  2736 ;; This function is called by:
  2737 ;;		_INT0_INT1_ISR
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text23
  2742  000C28                     __ptext23:
  2743                           	callstack 0
  2744  000C28                     i2_ESCRIBE_MENSAJE2:
  2745                           	callstack 22
  2746  000C28                     
  2747                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2748  000C28  C005  F001         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  2749  000C2C  C006  F002         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  2750  000C30  EC90  F006         	call	i2_strlen	;wreg free
  2751  000C34  5001               	movf	?i2_strlen^0,w,c
  2752  000C36  6E09               	movwf	i2ESCRIBE_MENSAJE2@tam^0,c
  2753  000C38                     
  2754                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2755  000C38  0E00               	movlw	0
  2756  000C3A  6E0A               	movwf	i2ESCRIBE_MENSAJE2@i^0,c
  2757  000C3C  EF2F  F006         	goto	i2l1646
  2758  000C40                     i2l1642:
  2759                           
  2760                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2761  000C40  500A               	movf	i2ESCRIBE_MENSAJE2@i^0,w,c
  2762  000C42  2405               	addwf	i2ESCRIBE_MENSAJE2@cadena^0,w,c
  2763  000C44  6E07               	movwf	??i2_ESCRIBE_MENSAJE2^0,c
  2764  000C46  0E00               	movlw	0
  2765  000C48  2006               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  2766  000C4A  6E08               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^0,c
  2767  000C4C  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  2768  000C50  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  2769  000C54                     	if	0	;tblptru may be non-zero
  2770  000C54                     	endif
  2771  000C54                     	if	0	;tblptru may be non-zero
  2772  000C54                     	endif
  2773  000C54  0008               	tblrd		*
  2774  000C56  50F5               	movf	tablat,w,c
  2775  000C58  ECE1  F006         	call	i2_ENVIA_CHAR
  2776  000C5C                     
  2777                           ;LCD.c: 77:  }
  2778  000C5C  2A0A               	incf	i2ESCRIBE_MENSAJE2@i^0,f,c
  2779  000C5E                     i2l1646:
  2780  000C5E  5009               	movf	i2ESCRIBE_MENSAJE2@tam^0,w,c
  2781  000C60  5C0A               	subwf	i2ESCRIBE_MENSAJE2@i^0,w,c
  2782  000C62  A0D8               	btfss	status,0,c
  2783  000C64  EF36  F006         	goto	i2u42_41
  2784  000C68  EF38  F006         	goto	i2u42_40
  2785  000C6C                     i2u42_41:
  2786  000C6C  EF20  F006         	goto	i2l1642
  2787  000C70                     i2u42_40:
  2788  000C70  0012               	return		;funcret
  2789  000C72                     __end_ofi2_ESCRIBE_MENSAJE2:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function i2_strlen *****************
  2793 ;; Defined at:
  2794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2797 ;;		 -> STR_20(28), STR_19(12), STR_18(15), STR_17(26), 
  2798 ;;		 -> STR_16(12), STR_15(15), STR_14(30), STR_13(14), 
  2799 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  2800 ;;		 -> STR_8(16), STR_7(13), STR_6(16), STR_5(13), 
  2801 ;;		 -> STR_4(15), STR_3(11), STR_2(15), STR_1(11), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2804 ;;		 -> STR_20(28), STR_19(12), STR_18(15), STR_17(26), 
  2805 ;;		 -> STR_16(12), STR_15(15), STR_14(30), STR_13(14), 
  2806 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  2807 ;;		 -> STR_8(16), STR_7(13), STR_6(16), STR_5(13), 
  2808 ;;		 -> STR_4(15), STR_3(11), STR_2(15), STR_1(11), 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2    0[COMRAM] unsigned int 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         2       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        4 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		i2_ESCRIBE_MENSAJE2
  2828 ;;		i2_EUSART_StringSend
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text24
  2833  000D20                     __ptext24:
  2834                           	callstack 0
  2835  000D20                     i2_strlen:
  2836                           	callstack 23
  2837  000D20  C001  F003         	movff	i2strlen@s,i2strlen@a
  2838  000D24  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  2839  000D28  EF98  F006         	goto	i2l1590
  2840  000D2C                     i2l1588:
  2841  000D2C  4A01               	infsnz	i2strlen@s^0,f,c
  2842  000D2E  2A02               	incf	(i2strlen@s+1)^0,f,c
  2843  000D30                     i2l1590:
  2844  000D30  C001  FFF6         	movff	i2strlen@s,tblptrl
  2845  000D34  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  2846  000D38                     	if	0	;tblptru may be non-zero
  2847  000D38                     	endif
  2848  000D38                     	if	0	;tblptru may be non-zero
  2849  000D38                     	endif
  2850  000D38  0008               	tblrd		*
  2851  000D3A  50F5               	movf	tablat,w,c
  2852  000D3C  0900               	iorlw	0
  2853  000D3E  A4D8               	btfss	status,2,c
  2854  000D40  EFA4  F006         	goto	i2u39_41
  2855  000D44  EFA6  F006         	goto	i2u39_40
  2856  000D48                     i2u39_41:
  2857  000D48  EF96  F006         	goto	i2l1588
  2858  000D4C                     i2u39_40:
  2859  000D4C  5003               	movf	i2strlen@a^0,w,c
  2860  000D4E  5C01               	subwf	i2strlen@s^0,w,c
  2861  000D50  6E01               	movwf	?i2_strlen^0,c
  2862  000D52  5004               	movf	(i2strlen@a+1)^0,w,c
  2863  000D54  5802               	subwfb	(i2strlen@s+1)^0,w,c
  2864  000D56  6E02               	movwf	(?i2_strlen+1)^0,c
  2865  000D58  0012               	return		;funcret
  2866  000D5A                     __end_ofi2_strlen:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function i2_ENVIA_CHAR *****************
  2870 ;; Defined at:
  2871 ;;		line 80 in file "LCD.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  dato            1    wreg     unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  dato            1    1[COMRAM] unsigned char 
  2876 ;;  aux             1    2[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2889 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:        2 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 1
  2893 ;; This function calls:
  2894 ;;		i2_ENVIA_NIBBLE
  2895 ;;		i2_LEER_LCD
  2896 ;; This function is called by:
  2897 ;;		_INT0_INT1_ISR
  2898 ;;		i2_ESCRIBE_MENSAJE2
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text25
  2903  000DC2                     __ptext25:
  2904                           	callstack 0
  2905  000DC2                     i2_ENVIA_CHAR:
  2906                           	callstack 22
  2907                           
  2908                           ;incstack = 0
  2909                           ;i2ENVIA_CHAR@dato stored from wreg
  2910  000DC2  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  2911  000DC4                     
  2912                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2913  000DC4  808D               	bsf	141,0,c	;volatile
  2914  000DC6                     
  2915                           ;LCD.c: 84:  LEER_LCD();
  2916  000DC6  EC1B  F005         	call	i2_LEER_LCD	;wreg free
  2917  000DCA                     
  2918                           ;LCD.c: 85:  TRISD = 0x00;
  2919  000DCA  0E00               	movlw	0
  2920  000DCC  6E95               	movwf	149,c	;volatile
  2921  000DCE                     
  2922                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2923  000DCE  0E21               	movlw	33
  2924  000DD0                     i2u68_47:
  2925  000DD0  2EE8               	decfsz	wreg,f,c
  2926  000DD2  D7FE               	bra	i2u68_47
  2927  000DD4  F000               	nop	
  2928  000DD6                     
  2929                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2930  000DD6  928D               	bcf	141,1,c	;volatile
  2931  000DD8                     
  2932                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2933  000DD8  948D               	bcf	141,2,c	;volatile
  2934  000DDA                     
  2935                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2936  000DDA  808D               	bsf	141,0,c	;volatile
  2937  000DDC                     
  2938                           ;LCD.c: 90:  aux = dato & 0xF0;
  2939  000DDC  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  2940  000DDE  0BF0               	andlw	240
  2941  000DE0  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2942  000DE2                     
  2943                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2944  000DE2  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2945  000DE4  EC79  F007         	call	i2_ENVIA_NIBBLE
  2946  000DE8                     
  2947                           ;LCD.c: 92:  aux = dato << 4;
  2948  000DE8  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  2949  000DEA  0BF0               	andlw	240
  2950  000DEC  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2951  000DEE                     
  2952                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2953  000DEE  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2954  000DF0  EC79  F007         	call	i2_ENVIA_NIBBLE
  2955  000DF4  0012               	return		;funcret
  2956  000DF6                     __end_ofi2_ENVIA_CHAR:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function i2_BORRAR_LCD *****************
  2960 ;; Defined at:
  2961 ;;		line 96 in file "LCD.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 2
  2982 ;; This function calls:
  2983 ;;		i2_ENVIA_LCD_CMD
  2984 ;; This function is called by:
  2985 ;;		_INT0_INT1_ISR
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text26
  2990  000F68                     __ptext26:
  2991                           	callstack 0
  2992  000F68                     i2_BORRAR_LCD:
  2993                           	callstack 22
  2994  000F68                     
  2995                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2996  000F68  0E01               	movlw	1
  2997  000F6A  ECFB  F006         	call	i2_ENVIA_LCD_CMD
  2998  000F6E  0012               	return		;funcret
  2999  000F70                     __end_ofi2_BORRAR_LCD:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function i2_ENVIA_LCD_CMD *****************
  3003 ;; Defined at:
  3004 ;;		line 128 in file "LCD.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  dato            1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  dato            1    1[COMRAM] unsigned char 
  3009 ;;  aux             1    2[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 1
  3026 ;; This function calls:
  3027 ;;		i2_ENVIA_NIBBLE
  3028 ;;		i2_LEER_LCD
  3029 ;; This function is called by:
  3030 ;;		i2_POS_CURSOR
  3031 ;;		i2_BORRAR_LCD
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text27
  3036  000DF6                     __ptext27:
  3037                           	callstack 0
  3038  000DF6                     i2_ENVIA_LCD_CMD:
  3039                           	callstack 22
  3040                           
  3041                           ;incstack = 0
  3042                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  3043  000DF6  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  3044  000DF8                     
  3045                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  3046  000DF8  908D               	bcf	141,0,c	;volatile
  3047  000DFA                     
  3048                           ;LCD.c: 132:  LEER_LCD();
  3049  000DFA  EC1B  F005         	call	i2_LEER_LCD	;wreg free
  3050  000DFE                     
  3051                           ;LCD.c: 133:  TRISD = 0b00000000;
  3052  000DFE  0E00               	movlw	0
  3053  000E00  6E95               	movwf	149,c	;volatile
  3054  000E02                     
  3055                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3056  000E02  0E21               	movlw	33
  3057  000E04                     i2u69_47:
  3058  000E04  2EE8               	decfsz	wreg,f,c
  3059  000E06  D7FE               	bra	i2u69_47
  3060  000E08  F000               	nop	
  3061  000E0A                     
  3062                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  3063  000E0A  928D               	bcf	141,1,c	;volatile
  3064  000E0C                     
  3065                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  3066  000E0C  948D               	bcf	141,2,c	;volatile
  3067  000E0E                     
  3068                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  3069  000E0E  908D               	bcf	141,0,c	;volatile
  3070  000E10                     
  3071                           ;LCD.c: 138:  aux = dato & 0xF0;
  3072  000E10  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  3073  000E12  0BF0               	andlw	240
  3074  000E14  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3075  000E16                     
  3076                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  3077  000E16  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3078  000E18  EC79  F007         	call	i2_ENVIA_NIBBLE
  3079  000E1C                     
  3080                           ;LCD.c: 140:  aux = dato<<4;
  3081  000E1C  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  3082  000E1E  0BF0               	andlw	240
  3083  000E20  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3084  000E22                     
  3085                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  3086  000E22  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3087  000E24  EC79  F007         	call	i2_ENVIA_NIBBLE
  3088  000E28  0012               	return		;funcret
  3089  000E2A                     __end_ofi2_ENVIA_LCD_CMD:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function i2_LEER_LCD *****************
  3093 ;; Defined at:
  3094 ;;		line 144 in file "LCD.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  aux             1    0[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0
  3109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3111 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		i2_ENVIA_CHAR
  3118 ;;		i2_ENVIA_LCD_CMD
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text28
  3123  000A36                     __ptext28:
  3124                           	callstack 0
  3125  000A36                     i2_LEER_LCD:
  3126                           	callstack 22
  3127  000A36                     
  3128                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  3129  000A36  0EF8               	movlw	248
  3130  000A38  6E95               	movwf	149,c	;volatile
  3131  000A3A                     
  3132                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  3133  000A3A  908D               	bcf	141,0,c	;volatile
  3134  000A3C                     
  3135                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  3136  000A3C  828D               	bsf	141,1,c	;volatile
  3137  000A3E                     
  3138                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  3139  000A3E  848D               	bsf	141,2,c	;volatile
  3140  000A40                     
  3141                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3142  000A40  0E21               	movlw	33
  3143  000A42                     i2u70_47:
  3144  000A42  2EE8               	decfsz	wreg,f,c
  3145  000A44  D7FE               	bra	i2u70_47
  3146  000A46  F000               	nop	
  3147  000A48                     
  3148                           ;LCD.c: 152:  aux = PORTD;
  3149  000A48  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3150  000A4C                     
  3151                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  3152  000A4C  948D               	bcf	141,2,c	;volatile
  3153  000A4E                     
  3154                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3155  000A4E  0E21               	movlw	33
  3156  000A50                     i2u71_47:
  3157  000A50  2EE8               	decfsz	wreg,f,c
  3158  000A52  D7FE               	bra	i2u71_47
  3159  000A54  F000               	nop	
  3160  000A56                     
  3161                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  3162  000A56  848D               	bsf	141,2,c	;volatile
  3163  000A58                     
  3164                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3165  000A58  0E21               	movlw	33
  3166  000A5A                     i2u72_47:
  3167  000A5A  2EE8               	decfsz	wreg,f,c
  3168  000A5C  D7FE               	bra	i2u72_47
  3169  000A5E  F000               	nop	
  3170  000A60                     
  3171                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  3172  000A60  948D               	bcf	141,2,c	;volatile
  3173  000A62                     i2l1494:
  3174                           
  3175                           ;LCD.c: 158:  aux = aux & 0x80;
  3176  000A62  5001               	movf	i2LEER_LCD@aux^0,w,c
  3177  000A64  0B80               	andlw	128
  3178  000A66  6E01               	movwf	i2LEER_LCD@aux^0,c
  3179                           
  3180                           ;LCD.c: 159:  while(aux == 0x80)
  3181  000A68  EF4A  F005         	goto	i2l1508
  3182  000A6C                     i2l87:
  3183                           
  3184                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  3185  000A6C  848D               	bsf	141,2,c	;volatile
  3186  000A6E                     
  3187                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3188  000A6E  0E21               	movlw	33
  3189  000A70                     i2u73_47:
  3190  000A70  2EE8               	decfsz	wreg,f,c
  3191  000A72  D7FE               	bra	i2u73_47
  3192  000A74  F000               	nop	
  3193  000A76                     
  3194                           ;LCD.c: 163:             aux = PORTD;
  3195  000A76  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3196  000A7A                     
  3197                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  3198  000A7A  948D               	bcf	141,2,c	;volatile
  3199                           
  3200                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3201  000A7C  0E21               	movlw	33
  3202  000A7E                     i2u74_47:
  3203  000A7E  2EE8               	decfsz	wreg,f,c
  3204  000A80  D7FE               	bra	i2u74_47
  3205  000A82  F000               	nop	
  3206  000A84                     
  3207                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  3208  000A84  848D               	bsf	141,2,c	;volatile
  3209                           
  3210                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3211  000A86  0E21               	movlw	33
  3212  000A88                     i2u75_47:
  3213  000A88  2EE8               	decfsz	wreg,f,c
  3214  000A8A  D7FE               	bra	i2u75_47
  3215  000A8C  F000               	nop	
  3216  000A8E                     
  3217                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  3218  000A8E  948D               	bcf	141,2,c	;volatile
  3219  000A90  EF31  F005         	goto	i2l1494
  3220  000A94                     i2l1508:
  3221                           
  3222                           ;LCD.c: 159:  while(aux == 0x80)
  3223  000A94  0E80               	movlw	128
  3224  000A96  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  3225  000A98  B4D8               	btfsc	status,2,c
  3226  000A9A  EF51  F005         	goto	i2u33_41
  3227  000A9E  EF53  F005         	goto	i2u33_40
  3228  000AA2                     i2u33_41:
  3229  000AA2  EF36  F005         	goto	i2l87
  3230  000AA6                     i2u33_40:
  3231  000AA6  0012               	return		;funcret
  3232  000AA8                     __end_ofi2_LEER_LCD:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function i2_ENVIA_NIBBLE *****************
  3236 ;; Defined at:
  3237 ;;		line 118 in file "LCD.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dato            1    wreg     unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  dato            1    0[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		i2_ENVIA_CHAR
  3261 ;;		i2_ENVIA_LCD_CMD
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text29
  3266  000EF2                     __ptext29:
  3267                           	callstack 0
  3268  000EF2                     i2_ENVIA_NIBBLE:
  3269                           	callstack 22
  3270                           
  3271                           ;incstack = 0
  3272                           ;i2ENVIA_NIBBLE@dato stored from wreg
  3273  000EF2  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  3274  000EF4                     
  3275                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  3276  000EF4  0E0F               	movlw	15
  3277  000EF6  168C               	andwf	140,f,c	;volatile
  3278                           
  3279                           ;LCD.c: 121:  dato &= 0xF0;
  3280  000EF8  0EF0               	movlw	240
  3281  000EFA  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  3282                           
  3283                           ;LCD.c: 122:  LATD|= dato;
  3284  000EFC  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  3285  000EFE  128C               	iorwf	140,f,c	;volatile
  3286  000F00                     
  3287                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  3288  000F00  848D               	bsf	141,2,c	;volatile
  3289  000F02                     
  3290                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3291  000F02  0E21               	movlw	33
  3292  000F04                     i2u76_47:
  3293  000F04  2EE8               	decfsz	wreg,f,c
  3294  000F06  D7FE               	bra	i2u76_47
  3295  000F08  F000               	nop	
  3296  000F0A                     
  3297                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  3298  000F0A  948D               	bcf	141,2,c	;volatile
  3299  000F0C  0012               	return		;funcret
  3300  000F0E                     __end_ofi2_ENVIA_NIBBLE:
  3301                           	callstack 0
  3302                           
  3303                           	psect	rparam
  3304  0000                     
  3305                           	psect	temp
  3306  00001E                     btemp:
  3307                           	callstack 0
  3308  00001E                     	ds	1
  3309  0000                     int$flags	set	btemp
  3310  0000                     wtemp8	set	btemp+1
  3311  0000                     ttemp5	set	btemp+1
  3312  0000                     ttemp6	set	btemp+4
  3313  0000                     ttemp7	set	btemp+8
  3314                           
  3315                           	psect	idloc
  3316                           
  3317                           ;Config register IDLOC0 @ 0x200000
  3318                           ;	unspecified, using default values
  3319  200000                     	org	2097152
  3320  200000  FF                 	db	255
  3321                           
  3322                           ;Config register IDLOC1 @ 0x200001
  3323                           ;	unspecified, using default values
  3324  200001                     	org	2097153
  3325  200001  FF                 	db	255
  3326                           
  3327                           ;Config register IDLOC2 @ 0x200002
  3328                           ;	unspecified, using default values
  3329  200002                     	org	2097154
  3330  200002  FF                 	db	255
  3331                           
  3332                           ;Config register IDLOC3 @ 0x200003
  3333                           ;	unspecified, using default values
  3334  200003                     	org	2097155
  3335  200003  FF                 	db	255
  3336                           
  3337                           ;Config register IDLOC4 @ 0x200004
  3338                           ;	unspecified, using default values
  3339  200004                     	org	2097156
  3340  200004  FF                 	db	255
  3341                           
  3342                           ;Config register IDLOC5 @ 0x200005
  3343                           ;	unspecified, using default values
  3344  200005                     	org	2097157
  3345  200005  FF                 	db	255
  3346                           
  3347                           ;Config register IDLOC6 @ 0x200006
  3348                           ;	unspecified, using default values
  3349  200006                     	org	2097158
  3350  200006  FF                 	db	255
  3351                           
  3352                           ;Config register IDLOC7 @ 0x200007
  3353                           ;	unspecified, using default values
  3354  200007                     	org	2097159
  3355  200007  FF                 	db	255
  3356                           
  3357                           	psect	config
  3358                           
  3359                           ;Config register CONFIG1L @ 0x300000
  3360                           ;	PLL Selection
  3361                           ;	PLLSEL = PLL4X, 4x clock multiplier
  3362                           ;	PLL Enable Configuration bit
  3363                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  3364                           ;	CPU System Clock Postscaler
  3365                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  3366                           ;	Low Speed USB mode with 48 MHz system clock
  3367                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  3368  300000                     	org	3145728
  3369  300000  00                 	db	0
  3370                           
  3371                           ;Config register CONFIG1H @ 0x300001
  3372                           ;	Oscillator Selection
  3373                           ;	FOSC = INTOSCIO, Internal oscillator
  3374                           ;	Primary Oscillator Shutdown
  3375                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  3376                           ;	Fail-Safe Clock Monitor
  3377                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3378                           ;	Internal/External Oscillator Switchover
  3379                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3380  300001                     	org	3145729
  3381  300001  08                 	db	8
  3382                           
  3383                           ;Config register CONFIG2L @ 0x300002
  3384                           ;	Power-up Timer Enable
  3385                           ;	nPWRTEN = ON, Power up timer enabled
  3386                           ;	Brown-out Reset Enable
  3387                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  3388                           ;	Brown-out Reset Voltage
  3389                           ;	BORV = 190, BOR set to 1.9V nominal
  3390                           ;	Low-Power Brown-out Reset
  3391                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  3392  300002                     	org	3145730
  3393  300002  58                 	db	88
  3394                           
  3395                           ;Config register CONFIG2H @ 0x300003
  3396                           ;	Watchdog Timer Enable bits
  3397                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3398                           ;	Watchdog Timer Postscaler
  3399                           ;	WDTPS = 32768, 1:32768
  3400  300003                     	org	3145731
  3401  300003  3C                 	db	60
  3402                           
  3403                           ; Padding undefined space
  3404  300004                     	org	3145732
  3405  300004  FF                 	db	255
  3406                           
  3407                           ;Config register CONFIG3H @ 0x300005
  3408                           ;	CCP2 MUX bit
  3409                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  3410                           ;	PORTB A/D Enable bit
  3411                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3412                           ;	Timer3 Clock Input MUX bit
  3413                           ;	T3CMX = RC0, T3CKI function is on RC0
  3414                           ;	SDO Output MUX bit
  3415                           ;	SDOMX = RB3, SDO function is on RB3
  3416                           ;	Master Clear Reset Pin Enable
  3417                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  3418  300005                     	org	3145733
  3419  300005  D1                 	db	209
  3420                           
  3421                           ;Config register CONFIG4L @ 0x300006
  3422                           ;	Stack Full/Underflow Reset
  3423                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3424                           ;	Single-Supply ICSP Enable bit
  3425                           ;	LVP = OFF, Single-Supply ICSP disabled
  3426                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  3427                           ;	ICPRT = OFF, ICPORT disabled
  3428                           ;	Extended Instruction Set Enable bit
  3429                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  3430                           ;	Background Debugger Enable bit
  3431                           ;	DEBUG = 0x1, unprogrammed default
  3432  300006                     	org	3145734
  3433  300006  81                 	db	129
  3434                           
  3435                           ; Padding undefined space
  3436  300007                     	org	3145735
  3437  300007  FF                 	db	255
  3438                           
  3439                           ;Config register CONFIG5L @ 0x300008
  3440                           ;	Block 0 Code Protect
  3441                           ;	CP0 = OFF, Block 0 is not code-protected
  3442                           ;	Block 1 Code Protect
  3443                           ;	CP1 = OFF, Block 1 is not code-protected
  3444                           ;	Block 2 Code Protect
  3445                           ;	CP2 = OFF, Block 2 is not code-protected
  3446                           ;	Block 3 Code Protect
  3447                           ;	CP3 = OFF, Block 3 is not code-protected
  3448  300008                     	org	3145736
  3449  300008  0F                 	db	15
  3450                           
  3451                           ;Config register CONFIG5H @ 0x300009
  3452                           ;	Boot Block Code Protect
  3453                           ;	CPB = OFF, Boot block is not code-protected
  3454                           ;	Data EEPROM Code Protect
  3455                           ;	CPD = OFF, Data EEPROM is not code-protected
  3456  300009                     	org	3145737
  3457  300009  C0                 	db	192
  3458                           
  3459                           ;Config register CONFIG6L @ 0x30000A
  3460                           ;	Block 0 Write Protect
  3461                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  3462                           ;	Block 1 Write Protect
  3463                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  3464                           ;	Block 2 Write Protect
  3465                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  3466                           ;	Block 3 Write Protect
  3467                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  3468  30000A                     	org	3145738
  3469  30000A  0F                 	db	15
  3470                           
  3471                           ;Config register CONFIG6H @ 0x30000B
  3472                           ;	Configuration Registers Write Protect
  3473                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3474                           ;	Boot Block Write Protect
  3475                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  3476                           ;	Data EEPROM Write Protect
  3477                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3478  30000B                     	org	3145739
  3479  30000B  E0                 	db	224
  3480                           
  3481                           ;Config register CONFIG7L @ 0x30000C
  3482                           ;	Block 0 Table Read Protect
  3483                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  3484                           ;	Block 1 Table Read Protect
  3485                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  3486                           ;	Block 2 Table Read Protect
  3487                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  3488                           ;	Block 3 Table Read Protect
  3489                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  3490  30000C                     	org	3145740
  3491  30000C  0F                 	db	15
  3492                           
  3493                           ;Config register CONFIG7H @ 0x30000D
  3494                           ;	Boot Block Table Read Protect
  3495                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  3496  30000D                     	org	3145741
  3497  30000D  40                 	db	64
  3498                           tosu	equ	0xFFF
  3499                           tosh	equ	0xFFE
  3500                           tosl	equ	0xFFD
  3501                           stkptr	equ	0xFFC
  3502                           pclatu	equ	0xFFB
  3503                           pclath	equ	0xFFA
  3504                           pcl	equ	0xFF9
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           indf0	equ	0xFEF
  3512                           postinc0	equ	0xFEE
  3513                           postdec0	equ	0xFED
  3514                           preinc0	equ	0xFEC
  3515                           plusw0	equ	0xFEB
  3516                           fsr0h	equ	0xFEA
  3517                           fsr0l	equ	0xFE9
  3518                           wreg	equ	0xFE8
  3519                           indf1	equ	0xFE7
  3520                           postinc1	equ	0xFE6
  3521                           postdec1	equ	0xFE5
  3522                           preinc1	equ	0xFE4
  3523                           plusw1	equ	0xFE3
  3524                           fsr1h	equ	0xFE2
  3525                           fsr1l	equ	0xFE1
  3526                           bsr	equ	0xFE0
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           preinc2	equ	0xFDC
  3531                           plusw2	equ	0xFDB
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8

Data Sizes:
    Strings     248
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_20(CODE[28]), STR_19(CODE[12]), STR_18(CODE[15]), STR_17(CODE[26]), 
		 -> STR_16(CODE[12]), STR_15(CODE[15]), STR_14(CODE[30]), STR_13(CODE[14]), 
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[14]), 
		 -> STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[16]), STR_5(CODE[13]), 
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[15]), STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_20(CODE[28]), STR_19(CODE[12]), STR_18(CODE[15]), STR_17(CODE[26]), 
		 -> STR_16(CODE[12]), STR_15(CODE[15]), STR_14(CODE[30]), STR_13(CODE[14]), 
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[14]), 
		 -> STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[16]), STR_5(CODE[13]), 
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[15]), STR_1(CODE[11]), 

    EUSART_StringSend@cadenon	PTR unsigned char  size(2) Largest target is 30
		 -> STR_20(CODE[28]), STR_17(CODE[26]), STR_14(CODE[30]), STR_13(CODE[14]), 
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[14]), 
		 -> STR_8(CODE[16]), STR_7(CODE[13]), STR_4(CODE[15]), STR_3(CODE[11]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[12]), STR_18(CODE[15]), STR_16(CODE[12]), STR_15(CODE[15]), 
		 -> STR_6(CODE[16]), STR_5(CODE[13]), STR_2(CODE[15]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_splash_screen
    _splash_screen->_ESCRIBE_MENSAJE2
    _splash_screen->_EUSART_StringSend
    _POS_CURSOR->_ENVIA_LCD_CMD
    _EUSART_StringSend->_strlen
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT0_INT1_ISR in COMRAM

    _INT0_INT1_ISR->i2_ESCRIBE_MENSAJE2
    _INT0_INT1_ISR->i2_EUSART_StringSend
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_EUSART_StringSend->i2_strlen
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_INT1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_INT1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_INT1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_INT1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_INT1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_INT1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3411
                          _configuro
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0    2886
                                             27 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                     _EUSART_NewLine
                  _EUSART_StringSend
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     712
                                             20 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _EUSART_StringSend                                    6     4      2    1074
                                             21 COMRAM     6     4      2
                    _EUSART_ByteSend
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART_ByteSend                                      1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_NewLine                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     980
                                             21 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                             18 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             21 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             20 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             20 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             18 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_INT1_ISR                                        7     7      0    1861
                                             10 COMRAM     7     7      0
                       i2_BORRAR_LCD
                       i2_ENVIA_CHAR
                 i2_ESCRIBE_MENSAJE2
                   i2_EUSART_NewLine
                i2_EUSART_StringSend
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     375
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_EUSART_StringSend                                  6     4      2     485
                                              4 COMRAM     6     4      2
                  i2_EUSART_ByteSend
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_EUSART_ByteSend                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_EUSART_NewLine                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     543
                                              4 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i2_BORRAR_LCD                                         0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
           _ENVIA_NIBBLE
           _LEER_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _splash_screen
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _strlen
     _EUSART_NewLine
     _EUSART_StringSend
       _EUSART_ByteSend
       _strlen
     _POS_CURSOR
       _ENVIA_LCD_CMD

 _INT0_INT1_ISR (ROOT)
   i2_BORRAR_LCD
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ENVIA_CHAR
     i2_ENVIA_NIBBLE
     i2_LEER_LCD
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
     i2_strlen
   i2_EUSART_NewLine
   i2_EUSART_StringSend
     i2_EUSART_ByteSend
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1D      1D       1       30.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhlhh      22      0       0      22        0.0%
BITBIGSFRhhllh       C      0       0      23        0.0%
BITBIGSFRhhlll       6      0       0      24        0.0%
BITBIGSFRhll         4      0       0      25        0.0%
BITBIGSFRlhhh        2      0       0      26        0.0%
BITBIGSFRlhhl        3      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRllh        23      0       0      29        0.0%
BITBIGSFRlll         8      0       0      30        0.0%
ABS                  0      0       0      31        0.0%
BIGRAM             7FF      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 15 21:14:41 2023

                         l26 0CAA                           l39 0F5E                           l71 0D8C  
                         l80 0EF0                           l56 0E88                           l74 0F66  
                         l83 0DC0                           l68 0BDC                           l77 0AF8  
                         l87 09FA                           l89 0A34                           l97 0E58  
                         u10 0A34                           u11 0A30                           u20 0E6C  
                         u21 0E68                           u30 0E82                           u31 0E7E  
                         u50 0F22                           u51 0F1E                _splash_screen 08FA  
           i2_EUSART_NewLine 0EB0                ENVIA_CHAR@aux 0014                          l162 0B48  
                        l171 0E8E                          l165 0F14                          l174 0EA0  
                        l183 0B92                          l191 0F42                          l168 0F22  
                        l192 0F42                          l177 0EAE                          l186 09C2  
                        l900 09C8                          l910 09DA                          l902 09CA  
                        l920 09F0                          l912 09DC                          l904 09CC  
                        l930 0A1C                          l922 09FC                          l914 09E4  
                        l906 09CE                          l940 0EE6                          l924 0A04  
                        l916 09E6                          l908 09D6                          l942 0EEE  
                        l926 0A08                          l934 0A22                          l918 09EE  
                        l950 0D9A                          l936 0ED8                          l928 0A12  
                        l960 0DAE                          l952 0DA2                          l944 0D90  
                        l938 0EE4                          l962 0DB4                          l954 0DA4  
                        l946 0D92                          l970 0E6C                          l964 0DBA  
                        l956 0DA6                          l948 0D96                          l972 0E72  
                        l980 0D62                          l958 0DA8                          l966 0F58  
                        l974 0E82                          l990 0D74                          l982 0D66  
                        l968 0E5C                          l992 0D7A                          l984 0D6E  
                        l976 0D5C                          l896 0CE4                          l898 09C4  
                        l994 0D80                          l986 0D70                          l978 0D5E  
                        l996 0D86                          l988 0D72                          u100 0E9C  
                        u101 0E98                          u110 0EAE                          u111 0EAA  
                        u320 0CD8                          u321 0CD4                          u340 0C84  
                        u341 0C80                          u350 0CA2                          u351 0C9E  
                        u360 0BDC                          u361 0BD8                          u370 0B92  
                        u371 0B8E                          u507 09B2                          u517 0D68  
                        u607 09FE                          u527 0E30                          u617 0A0C  
                        u537 0E42                          u627 0A16                          u547 0AB8  
                        u637 0EE8                          u557 0AC8                          u567 0D9C  
                        u577 09D0                          u497 0950                          u587 09DE  
                        u597 09E8                  LEER_LCD@aux 0012                          wreg 000FE8  
           ??i2_ENVIA_NIBBLE 0001                 ?_CURSOR_HOME 0001            i2_EUSART_ByteSend 0F24  
             ??_ENVIA_NIBBLE 0012               ENVIA_CHAR@dato 0013                         l1010 0AA8  
                       l1020 0AD4                         l1012 0AAC                         l1100 0E2A  
                       l1030 0AF2                         l1022 0ADA                         l1014 0AB2  
                       l1102 0E38                         l1008 0F60                         l1024 0AE0  
                       l1016 0AC0                         l1104 0E3C                         l1200 0B28  
                       l1032 0F10                         l1026 0AE6                         l1018 0ACE  
                       l1210 0B34                         l1202 0B2A                         l1106 0E8A  
                       l1028 0AEC                         l1220 0B42                         l1212 0B36  
                       l1204 0B2E                         l1108 0E9C                         l1222 0B44  
                       l1214 0B38                         l1206 0B30                         l1224 0B46  
                       l1216 0B3C                         l1208 0B32                         l1218 0B40  
                       l1180 0B00                         l1190 0B0C                         l1182 0B04  
                       l1510 0C74                         l1192 0B0E                         l1184 0B06  
                       l1176 0AFA                         l1520 0BA4                         l1512 0C84  
                       l1600 0910                         l1194 0B10                         l1186 0B08  
                       l1178 0AFE                         l1522 0BA4                         l1530 0B4A  
                       l1514 0C90                         l1610 0966                         l1602 0932  
                       l1196 0B12                         l1188 0B0A                         l1460 0CD8  
                       l1524 0BAC                         l1532 0B5A                         l1516 0CA2  
                       l1620 0998                         l1612 0972                         l1604 0936  
                       l1198 0B24                         l1454 0CAC                         l1526 0BC8  
                       l1518 0B94                         l1534 0B62                         l1622 09A4  
                       l1614 097C                         l1606 0946                         l1456 0CB8  
                       l1528 0BCA                         l1536 0B7E                         l1624 09A8  
                       l1616 0988                         l1608 095C                         l1458 0CBC  
                       l1538 0B80                         l1626 09BE                         l1618 0994  
                       l1660 0F3A                         l1662 0F3E                         l1596 08FA  
                       l1598 0904           ?i2_EUSART_ByteSend 0001                         STR_1 08EE  
                       STR_2 0865                         STR_3 08EE                         STR_4 0865  
                       STR_5 08C9                         STR_6 0855                         STR_7 08C9  
                       STR_8 0855                         STR_9 0883                         _LATD 000F8C  
                       i2l26 0D1E                         i2l71 0DF4                         i2l80 0F0C  
                       i2l74 0F6E                         i2l83 0E28                         i2l68 0C70  
                       i2l87 0A6C                         i2l89 0AA6                         _WPUB 000F85  
                ?i2_LEER_LCD 0001                         _main 0F3A                         btemp 001E  
          ??i2_ENVIA_LCD_CMD 0002               ?_INT0_INT1_ISR 0001          ??i2_EUSART_ByteSend 0001  
                       start 01FE                ?_CURSOR_ONOFF 0001                 ___param_bank 000000  
            ??_ENVIA_LCD_CMD 0013             __end_of_LCD_INIT 0E5A             __end_of_LEER_LCD 0A36  
             ?_splash_screen 0001                        ?_main 0001                        STR_10 0891  
                      STR_11 089F                        STR_12 08AD                        STR_20 081F  
                      STR_13 08BB                        STR_14 0801                        STR_15 0874  
                      STR_16 08D6                        STR_17 083B                        STR_18 0874  
                      STR_19 08E2                        i2l210 0128                        i2l214 01B4  
                      i2l216 01EA                        i2l209 015E                        i2l171 0EB4  
                      i2l165 0F2A                        i2l174 0EC6                        i2l183 0C26  
                      i2l168 0F38                        i2l177 0ED4                        i2l199 00D2  
                      i2l896 0D58                        _PORTD 000F83                        _TRISD 000F95  
                      _TRISE 000F96    __end_ofi2_EUSART_ByteSend 0F3A                  ?_POS_CURSOR 0015  
                      tablat 000FF5            ??_EUSART_ByteSend 0012                        ttemp5 001F  
                      ttemp6 0022                        ttemp7 0026                        status 000FD8  
                      wtemp8 001F               ??_CURSOR_ONOFF 0015             __end_ofi2_strlen 0D5A  
            __initialization 0F4A                 __end_of_main 0F4A     i2ESCRIBE_MENSAJE2@cadena 0005  
                     ??_main 001E                __activetblptr 000002                ?i2_BORRAR_LCD 0001  
                     _ANSELD 000F5E                       _ANSELE 000F5F                       i2l1500 0A7A  
                     i2l1502 0A84                       i2l1504 0A8E                       i2l1280 0EB0  
                     i2l1282 0EC2                       i2l1508 0A94                       i2l1540 0DC4  
                     i2l1700 00EC                       i2l1470 0F0A                       i2l1550 0DD8  
                     i2l1542 0DC6                       i2l1630 0CF8                       i2l1710 0124  
                     i2l1702 00F8                       i2l1464 0EF4                       i2l1480 0A40  
                     i2l1472 0A36                       i2l1560 0DEE                       i2l1552 0DDA  
                     i2l1544 0DCA                       i2l1640 0C38                       i2l1632 0D04  
                     i2l1720 0156                       i2l1704 010E                       i2l1466 0F00  
                     i2l1490 0A58                       i2l1482 0A48                       i2l1474 0A3A  
                     i2l1570 0E0A                       i2l1562 0DF8                       i2l1554 0DDC  
                     i2l1546 0DCE                       i2l1642 0C40                       i2l1650 0BDE  
                     i2l1634 0D16                       i2l1730 019A                       i2l1722 016C  
                     i2l1714 012A                       i2l1706 0114                       i2l1468 0F02  
                     i2l1492 0A60                       i2l1484 0A4C                       i2l1476 0A3C  
                     i2l1580 0E1C                       i2l1572 0E0C                       i2l1564 0DFA  
                     i2l1556 0DE2                       i2l1548 0DD6                       i2l1644 0C5C  
                     i2l1636 0C28                       i2l1652 0BEE                       i2l1628 0CE8  
                     i2l1740 01B6                       i2l1732 01A0                       i2l1724 016E  
                     i2l1716 0132                       i2l1708 0120                       i2l1494 0A62  
                     i2l1486 0A4E                       i2l1478 0A3E                       i2l1582 0E22  
                     i2l1574 0E0E                       i2l1566 0DFE                       i2l1558 0DE8  
                     i2l1590 0D30                       i2l1646 0C5E                       i2l1638 0C38  
                     i2l1654 0BF6                       i2l1742 01C4                       i2l1734 01AC  
                     i2l1726 0178                       i2l1718 0144                       i2l1670 0038  
                     i2l1496 0A6E                       i2l1488 0A56                       i2l1576 0E10  
                     i2l1568 0E02                       i2l1648 0F68                       i2l1592 0D4C  
                     i2l1584 0F26                       i2l1656 0C12                       i2l1744 01D4  
                     i2l1736 01B0                       i2l1728 0184                       i2l1680 0060  
                     i2l1672 0040                       i2l1664 001A                       i2l1498 0A76  
                     i2l1578 0E16                       i2l1586 0D20                       i2l1658 0C14  
                     i2l1588 0D2C                       i2l1772 00A4                       i2l1684 0070  
                     i2l1676 0050                       i2l1668 002C                       i2l1694 0090  
                     i2l1696 00E0                       i2l1688 0080                       i2l1698 00E2  
             _EUSART_NewLine 0E8A                       _RCREG1 000FAE                       _OSCCON 000FD3  
                     _SPBRG1 000FAF              ??_INT0_INT1_ISR 000B                       _TXREG1 000FAD  
        i2ESCRIBE_MENSAJE2@i 000A                ?i2_ENVIA_CHAR 0001              ??_splash_screen 001C  
       __end_of_ENVIA_NIBBLE 0EF2                       isa$std 000001                       _strlen 0CAC  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8               ??i2_BORRAR_LCD 0004                 ??_BORRAR_LCD 0015  
     __end_of_EUSART_NewLine 0EB0                    ?_LCD_INIT 0001                    ?_LEER_LCD 0001  
                 __accesstop 0060      __end_of__initialization 0F4A     __end_ofi2_EUSART_NewLine 0ED6  
               ??_LCD_CONFIG 0015               ??i2_ENVIA_CHAR 0002                ___rparam_used 000001  
               ??_ENVIA_CHAR 0013               __pcstackCOMRAM 0001          i2_EUSART_StringSend 0BDE  
         __end_of_BORRAR_LCD 0F68          i2ENVIA_LCD_CMD@dato 0002             _ESCRIBE_MENSAJE2 0B94  
           ENVIA_LCD_CMD@aux 0014         __end_of_CURSOR_ONOFF 0E8A           __end_of_LCD_CONFIG 0AFA  
         __end_of_ENVIA_CHAR 0D8E              i2_ENVIA_LCD_CMD 0DF6                    ?i2_strlen 0001  
            ?_EUSART_NewLine 0001         ?i2_EUSART_StringSend 0005                ?i2_POS_CURSOR 0004  
                 ??_LCD_INIT 0016                 ??i2_LEER_LCD 0001                   ??_LEER_LCD 0012  
           ENVIA_NIBBLE@dato 0012      EUSART_StringSend@tamano 001A         i2EUSART_StringSend@x 000A  
 __end_ofi2_ESCRIBE_MENSAJE2 0C72                      ?_strlen 0012           __end_ofi2_LEER_LCD 0AA8  
            _EUSART_ByteSend 0F0E                      i2u40_40 0CF8                      i2u40_41 0CF4  
                    i2u33_40 0AA6                      i2u41_40 0D16                      i2u33_41 0AA2  
                    i2u41_41 0D12                      i2u42_40 0C70                      i2u18_40 0EC2  
                    i2u42_41 0C6C                      i2u18_41 0EBE                      i2u19_40 0ED4  
                    i2u43_40 0C26                      i2u19_41 0ED0                      i2u43_41 0C22  
                    i2u44_40 0028                      i2u44_41 0024                      i2u45_40 00E0  
                    i2u45_41 00DC                      i2u38_40 0F38                      i2u46_40 0156  
                    i2u38_41 0F34                      i2u46_41 0152                      i2u70_47 0A42  
                    i2u39_40 0D4C                      i2u47_40 016C                      i2u39_41 0D48  
                    i2u47_41 0168                      i2u71_47 0A50                      i2u48_40 01E6  
                    i2u48_41 01E2                      i2u72_47 0A5A                      i2u64_47 012C  
                    i2u73_47 0A70                      i2u65_47 013A                      i2u74_47 0A7E  
                    i2u66_47 01BC                      _SPBRGH1 000FB0                      i2u75_47 0A88  
                    i2u67_47 01CC                      i2u76_47 0F04                      i2u68_47 0DD0  
                    i2u69_47 0E04                   ??i2_strlen 0003        ??i2_EUSART_StringSend 0007  
             ??i2_POS_CURSOR 0005                 ??_POS_CURSOR 0016                      __Hparam 0000  
                    __Lparam 0000   i2EUSART_StringSend@cadenon 0005            __end_of_configuro 0B4A  
       __end_ofi2_BORRAR_LCD 0F70                 __psmallconst 0800        __end_of_ENVIA_LCD_CMD 0DC2  
                    __pcinit 0F4A           __end_of_POS_CURSOR 0CAC                      __ramtop 0800  
                    __ptext0 0F3A                      __ptext1 08FA                      __ptext2 0C72  
                    __ptext3 0B4A                      __ptext4 0F0E                      __ptext5 0E8A  
                    __ptext6 0B94                      __ptext7 0CAC                      __ptext8 0D5A  
                    __ptext9 0AFA      __end_ofi2_ENVIA_LCD_CMD 0E2A         __end_ofi2_ENVIA_CHAR 0DF6  
            i2ENVIA_CHAR@aux 0003                 _ENVIA_NIBBLE 0ED6         end_of_initialization 0F4A  
              __Lmediumconst 0000                    _RCSTAbits 000FAB      __end_of_EUSART_ByteSend 0F24  
                    strlen@a 0014                      strlen@s 0012            ESCRIBE_MENSAJE2@i 001B  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
                  _TXSTAbits 000FAC            ?i2_EUSART_NewLine 0001               INT0_INT1_ISR@x 0011  
      __end_of_INT0_INT1_ISR 01FE     __end_of_ESCRIBE_MENSAJE2 0BDE                 _CURSOR_ONOFF 0E5A  
         CURSOR_ONOFF@estado 0015           ??i2_EUSART_NewLine 0001         __end_ofi2_POS_CURSOR 0D20  
      __end_of_splash_screen 09C4             ?i2_ENVIA_LCD_CMD 0001             ??_EUSART_NewLine 0012  
             __end_of_strlen 0CE6                ??_CURSOR_HOME 0015          start_initialization 0F4A  
          _EUSART_StringSend 0B4A                    i2strlen@a 0003                    i2strlen@s 0001  
         ?_EUSART_StringSend 0016            ENVIA_LCD_CMD@dato 0013             i2POS_CURSOR@fila 0005  
        ??_EUSART_StringSend 0018             ?_EUSART_ByteSend 0001        i2EUSART_ByteSend@dato 0001  
                   ??_strlen 0014                i2LEER_LCD@aux 0001    __end_of_EUSART_StringSend 0B94  
               i2_BORRAR_LCD 0F68           i2_ESCRIBE_MENSAJE2 0C28           i2ENVIA_LCD_CMD@aux 0003  
        __end_of_CURSOR_HOME 0F60               i2_ENVIA_NIBBLE 0EF2          ?i2_ESCRIBE_MENSAJE2 0005  
               i2_ENVIA_CHAR 0DC2           i2ENVIA_NIBBLE@dato 0001     EUSART_StringSend@cadenon 0016  
                  __pintcode 0008                    _configuro 0AFA  __end_ofi2_EUSART_StringSend 0C28  
       ??i2_ESCRIBE_MENSAJE2 0007                  __smallconst 0800          i2POS_CURSOR@columna 0004  
  i2EUSART_StringSend@tamano 0009       __end_ofi2_ENVIA_NIBBLE 0F0E                     _LCD_INIT 0E2A  
                   _LEER_LCD 09C4                     _LATAbits 000F89                     _LATEbits 000F8D  
                   _PIE1bits 000F9D                     _PIR1bits 000F9E               POS_CURSOR@fila 0016  
                 ?_configuro 0001       ESCRIBE_MENSAJE2@cadena 0016                  _CURSOR_HOME 0F58  
      i2ESCRIBE_MENSAJE2@tam 0009                     i2_strlen 0D20                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                 i2_POS_CURSOR 0CE6              ?i2_ENVIA_NIBBLE 0001  
                   __Hrparam 0000            ?_ESCRIBE_MENSAJE2 0016                     __Lrparam 0000  
         ??_ESCRIBE_MENSAJE2 0018          EUSART_ByteSend@dato 0012                   _ANSELAbits 000F5B  
                 _ANSELBbits 000F5C                   _ANSELCbits 000F5D                     __ptext10 0E2A  
                   __ptext11 0AA8                     __ptext20 0BDE                     __ptext12 0E5A  
                   __ptext21 0F24                     __ptext13 0F58                     __ptext22 0EB0  
                   __ptext14 0F60                     __ptext23 0C28                     __ptext15 0D8E  
                   __ptext24 0D20                     __ptext16 09C4                     __ptext25 0DC2  
                   __ptext17 0ED6                     __ptext26 0F68                     __ptext27 0DF6  
                   __ptext19 0CE6                     __ptext28 0A36                     __ptext29 0EF2  
                 _BORRAR_LCD 0F60                   _LCD_CONFIG 0AA8                   _ENVIA_CHAR 0D5A  
                   isa$xinst 000000                     int$flags 001E             i2ENVIA_CHAR@dato 0002  
              _ENVIA_LCD_CMD 0D8E                  ??_configuro 0017                   _INTCONbits 000FF2  
                   intlevel2 0000                   i2_LEER_LCD 0A36               ?_ENVIA_LCD_CMD 0001  
         EUSART_StringSend@x 001B          ESCRIBE_MENSAJE2@tam 001A                  ?_BORRAR_LCD 0001  
              ?_ENVIA_NIBBLE 0001                   _POS_CURSOR 0C72                  ?_LCD_CONFIG 0001  
                ?_ENVIA_CHAR 0001            POS_CURSOR@columna 0015                _INT0_INT1_ISR 0008  
