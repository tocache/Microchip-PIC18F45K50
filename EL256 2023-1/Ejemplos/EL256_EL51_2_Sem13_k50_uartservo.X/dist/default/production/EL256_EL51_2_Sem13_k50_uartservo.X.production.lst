

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 14 21:22:06 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K50 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _RCREG1	set	4014
    90  0000                     _TXREG1	set	4013
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISBbits	set	3987
    93  0000                     _ANSELAbits	set	3931
    94  0000                     _PORTD	set	3971
    95  0000                     _LATD	set	3980
    96  0000                     _LATEbits	set	3981
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISD	set	3989
    99  0000                     _PIE1bits	set	3997
   100  0000                     _RCSTA1bits	set	4011
   101  0000                     _TXSTA1bits	set	4012
   102  0000                     _SPBRG1	set	4015
   103  0000                     _SPBRGH1	set	4016
   104  0000                     _RCONbits	set	4048
   105  0000                     _TRISE	set	3990
   106  0000                     _OSCCON	set	4051
   107  0000                     _WPUBbits	set	3973
   108  0000                     _INTCON3bits	set	4080
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _ANSELE	set	3935
   111  0000                     _ANSELD	set	3934
   112  0000                     _ANSELCbits	set	3933
   113  0000                     _ANSELBbits	set	3932
   114  0000                     _INTCONbits	set	4082
   115  0000                     _LATAbits	set	3977
   116  0000                     _PIR1bits	set	3998
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_11:
   123  000801  6D                 	db	109	;'m'
   124  000802  6F                 	db	111	;'o'
   125  000803  76                 	db	118	;'v'
   126  000804  69                 	db	105	;'i'
   127  000805  65                 	db	101	;'e'
   128  000806  6E                 	db	110	;'n'
   129  000807  64                 	db	100	;'d'
   130  000808  6F                 	db	111	;'o'
   131  000809  20                 	db	32
   132  00080A  73                 	db	115	;'s'
   133  00080B  65                 	db	101	;'e'
   134  00080C  72                 	db	114	;'r'
   135  00080D  76                 	db	118	;'v'
   136  00080E  6F                 	db	111	;'o'
   137  00080F  20                 	db	32
   138  000810  61                 	db	97	;'a'
   139  000811  20                 	db	32
   140  000812  31                 	db	49	;'1'
   141  000813  38                 	db	56	;'8'
   142  000814  30                 	db	48	;'0'
   143  000815  20                 	db	32
   144  000816  67                 	db	103	;'g'
   145  000817  72                 	db	114	;'r'
   146  000818  61                 	db	97	;'a'
   147  000819  64                 	db	100	;'d'
   148  00081A  6F                 	db	111	;'o'
   149  00081B  73                 	db	115	;'s'
   150  00081C  00                 	db	0
   151  00081D                     STR_4:
   152  00081D  6D                 	db	109	;'m'
   153  00081E  6F                 	db	111	;'o'
   154  00081F  76                 	db	118	;'v'
   155  000820  69                 	db	105	;'i'
   156  000821  65                 	db	101	;'e'
   157  000822  6E                 	db	110	;'n'
   158  000823  64                 	db	100	;'d'
   159  000824  6F                 	db	111	;'o'
   160  000825  20                 	db	32
   161  000826  73                 	db	115	;'s'
   162  000827  65                 	db	101	;'e'
   163  000828  72                 	db	114	;'r'
   164  000829  76                 	db	118	;'v'
   165  00082A  6F                 	db	111	;'o'
   166  00082B  20                 	db	32
   167  00082C  61                 	db	97	;'a'
   168  00082D  20                 	db	32
   169  00082E  30                 	db	48	;'0'
   170  00082F  20                 	db	32
   171  000830  67                 	db	103	;'g'
   172  000831  72                 	db	114	;'r'
   173  000832  61                 	db	97	;'a'
   174  000833  64                 	db	100	;'d'
   175  000834  6F                 	db	111	;'o'
   176  000835  73                 	db	115	;'s'
   177  000836  00                 	db	0
   178  000837                     STR_9:
   179  000837  74                 	db	116	;'t'
   180  000838  65                 	db	101	;'e'
   181  000839  63                 	db	99	;'c'
   182  00083A  6C                 	db	108	;'l'
   183  00083B  61                 	db	97	;'a'
   184  00083C  20                 	db	32
   185  00083D  65                 	db	101	;'e'
   186  00083E  72                 	db	114	;'r'
   187  00083F  72                 	db	114	;'r'
   188  000840  61                 	db	97	;'a'
   189  000841  64                 	db	100	;'d'
   190  000842  61                 	db	97	;'a'
   191  000843  20                 	db	32
   192  000844  6E                 	db	110	;'n'
   193  000845  6F                 	db	111	;'o'
   194  000846  20                 	db	32
   195  000847  74                 	db	116	;'t'
   196  000848  65                 	db	101	;'e'
   197  000849  20                 	db	32
   198  00084A  70                 	db	112	;'p'
   199  00084B  61                 	db	97	;'a'
   200  00084C  73                 	db	115	;'s'
   201  00084D  65                 	db	101	;'e'
   202  00084E  73                 	db	115	;'s'
   203  00084F  00                 	db	0
   204  000850                     STR_6:
   205  000850  6D                 	db	109	;'m'
   206  000851  61                 	db	97	;'a'
   207  000852  63                 	db	99	;'c'
   208  000853  68                 	db	104	;'h'
   209  000854  75                 	db	117	;'u'
   210  000855  63                 	db	99	;'c'
   211  000856  61                 	db	97	;'a'
   212  000857  73                 	db	115	;'s'
   213  000858  74                 	db	116	;'t'
   214  000859  65                 	db	101	;'e'
   215  00085A  20                 	db	32
   216  00085B  6C                 	db	108	;'l'
   217  00085C  61                 	db	97	;'a'
   218  00085D  20                 	db	32
   219  00085E  45                 	db	69	;'E'
   220  00085F  00                 	db	0
   221  000860                     STR_5:
   222  000860  6D                 	db	109	;'m'
   223  000861  61                 	db	97	;'a'
   224  000862  63                 	db	99	;'c'
   225  000863  68                 	db	104	;'h'
   226  000864  75                 	db	117	;'u'
   227  000865  63                 	db	99	;'c'
   228  000866  61                 	db	97	;'a'
   229  000867  73                 	db	115	;'s'
   230  000868  74                 	db	116	;'t'
   231  000869  65                 	db	101	;'e'
   232  00086A  20                 	db	32
   233  00086B  6C                 	db	108	;'l'
   234  00086C  61                 	db	97	;'a'
   235  00086D  20                 	db	32
   236  00086E  50                 	db	80	;'P'
   237  00086F  00                 	db	0
   238  000870                     STR_7:
   239  000870  6D                 	db	109	;'m'
   240  000871  61                 	db	97	;'a'
   241  000872  63                 	db	99	;'c'
   242  000873  68                 	db	104	;'h'
   243  000874  75                 	db	117	;'u'
   244  000875  63                 	db	99	;'c'
   245  000876  61                 	db	97	;'a'
   246  000877  73                 	db	115	;'s'
   247  000878  74                 	db	116	;'t'
   248  000879  65                 	db	101	;'e'
   249  00087A  20                 	db	32
   250  00087B  6C                 	db	108	;'l'
   251  00087C  61                 	db	97	;'a'
   252  00087D  20                 	db	32
   253  00087E  52                 	db	82	;'R'
   254  00087F  00                 	db	0
   255  000880                     STR_8:
   256  000880  6D                 	db	109	;'m'
   257  000881  61                 	db	97	;'a'
   258  000882  63                 	db	99	;'c'
   259  000883  68                 	db	104	;'h'
   260  000884  75                 	db	117	;'u'
   261  000885  63                 	db	99	;'c'
   262  000886  61                 	db	97	;'a'
   263  000887  73                 	db	115	;'s'
   264  000888  74                 	db	116	;'t'
   265  000889  65                 	db	101	;'e'
   266  00088A  20                 	db	32
   267  00088B  6C                 	db	108	;'l'
   268  00088C  61                 	db	97	;'a'
   269  00088D  20                 	db	32
   270  00088E  55                 	db	85	;'U'
   271  00088F  00                 	db	0
   272  000890                     STR_10:
   273  000890  53                 	db	83	;'S'
   274  000891  65                 	db	101	;'e'
   275  000892  72                 	db	114	;'r'
   276  000893  76                 	db	118	;'v'
   277  000894  6F                 	db	111	;'o'
   278  000895  20                 	db	32
   279  000896  61                 	db	97	;'a'
   280  000897  20                 	db	32
   281  000898  31                 	db	49	;'1'
   282  000899  38                 	db	56	;'8'
   283  00089A  30                 	db	48	;'0'
   284  00089B  00                 	db	0
   285  00089C                     STR_2:
   286  00089C  4D                 	db	77	;'M'
   287  00089D  69                 	db	105	;'i'
   288  00089E  63                 	db	99	;'c'
   289  00089F  72                 	db	114	;'r'
   290  0008A0  6F                 	db	111	;'o'
   291  0008A1  20                 	db	32
   292  0008A2  50                 	db	80	;'P'
   293  0008A3  49                 	db	73	;'I'
   294  0008A4  43                 	db	67	;'C'
   295  0008A5  31                 	db	49	;'1'
   296  0008A6  38                 	db	56	;'8'
   297  0008A7  00                 	db	0
   298  0008A8                     STR_3:
   299  0008A8  53                 	db	83	;'S'
   300  0008A9  65                 	db	101	;'e'
   301  0008AA  72                 	db	114	;'r'
   302  0008AB  76                 	db	118	;'v'
   303  0008AC  6F                 	db	111	;'o'
   304  0008AD  20                 	db	32
   305  0008AE  61                 	db	97	;'a'
   306  0008AF  20                 	db	32
   307  0008B0  30                 	db	48	;'0'
   308  0008B1  00                 	db	0
   309  0008B2                     STR_1:
   310  0008B2  53                 	db	83	;'S'
   311  0008B3  65                 	db	101	;'e'
   312  0008B4  6D                 	db	109	;'m'
   313  0008B5  61                 	db	97	;'a'
   314  0008B6  6E                 	db	110	;'n'
   315  0008B7  61                 	db	97	;'a'
   316  0008B8  20                 	db	32
   317  0008B9  31                 	db	49	;'1'
   318  0008BA  33                 	db	51	;'3'
   319  0008BB  00                 	db	0
   320  0008BC  00                 	db	0	; dummy byte at the end
   321  0000                     
   322                           ; #config settings
   323                           
   324                           	psect	cinit
   325  001184                     __pcinit:
   326                           	callstack 0
   327  001184                     start_initialization:
   328                           	callstack 0
   329  001184                     __initialization:
   330                           	callstack 0
   331  001184                     end_of_initialization:
   332                           	callstack 0
   333  001184                     __end_of__initialization:
   334                           	callstack 0
   335  001184  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336  001186  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337  001188  0E00               	movlw	low (__Lmediumconst shr (0+16))
   338  00118A  6EF8               	movwf	tblptru,c
   339  00118C  0100               	movlb	0
   340  00118E  EFBA  F008         	goto	_main	;jump to C main() function
   341                           
   342                           	psect	cstackCOMRAM
   343  000001                     __pcstackCOMRAM:
   344                           	callstack 0
   345  000001                     ?i2_strlen:
   346                           	callstack 0
   347  000001                     i2ENVIA_NIBBLE@dato:
   348                           	callstack 0
   349  000001                     i2LEER_LCD@aux:
   350                           	callstack 0
   351  000001                     i2EUSART_Datasend@dato:
   352                           	callstack 0
   353  000001                     i2strlen@s:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x0
   357  000001                     	ds	1
   358  000002                     i2ENVIA_CHAR@dato:
   359                           	callstack 0
   360  000002                     i2ENVIA_LCD_CMD@dato:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x1
   364  000002                     	ds	1
   365  000003                     i2ENVIA_CHAR@aux:
   366                           	callstack 0
   367  000003                     i2ENVIA_LCD_CMD@aux:
   368                           	callstack 0
   369  000003                     i2strlen@a:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2
   373  000003                     	ds	1
   374  000004                     i2POS_CURSOR@columna:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x3
   378  000004                     	ds	1
   379  000005                     i2POS_CURSOR@fila:
   380                           	callstack 0
   381  000005                     i2ESCRIBE_MENSAJE2@cadena:
   382                           	callstack 0
   383  000005                     i2EUSART_Stringsend@cadena:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x4
   387  000005                     	ds	2
   388  000007                     ??i2_ESCRIBE_MENSAJE2:
   389  000007                     ??i2_EUSART_Stringsend:
   390                           
   391                           ; 1 bytes @ 0x6
   392  000007                     	ds	2
   393  000009                     i2ESCRIBE_MENSAJE2@tam:
   394                           	callstack 0
   395  000009                     i2EUSART_Stringsend@tam:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x8
   399  000009                     	ds	1
   400  00000A                     i2ESCRIBE_MENSAJE2@i:
   401                           	callstack 0
   402  00000A                     i2EUSART_Stringsend@x_var:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x9
   406  00000A                     	ds	1
   407  00000B                     ??_INT0_EUSARTRX_ISR:
   408                           
   409                           ; 1 bytes @ 0xA
   410  00000B                     	ds	6
   411  000011                     INT0_EUSARTRX_ISR@x_var:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x10
   415  000011                     	ds	1
   416  000012                     ?i1_strlen:
   417                           	callstack 0
   418  000012                     EUSART_Datasend@dato:
   419                           	callstack 0
   420  000012                     i1ENVIA_NIBBLE@dato:
   421                           	callstack 0
   422  000012                     i1LEER_LCD@aux:
   423                           	callstack 0
   424  000012                     i1strlen@s:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x11
   428  000012                     	ds	1
   429  000013                     i1ENVIA_CHAR@dato:
   430                           	callstack 0
   431  000013                     i1ENVIA_LCD_CMD@dato:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x12
   435  000013                     	ds	1
   436  000014                     i1ENVIA_CHAR@aux:
   437                           	callstack 0
   438  000014                     i1ENVIA_LCD_CMD@aux:
   439                           	callstack 0
   440  000014                     i1strlen@a:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x13
   444  000014                     	ds	1
   445  000015                     i1POS_CURSOR@columna:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x14
   449  000015                     	ds	1
   450  000016                     i1POS_CURSOR@fila:
   451                           	callstack 0
   452  000016                     EUSART_Stringsend@cadena:
   453                           	callstack 0
   454  000016                     i1ESCRIBE_MENSAJE2@cadena:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x15
   458  000016                     	ds	2
   459  000018                     ??_EUSART_Stringsend:
   460  000018                     ??i1_ESCRIBE_MENSAJE2:
   461                           
   462                           ; 1 bytes @ 0x17
   463  000018                     	ds	2
   464  00001A                     EUSART_Stringsend@tam:
   465                           	callstack 0
   466  00001A                     i1ESCRIBE_MENSAJE2@tam:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x19
   470  00001A                     	ds	1
   471  00001B                     EUSART_Stringsend@x_var:
   472                           	callstack 0
   473  00001B                     i1ESCRIBE_MENSAJE2@i:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1A
   477  00001B                     	ds	1
   478  00001C                     ??_INT1_ISR:
   479                           
   480                           ; 1 bytes @ 0x1B
   481  00001C                     	ds	8
   482  000024                     INT1_ISR@x_var:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x23
   486  000024                     	ds	1
   487  000025                     ?_strlen:
   488                           	callstack 0
   489  000025                     ENVIA_NIBBLE@dato:
   490                           	callstack 0
   491  000025                     LEER_LCD@aux:
   492                           	callstack 0
   493  000025                     strlen@s:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x24
   497  000025                     	ds	1
   498  000026                     ENVIA_CHAR@dato:
   499                           	callstack 0
   500  000026                     ENVIA_LCD_CMD@dato:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x25
   504  000026                     	ds	1
   505  000027                     ENVIA_CHAR@aux:
   506                           	callstack 0
   507  000027                     ENVIA_LCD_CMD@aux:
   508                           	callstack 0
   509  000027                     strlen@a:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x26
   513  000027                     	ds	1
   514  000028                     ??_LCD_CONFIG:
   515  000028                     POS_CURSOR@columna:
   516                           	callstack 0
   517  000028                     CURSOR_ONOFF@estado:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x27
   521  000028                     	ds	1
   522  000029                     ??_LCD_INIT:
   523  000029                     POS_CURSOR@fila:
   524                           	callstack 0
   525  000029                     ESCRIBE_MENSAJE2@cadena:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x28
   529  000029                     	ds	1
   530  00002A                     
   531                           ; 1 bytes @ 0x29
   532  00002A                     	ds	1
   533  00002B                     ??_ESCRIBE_MENSAJE2:
   534                           
   535                           ; 1 bytes @ 0x2A
   536  00002B                     	ds	2
   537  00002D                     ESCRIBE_MENSAJE2@tam:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x2C
   541  00002D                     	ds	1
   542  00002E                     ESCRIBE_MENSAJE2@i:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x2D
   546  00002E                     	ds	1
   547  00002F                     ??_pantallazo:
   548                           
   549                           ; 1 bytes @ 0x2E
   550  00002F                     	ds	2
   551  000031                     
   552                           ; 1 bytes @ 0x30
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 74 in file "maincode3.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels required when called: 13
   578 ;; This function calls:
   579 ;;		_configuro
   580 ;;		_pantallazo
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text0
   587  001174                     __ptext0:
   588                           	callstack 0
   589  001174                     _main:
   590                           	callstack 18
   591  001174                     
   592                           ;maincode3.c: 75:     configuro();
   593  001174  ECA8  F005         	call	_configuro	;wreg free
   594  001178                     
   595                           ;maincode3.c: 76:     pantallazo();
   596  001178  ECB6  F006         	call	_pantallazo	;wreg free
   597  00117C                     l193:
   598  00117C  EFBE  F008         	goto	l193
   599  001180  EF5F  F000         	goto	start
   600  001184                     __end_of_main:
   601                           	callstack 0
   602                           
   603 ;; *************** function _pantallazo *****************
   604 ;; Defined at:
   605 ;;		line 65 in file "maincode3.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0
   621 ;;      Temps:          2       0       0       0       0       0       0       0       0
   622 ;;      Totals:         2       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        2 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 11
   626 ;; This function calls:
   627 ;;		_BORRAR_LCD
   628 ;;		_ESCRIBE_MENSAJE2
   629 ;;		_POS_CURSOR
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  000D6C                     __ptext1:
   637                           	callstack 0
   638  000D6C                     _pantallazo:
   639                           	callstack 19
   640  000D6C                     
   641                           ;maincode3.c: 66:     POS_CURSOR(1,0);
   642  000D6C  0E00               	movlw	0
   643  000D6E  6E28               	movwf	POS_CURSOR@columna^0,c
   644  000D70  0E01               	movlw	1
   645  000D72  ECDA  F006         	call	_POS_CURSOR
   646  000D76                     
   647                           ;maincode3.c: 67:     ESCRIBE_MENSAJE2("Semana 13");
   648  000D76  0EB2               	movlw	low STR_1
   649  000D78  6E29               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   650  000D7A  0E08               	movlw	high STR_1
   651  000D7C  6E2A               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   652  000D7E  ECFD  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   653  000D82                     
   654                           ;maincode3.c: 68:     POS_CURSOR(2,0);
   655  000D82  0E00               	movlw	0
   656  000D84  6E28               	movwf	POS_CURSOR@columna^0,c
   657  000D86  0E02               	movlw	2
   658  000D88  ECDA  F006         	call	_POS_CURSOR
   659                           
   660                           ;maincode3.c: 69:     ESCRIBE_MENSAJE2("Micro PIC18");
   661  000D8C  0E9C               	movlw	low STR_2
   662  000D8E  6E29               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   663  000D90  0E08               	movlw	high STR_2
   664  000D92  6E2A               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   665  000D94  ECFD  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   666  000D98                     
   667                           ;maincode3.c: 70:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   668  000D98  0E10               	movlw	16
   669  000D9A  6E30               	movwf	(??_pantallazo+1)^0,c
   670  000D9C  0E39               	movlw	57
   671  000D9E  6E2F               	movwf	??_pantallazo^0,c
   672  000DA0  0E0E               	movlw	14
   673  000DA2                     u577:
   674  000DA2  2EE8               	decfsz	wreg,f,c
   675  000DA4  D7FE               	bra	u577
   676  000DA6  2E2F               	decfsz	??_pantallazo^0,f,c
   677  000DA8  D7FC               	bra	u577
   678  000DAA  2E30               	decfsz	(??_pantallazo+1)^0,f,c
   679  000DAC  D7FA               	bra	u577
   680  000DAE                     
   681                           ;maincode3.c: 71:     BORRAR_LCD();
   682  000DAE  ECCD  F008         	call	_BORRAR_LCD	;wreg free
   683  000DB2  0012               	return		;funcret
   684  000DB4                     __end_of_pantallazo:
   685                           	callstack 0
   686                           
   687 ;; *************** function _POS_CURSOR *****************
   688 ;; Defined at:
   689 ;;		line 5 in file "LCD.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  fila            1    wreg     unsigned char 
   692 ;;  columna         1   39[COMRAM] unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  fila            1   40[COMRAM] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   704 ;;      Params:         1       0       0       0       0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 10
   711 ;; This function calls:
   712 ;;		_ENVIA_LCD_CMD
   713 ;; This function is called by:
   714 ;;		_pantallazo
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text2
   719  000DB4                     __ptext2:
   720                           	callstack 0
   721  000DB4                     _POS_CURSOR:
   722                           	callstack 19
   723                           
   724                           ;incstack = 0
   725                           ;POS_CURSOR@fila stored from wreg
   726  000DB4  6E29               	movwf	POS_CURSOR@fila^0,c
   727  000DB6                     
   728                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   729  000DB6  0429               	decf	POS_CURSOR@fila^0,w,c
   730  000DB8  A4D8               	btfss	status,2,c
   731  000DBA  EFE1  F006         	goto	u391
   732  000DBE  EFE3  F006         	goto	u390
   733  000DC2                     u391:
   734  000DC2  EFE9  F006         	goto	l1662
   735  000DC6                     u390:
   736  000DC6                     
   737                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   738  000DC6  5028               	movf	POS_CURSOR@columna^0,w,c
   739  000DC8  0F80               	addlw	128
   740  000DCA  ECA2  F007         	call	_ENVIA_LCD_CMD
   741                           
   742                           ;LCD.c: 10:  }
   743  000DCE  EFF6  F006         	goto	l26
   744  000DD2                     l1662:
   745  000DD2  0E02               	movlw	2
   746  000DD4  1829               	xorwf	POS_CURSOR@fila^0,w,c
   747  000DD6  A4D8               	btfss	status,2,c
   748  000DD8  EFF0  F006         	goto	u401
   749  000DDC  EFF2  F006         	goto	u400
   750  000DE0                     u401:
   751  000DE0  EFF6  F006         	goto	l26
   752  000DE4                     u400:
   753  000DE4                     
   754                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   755  000DE4  5028               	movf	POS_CURSOR@columna^0,w,c
   756  000DE6  0FC0               	addlw	192
   757  000DE8  ECA2  F007         	call	_ENVIA_LCD_CMD
   758  000DEC                     l26:
   759  000DEC  0012               	return		;funcret
   760  000DEE                     __end_of_POS_CURSOR:
   761                           	callstack 0
   762                           
   763 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   764 ;; Defined at:
   765 ;;		line 69 in file "LCD.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  cadena          2   40[COMRAM] PTR const unsigned char 
   768 ;;		 -> STR_10(12), STR_3(10), STR_2(12), STR_1(10), 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  i               1   45[COMRAM] unsigned char 
   771 ;;  tam             1   44[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         2       0       0       0       0       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0       0       0       0       0
   784 ;;      Totals:         6       0       0       0       0       0       0       0       0
   785 ;;Total ram usage:        6 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 10
   788 ;; This function calls:
   789 ;;		_ENVIA_CHAR
   790 ;;		_strlen
   791 ;; This function is called by:
   792 ;;		_pantallazo
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text3
   797  000BFA                     __ptext3:
   798                           	callstack 0
   799  000BFA                     _ESCRIBE_MENSAJE2:
   800                           	callstack 19
   801  000BFA                     
   802                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   803  000BFA  C029  F025         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   804  000BFE  C02A  F026         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   805  000C02  ECF7  F006         	call	_strlen	;wreg free
   806  000C06  5025               	movf	?_strlen^0,w,c
   807  000C08  6E2D               	movwf	ESCRIBE_MENSAJE2@tam^0,c
   808  000C0A                     
   809                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   810  000C0A  0E00               	movlw	0
   811  000C0C  6E2E               	movwf	ESCRIBE_MENSAJE2@i^0,c
   812  000C0E  EF18  F006         	goto	l1676
   813  000C12                     l1672:
   814                           
   815                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   816  000C12  502E               	movf	ESCRIBE_MENSAJE2@i^0,w,c
   817  000C14  2429               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
   818  000C16  6E2B               	movwf	??_ESCRIBE_MENSAJE2^0,c
   819  000C18  0E00               	movlw	0
   820  000C1A  202A               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
   821  000C1C  6E2C               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
   822  000C1E  C02B  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   823  000C22  C02C  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   824  000C26                     	if	0	;tblptru may be non-zero
   825  000C26                     	endif
   826  000C26                     	if	0	;tblptru may be non-zero
   827  000C26                     	endif
   828  000C26  0008               	tblrd		*
   829  000C28  50F5               	movf	tablat,w,c
   830  000C2A  EC88  F007         	call	_ENVIA_CHAR
   831  000C2E                     
   832                           ;LCD.c: 77:  }
   833  000C2E  2A2E               	incf	ESCRIBE_MENSAJE2@i^0,f,c
   834  000C30                     l1676:
   835  000C30  502D               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
   836  000C32  5C2E               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
   837  000C34  A0D8               	btfss	status,0,c
   838  000C36  EF1F  F006         	goto	u411
   839  000C3A  EF21  F006         	goto	u410
   840  000C3E                     u411:
   841  000C3E  EF09  F006         	goto	l1672
   842  000C42                     u410:
   843  000C42  0012               	return		;funcret
   844  000C44                     __end_of_ESCRIBE_MENSAJE2:
   845                           	callstack 0
   846                           
   847 ;; *************** function _strlen *****************
   848 ;; Defined at:
   849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  s               2   36[COMRAM] PTR const unsigned char 
   852 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
   853 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
   854 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  a               2   38[COMRAM] PTR const unsigned char 
   857 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
   858 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
   859 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2   36[COMRAM] unsigned int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         2       0       0       0       0       0       0       0       0
   870 ;;      Locals:         2       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         4       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        4 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 8
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_ESCRIBE_MENSAJE2
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text4
   884  000DEE                     __ptext4:
   885                           	callstack 0
   886  000DEE                     _strlen:
   887                           	callstack 20
   888  000DEE  C025  F027         	movff	strlen@s,strlen@a
   889  000DF2  C026  F028         	movff	strlen@s+1,strlen@a+1
   890  000DF6  EFFF  F006         	goto	l1560
   891  000DFA                     l1558:
   892  000DFA  4A25               	infsnz	strlen@s^0,f,c
   893  000DFC  2A26               	incf	(strlen@s+1)^0,f,c
   894  000DFE                     l1560:
   895  000DFE  C025  FFF6         	movff	strlen@s,tblptrl
   896  000E02  C026  FFF7         	movff	strlen@s+1,tblptrh
   897  000E06                     	if	0	;tblptru may be non-zero
   898  000E06                     	endif
   899  000E06                     	if	0	;tblptru may be non-zero
   900  000E06                     	endif
   901  000E06  0008               	tblrd		*
   902  000E08  50F5               	movf	tablat,w,c
   903  000E0A  0900               	iorlw	0
   904  000E0C  A4D8               	btfss	status,2,c
   905  000E0E  EF0B  F007         	goto	u361
   906  000E12  EF0D  F007         	goto	u360
   907  000E16                     u361:
   908  000E16  EFFD  F006         	goto	l1558
   909  000E1A                     u360:
   910  000E1A  5027               	movf	strlen@a^0,w,c
   911  000E1C  5C25               	subwf	strlen@s^0,w,c
   912  000E1E  6E25               	movwf	?_strlen^0,c
   913  000E20  5028               	movf	(strlen@a+1)^0,w,c
   914  000E22  5826               	subwfb	(strlen@s+1)^0,w,c
   915  000E24  6E26               	movwf	(?_strlen+1)^0,c
   916  000E26  0012               	return		;funcret
   917  000E28                     __end_of_strlen:
   918                           	callstack 0
   919                           
   920 ;; *************** function _ENVIA_CHAR *****************
   921 ;; Defined at:
   922 ;;		line 80 in file "LCD.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  dato            1    wreg     unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  dato            1   37[COMRAM] unsigned char 
   927 ;;  aux             1   38[COMRAM] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         0       0       0       0       0       0       0       0       0
   938 ;;      Locals:         2       0       0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0
   940 ;;      Totals:         2       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 9
   944 ;; This function calls:
   945 ;;		_ENVIA_NIBBLE
   946 ;;		_LEER_LCD
   947 ;; This function is called by:
   948 ;;		_ESCRIBE_MENSAJE2
   949 ;;		_ESCRIBE_MENSAJE
   950 ;;		_GENERACARACTER
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text5
   955  000F10                     __ptext5:
   956                           	callstack 0
   957  000F10                     _ENVIA_CHAR:
   958                           	callstack 19
   959                           
   960                           ;incstack = 0
   961                           ;ENVIA_CHAR@dato stored from wreg
   962  000F10  6E26               	movwf	ENVIA_CHAR@dato^0,c
   963  000F12                     
   964                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
   965  000F12  808D               	bsf	141,0,c	;volatile
   966  000F14                     
   967                           ;LCD.c: 84:  LEER_LCD();
   968  000F14  ECFD  F004         	call	_LEER_LCD	;wreg free
   969  000F18                     
   970                           ;LCD.c: 85:  TRISD = 0x00;
   971  000F18  0E00               	movlw	0
   972  000F1A  6E95               	movwf	149,c	;volatile
   973  000F1C                     
   974                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   975  000F1C  0E21               	movlw	33
   976  000F1E                     u587:
   977  000F1E  2EE8               	decfsz	wreg,f,c
   978  000F20  D7FE               	bra	u587
   979  000F22  F000               	nop	
   980  000F24                     
   981                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
   982  000F24  928D               	bcf	141,1,c	;volatile
   983  000F26                     
   984                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
   985  000F26  948D               	bcf	141,2,c	;volatile
   986  000F28                     
   987                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
   988  000F28  808D               	bsf	141,0,c	;volatile
   989  000F2A                     
   990                           ;LCD.c: 90:  aux = dato & 0xF0;
   991  000F2A  5026               	movf	ENVIA_CHAR@dato^0,w,c
   992  000F2C  0BF0               	andlw	240
   993  000F2E  6E27               	movwf	ENVIA_CHAR@aux^0,c
   994  000F30                     
   995                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
   996  000F30  5027               	movf	ENVIA_CHAR@aux^0,w,c
   997  000F32  EC7A  F008         	call	_ENVIA_NIBBLE
   998  000F36                     
   999                           ;LCD.c: 92:  aux = dato << 4;
  1000  000F36  3826               	swapf	ENVIA_CHAR@dato^0,w,c
  1001  000F38  0BF0               	andlw	240
  1002  000F3A  6E27               	movwf	ENVIA_CHAR@aux^0,c
  1003  000F3C                     
  1004                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1005  000F3C  5027               	movf	ENVIA_CHAR@aux^0,w,c
  1006  000F3E  EC7A  F008         	call	_ENVIA_NIBBLE
  1007  000F42  0012               	return		;funcret
  1008  000F44                     __end_of_ENVIA_CHAR:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _configuro *****************
  1012 ;; Defined at:
  1013 ;;		line 7 in file "maincode3.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1027 ;;      Params:         0       0       0       0       0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 12
  1034 ;; This function calls:
  1035 ;;		_LCD_INIT
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text6
  1042  000B50                     __ptext6:
  1043                           	callstack 0
  1044  000B50                     _configuro:
  1045                           	callstack 18
  1046  000B50                     
  1047                           ;maincode3.c: 8:     OSCCON = 0x52;
  1048  000B50  0E52               	movlw	82
  1049  000B52  6ED3               	movwf	211,c	;volatile
  1050  000B54                     
  1051                           ;maincode3.c: 9:     TRISAbits.RA0 = 0;
  1052  000B54  9092               	bcf	146,0,c	;volatile
  1053  000B56                     
  1054                           ;maincode3.c: 10:     ANSELAbits.ANSA0 = 0;
  1055  000B56  010F               	movlb	15	; () banked
  1056  000B58  915B               	bcf	91,0,b	;volatile
  1057  000B5A                     
  1058                           ; BSR set to: 15
  1059                           ;maincode3.c: 11:     TRISBbits.RB1 = 1;
  1060  000B5A  8293               	bsf	147,1,c	;volatile
  1061  000B5C                     
  1062                           ; BSR set to: 15
  1063                           ;maincode3.c: 12:     ANSELBbits.ANSB1 = 0;
  1064  000B5C  935C               	bcf	92,1,b	;volatile
  1065  000B5E                     
  1066                           ; BSR set to: 15
  1067                           ;maincode3.c: 13:     TRISBbits.RB0 = 1;
  1068  000B5E  8093               	bsf	147,0,c	;volatile
  1069  000B60                     
  1070                           ; BSR set to: 15
  1071                           ;maincode3.c: 14:     ANSELBbits.ANSB0 = 0;
  1072  000B60  915C               	bcf	92,0,b	;volatile
  1073  000B62                     
  1074                           ; BSR set to: 15
  1075                           ;maincode3.c: 15:     INTCON2bits.RBPU = 0;
  1076  000B62  9EF1               	bcf	241,7,c	;volatile
  1077  000B64                     
  1078                           ; BSR set to: 15
  1079                           ;maincode3.c: 16:     WPUBbits.WPUB1 = 1;
  1080  000B64  8285               	bsf	133,1,c	;volatile
  1081  000B66                     
  1082                           ; BSR set to: 15
  1083                           ;maincode3.c: 17:     WPUBbits.WPUB0 = 1;
  1084  000B66  8085               	bsf	133,0,c	;volatile
  1085  000B68                     
  1086                           ; BSR set to: 15
  1087                           ;maincode3.c: 18:     TRISCbits.RC7 = 1;
  1088  000B68  8E94               	bsf	148,7,c	;volatile
  1089  000B6A                     
  1090                           ; BSR set to: 15
  1091                           ;maincode3.c: 19:     ANSELCbits.ANSC7 = 0;
  1092  000B6A  9F5D               	bcf	93,7,b	;volatile
  1093  000B6C                     
  1094                           ; BSR set to: 15
  1095                           ;maincode3.c: 20:     TRISCbits.RC6 = 0;
  1096  000B6C  9C94               	bcf	148,6,c	;volatile
  1097  000B6E                     
  1098                           ; BSR set to: 15
  1099                           ;maincode3.c: 21:     ANSELCbits.ANSC6 = 0;
  1100  000B6E  9D5D               	bcf	93,6,b	;volatile
  1101                           
  1102                           ;maincode3.c: 22:     TRISD = 0x0F;
  1103  000B70  0E0F               	movlw	15
  1104  000B72  6E95               	movwf	149,c	;volatile
  1105                           
  1106                           ;maincode3.c: 23:     ANSELD = 0x0F;
  1107  000B74  0E0F               	movlw	15
  1108  000B76  6F5E               	movwf	94,b	;volatile
  1109                           
  1110                           ;maincode3.c: 24:     TRISE = 0xF8;
  1111  000B78  0EF8               	movlw	248
  1112  000B7A  6E96               	movwf	150,c	;volatile
  1113                           
  1114                           ;maincode3.c: 25:     ANSELE = 0xF8;
  1115  000B7C  0EF8               	movlw	248
  1116  000B7E  6F5F               	movwf	95,b	;volatile
  1117  000B80                     
  1118                           ; BSR set to: 15
  1119                           ;maincode3.c: 26:     INTCON2bits.INTEDG1 = 0;
  1120  000B80  9AF1               	bcf	241,5,c	;volatile
  1121  000B82                     
  1122                           ; BSR set to: 15
  1123                           ;maincode3.c: 27:     INTCON2bits.INTEDG0 = 0;
  1124  000B82  9CF1               	bcf	241,6,c	;volatile
  1125  000B84                     
  1126                           ; BSR set to: 15
  1127                           ;maincode3.c: 28:     RCONbits.IPEN = 1;
  1128  000B84  8ED0               	bsf	208,7,c	;volatile
  1129  000B86                     
  1130                           ; BSR set to: 15
  1131                           ;maincode3.c: 29:     INTCONbits.GIEH = 1;
  1132  000B86  8EF2               	bsf	242,7,c	;volatile
  1133  000B88                     
  1134                           ; BSR set to: 15
  1135                           ;maincode3.c: 30:     INTCONbits.GIEL = 1;
  1136  000B88  8CF2               	bsf	242,6,c	;volatile
  1137  000B8A                     
  1138                           ; BSR set to: 15
  1139                           ;maincode3.c: 31:     INTCONbits.INT0IE = 1;
  1140  000B8A  88F2               	bsf	242,4,c	;volatile
  1141  000B8C                     
  1142                           ; BSR set to: 15
  1143                           ;maincode3.c: 32:     INTCON3bits.INT1IE = 1;
  1144  000B8C  86F0               	bsf	240,3,c	;volatile
  1145  000B8E                     
  1146                           ; BSR set to: 15
  1147                           ;maincode3.c: 33:     INTCON3bits.INT1IP = 0;
  1148  000B8E  9CF0               	bcf	240,6,c	;volatile
  1149                           
  1150                           ;maincode3.c: 34:     SPBRGH1 = 0;
  1151  000B90  0E00               	movlw	0
  1152  000B92  6EB0               	movwf	176,c	;volatile
  1153                           
  1154                           ;maincode3.c: 35:     SPBRG1 = 25;
  1155  000B94  0E19               	movlw	25
  1156  000B96  6EAF               	movwf	175,c	;volatile
  1157  000B98                     
  1158                           ; BSR set to: 15
  1159                           ;maincode3.c: 36:     TXSTA1bits.BRGH = 1;
  1160  000B98  84AC               	bsf	172,2,c	;volatile
  1161  000B9A                     
  1162                           ; BSR set to: 15
  1163                           ;maincode3.c: 37:     TXSTA1bits.TXEN = 1;
  1164  000B9A  8AAC               	bsf	172,5,c	;volatile
  1165  000B9C                     
  1166                           ; BSR set to: 15
  1167                           ;maincode3.c: 38:     RCSTA1bits.CREN = 1;
  1168  000B9C  88AB               	bsf	171,4,c	;volatile
  1169  000B9E                     
  1170                           ; BSR set to: 15
  1171                           ;maincode3.c: 39:     RCSTA1bits.SPEN = 1;
  1172  000B9E  8EAB               	bsf	171,7,c	;volatile
  1173  000BA0                     
  1174                           ; BSR set to: 15
  1175                           ;maincode3.c: 40:     PIE1bits.RC1IE = 1;
  1176  000BA0  8A9D               	bsf	157,5,c	;volatile
  1177  000BA2                     
  1178                           ; BSR set to: 15
  1179                           ;maincode3.c: 41:     LCD_INIT();
  1180  000BA2  EC24  F008         	call	_LCD_INIT	;wreg free
  1181  000BA6  0012               	return		;funcret
  1182  000BA8                     __end_of_configuro:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _LCD_INIT *****************
  1186 ;; Defined at:
  1187 ;;		line 184 in file "LCD.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:         0       0       0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 11
  1208 ;; This function calls:
  1209 ;;		_BORRAR_LCD
  1210 ;;		_CURSOR_HOME
  1211 ;;		_CURSOR_ONOFF
  1212 ;;		_LCD_CONFIG
  1213 ;; This function is called by:
  1214 ;;		_configuro
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text7
  1219  001048                     __ptext7:
  1220                           	callstack 0
  1221  001048                     _LCD_INIT:
  1222                           	callstack 18
  1223  001048                     
  1224                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1225  001048  0E14               	movlw	20
  1226  00104A  6E29               	movwf	??_LCD_INIT^0,c
  1227  00104C  0E7A               	movlw	122
  1228  00104E                     u597:
  1229  00104E  2EE8               	decfsz	wreg,f,c
  1230  001050  D7FE               	bra	u597
  1231  001052  2E29               	decfsz	??_LCD_INIT^0,f,c
  1232  001054  D7FC               	bra	u597
  1233  001056                     
  1234                           ;LCD.c: 186:     LCD_CONFIG();
  1235  001056  ECD4  F005         	call	_LCD_CONFIG	;wreg free
  1236  00105A                     
  1237                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1238  00105A  0E14               	movlw	20
  1239  00105C  6E29               	movwf	??_LCD_INIT^0,c
  1240  00105E  0E7A               	movlw	122
  1241  001060                     u607:
  1242  001060  2EE8               	decfsz	wreg,f,c
  1243  001062  D7FE               	bra	u607
  1244  001064  2E29               	decfsz	??_LCD_INIT^0,f,c
  1245  001066  D7FC               	bra	u607
  1246                           
  1247                           ;LCD.c: 188:     BORRAR_LCD();
  1248  001068  ECCD  F008         	call	_BORRAR_LCD	;wreg free
  1249                           
  1250                           ;LCD.c: 189:     CURSOR_HOME();
  1251  00106C  ECC9  F008         	call	_CURSOR_HOME	;wreg free
  1252                           
  1253                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1254  001070  0E01               	movlw	1
  1255  001072  EC3C  F008         	call	_CURSOR_ONOFF
  1256  001076  0012               	return		;funcret
  1257  001078                     __end_of_LCD_INIT:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _LCD_CONFIG *****************
  1261 ;; Defined at:
  1262 ;;		line 101 in file "LCD.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        1 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 10
  1283 ;; This function calls:
  1284 ;;		_ENVIA_LCD_CMD
  1285 ;;		_ENVIA_NIBBLE
  1286 ;; This function is called by:
  1287 ;;		_LCD_INIT
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text8
  1292  000BA8                     __ptext8:
  1293                           	callstack 0
  1294  000BA8                     _LCD_CONFIG:
  1295                           	callstack 18
  1296  000BA8                     
  1297                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
  1298  000BA8  908D               	bcf	141,0,c	;volatile
  1299                           
  1300                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
  1301  000BAA  928D               	bcf	141,1,c	;volatile
  1302  000BAC                     
  1303                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1304  000BAC  0E30               	movlw	48
  1305  000BAE  EC7A  F008         	call	_ENVIA_NIBBLE
  1306  000BB2                     
  1307                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1308  000BB2  0E03               	movlw	3
  1309  000BB4  6E28               	movwf	??_LCD_CONFIG^0,c
  1310  000BB6  0E98               	movlw	152
  1311  000BB8                     u617:
  1312  000BB8  2EE8               	decfsz	wreg,f,c
  1313  000BBA  D7FE               	bra	u617
  1314  000BBC  2E28               	decfsz	??_LCD_CONFIG^0,f,c
  1315  000BBE  D7FC               	bra	u617
  1316  000BC0                     
  1317                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1318  000BC0  0E30               	movlw	48
  1319  000BC2  EC7A  F008         	call	_ENVIA_NIBBLE
  1320                           
  1321                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1322  000BC6  0E21               	movlw	33
  1323  000BC8                     u627:
  1324  000BC8  2EE8               	decfsz	wreg,f,c
  1325  000BCA  D7FE               	bra	u627
  1326  000BCC  F000               	nop	
  1327  000BCE                     
  1328                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1329  000BCE  0E30               	movlw	48
  1330  000BD0  EC7A  F008         	call	_ENVIA_NIBBLE
  1331  000BD4                     
  1332                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1333  000BD4  0E20               	movlw	32
  1334  000BD6  EC7A  F008         	call	_ENVIA_NIBBLE
  1335  000BDA                     
  1336                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1337  000BDA  0E01               	movlw	1
  1338  000BDC  ECA2  F007         	call	_ENVIA_LCD_CMD
  1339  000BE0                     
  1340                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1341  000BE0  0E28               	movlw	40
  1342  000BE2  ECA2  F007         	call	_ENVIA_LCD_CMD
  1343  000BE6                     
  1344                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1345  000BE6  0E0F               	movlw	15
  1346  000BE8  ECA2  F007         	call	_ENVIA_LCD_CMD
  1347  000BEC                     
  1348                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1349  000BEC  0E06               	movlw	6
  1350  000BEE  ECA2  F007         	call	_ENVIA_LCD_CMD
  1351  000BF2                     
  1352                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1353  000BF2  0E01               	movlw	1
  1354  000BF4  ECA2  F007         	call	_ENVIA_LCD_CMD
  1355  000BF8  0012               	return		;funcret
  1356  000BFA                     __end_of_LCD_CONFIG:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _CURSOR_ONOFF *****************
  1360 ;; Defined at:
  1361 ;;		line 54 in file "LCD.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  estado          1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  estado          1   39[COMRAM] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0
  1376 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1378 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1379 ;;Total ram usage:        1 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 10
  1382 ;; This function calls:
  1383 ;;		_ENVIA_LCD_CMD
  1384 ;; This function is called by:
  1385 ;;		_LCD_INIT
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text9
  1390  001078                     __ptext9:
  1391                           	callstack 0
  1392  001078                     _CURSOR_ONOFF:
  1393                           	callstack 18
  1394                           
  1395                           ;incstack = 0
  1396                           ;CURSOR_ONOFF@estado stored from wreg
  1397  001078  6E28               	movwf	CURSOR_ONOFF@estado^0,c
  1398  00107A                     
  1399                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1400  00107A  5028               	movf	CURSOR_ONOFF@estado^0,w,c
  1401  00107C  A4D8               	btfss	status,2,c
  1402  00107E  EF43  F008         	goto	u21
  1403  001082  EF45  F008         	goto	u20
  1404  001086                     u21:
  1405  001086  EF48  F008         	goto	l976
  1406  00108A                     u20:
  1407  00108A  0E0E               	movlw	14
  1408  00108C  ECA2  F007         	call	_ENVIA_LCD_CMD
  1409  001090                     l976:
  1410                           
  1411                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1412  001090  0428               	decf	CURSOR_ONOFF@estado^0,w,c
  1413  001092  A4D8               	btfss	status,2,c
  1414  001094  EF4E  F008         	goto	u31
  1415  001098  EF50  F008         	goto	u30
  1416  00109C                     u31:
  1417  00109C  EF53  F008         	goto	l56
  1418  0010A0                     u30:
  1419  0010A0  0E0C               	movlw	12
  1420  0010A2  ECA2  F007         	call	_ENVIA_LCD_CMD
  1421  0010A6                     l56:
  1422  0010A6  0012               	return		;funcret
  1423  0010A8                     __end_of_CURSOR_ONOFF:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _CURSOR_HOME *****************
  1427 ;; Defined at:
  1428 ;;		line 29 in file "LCD.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 10
  1449 ;; This function calls:
  1450 ;;		_ENVIA_LCD_CMD
  1451 ;; This function is called by:
  1452 ;;		_LCD_INIT
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text10
  1457  001192                     __ptext10:
  1458                           	callstack 0
  1459  001192                     _CURSOR_HOME:
  1460                           	callstack 18
  1461  001192                     
  1462                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1463  001192  0E02               	movlw	2
  1464  001194  ECA2  F007         	call	_ENVIA_LCD_CMD
  1465  001198  0012               	return		;funcret
  1466  00119A                     __end_of_CURSOR_HOME:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _BORRAR_LCD *****************
  1470 ;; Defined at:
  1471 ;;		line 96 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 10
  1492 ;; This function calls:
  1493 ;;		_ENVIA_LCD_CMD
  1494 ;; This function is called by:
  1495 ;;		_LCD_INIT
  1496 ;;		_pantallazo
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text11
  1501  00119A                     __ptext11:
  1502                           	callstack 0
  1503  00119A                     _BORRAR_LCD:
  1504                           	callstack 19
  1505  00119A                     
  1506                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1507  00119A  0E01               	movlw	1
  1508  00119C  ECA2  F007         	call	_ENVIA_LCD_CMD
  1509  0011A0  0012               	return		;funcret
  1510  0011A2                     __end_of_BORRAR_LCD:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _ENVIA_LCD_CMD *****************
  1514 ;; Defined at:
  1515 ;;		line 128 in file "LCD.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  dato            1    wreg     unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  dato            1   37[COMRAM] unsigned char 
  1520 ;;  aux             1   38[COMRAM] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1533 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1534 ;;Total ram usage:        2 bytes
  1535 ;; Hardware stack levels used: 1
  1536 ;; Hardware stack levels required when called: 9
  1537 ;; This function calls:
  1538 ;;		_ENVIA_NIBBLE
  1539 ;;		_LEER_LCD
  1540 ;; This function is called by:
  1541 ;;		_POS_CURSOR
  1542 ;;		_CURSOR_HOME
  1543 ;;		_CURSOR_ONOFF
  1544 ;;		_BORRAR_LCD
  1545 ;;		_LCD_CONFIG
  1546 ;;		_BLINK_CURSOR
  1547 ;;		_DISPLAY_ONOFF
  1548 ;;		_CURSOR_SHIFTLEFT
  1549 ;;		_CURSOR_SHIFTRIGHT
  1550 ;;		_DISPLAY_SHIFTLEFT
  1551 ;;		_DISPLAY_SHIFTRIGHT
  1552 ;;		_GENERACARACTER
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text12
  1557  000F44                     __ptext12:
  1558                           	callstack 0
  1559  000F44                     _ENVIA_LCD_CMD:
  1560                           	callstack 19
  1561                           
  1562                           ;incstack = 0
  1563                           ;ENVIA_LCD_CMD@dato stored from wreg
  1564  000F44  6E26               	movwf	ENVIA_LCD_CMD@dato^0,c
  1565  000F46                     
  1566                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1567  000F46  908D               	bcf	141,0,c	;volatile
  1568  000F48                     
  1569                           ;LCD.c: 132:  LEER_LCD();
  1570  000F48  ECFD  F004         	call	_LEER_LCD	;wreg free
  1571  000F4C                     
  1572                           ;LCD.c: 133:  TRISD = 0b00000000;
  1573  000F4C  0E00               	movlw	0
  1574  000F4E  6E95               	movwf	149,c	;volatile
  1575  000F50                     
  1576                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1577  000F50  0E21               	movlw	33
  1578  000F52                     u637:
  1579  000F52  2EE8               	decfsz	wreg,f,c
  1580  000F54  D7FE               	bra	u637
  1581  000F56  F000               	nop	
  1582  000F58                     
  1583                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1584  000F58  928D               	bcf	141,1,c	;volatile
  1585  000F5A                     
  1586                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1587  000F5A  948D               	bcf	141,2,c	;volatile
  1588  000F5C                     
  1589                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1590  000F5C  908D               	bcf	141,0,c	;volatile
  1591  000F5E                     
  1592                           ;LCD.c: 138:  aux = dato & 0xF0;
  1593  000F5E  5026               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1594  000F60  0BF0               	andlw	240
  1595  000F62  6E27               	movwf	ENVIA_LCD_CMD@aux^0,c
  1596  000F64                     
  1597                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1598  000F64  5027               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1599  000F66  EC7A  F008         	call	_ENVIA_NIBBLE
  1600  000F6A                     
  1601                           ;LCD.c: 140:  aux = dato<<4;
  1602  000F6A  3826               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1603  000F6C  0BF0               	andlw	240
  1604  000F6E  6E27               	movwf	ENVIA_LCD_CMD@aux^0,c
  1605  000F70                     
  1606                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1607  000F70  5027               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1608  000F72  EC7A  F008         	call	_ENVIA_NIBBLE
  1609  000F76  0012               	return		;funcret
  1610  000F78                     __end_of_ENVIA_LCD_CMD:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _LEER_LCD *****************
  1614 ;; Defined at:
  1615 ;;		line 144 in file "LCD.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  aux             1   36[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1632 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 8
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_ENVIA_CHAR
  1640 ;;		_ENVIA_LCD_CMD
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text13
  1645  0009FA                     __ptext13:
  1646                           	callstack 0
  1647  0009FA                     _LEER_LCD:
  1648                           	callstack 19
  1649  0009FA                     
  1650                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1651  0009FA  0EF8               	movlw	248
  1652  0009FC  6E95               	movwf	149,c	;volatile
  1653  0009FE                     
  1654                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1655  0009FE  908D               	bcf	141,0,c	;volatile
  1656  000A00                     
  1657                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1658  000A00  828D               	bsf	141,1,c	;volatile
  1659  000A02                     
  1660                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1661  000A02  848D               	bsf	141,2,c	;volatile
  1662  000A04                     
  1663                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1664  000A04  0E21               	movlw	33
  1665  000A06                     u647:
  1666  000A06  2EE8               	decfsz	wreg,f,c
  1667  000A08  D7FE               	bra	u647
  1668  000A0A  F000               	nop	
  1669  000A0C                     
  1670                           ;LCD.c: 152:  aux = PORTD;
  1671  000A0C  CF83 F025          	movff	3971,LEER_LCD@aux	;volatile
  1672  000A10                     
  1673                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1674  000A10  948D               	bcf	141,2,c	;volatile
  1675  000A12                     
  1676                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1677  000A12  0E21               	movlw	33
  1678  000A14                     u657:
  1679  000A14  2EE8               	decfsz	wreg,f,c
  1680  000A16  D7FE               	bra	u657
  1681  000A18  F000               	nop	
  1682  000A1A                     
  1683                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1684  000A1A  848D               	bsf	141,2,c	;volatile
  1685  000A1C                     
  1686                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1687  000A1C  0E21               	movlw	33
  1688  000A1E                     u667:
  1689  000A1E  2EE8               	decfsz	wreg,f,c
  1690  000A20  D7FE               	bra	u667
  1691  000A22  F000               	nop	
  1692  000A24                     
  1693                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1694  000A24  948D               	bcf	141,2,c	;volatile
  1695  000A26                     l924:
  1696                           
  1697                           ;LCD.c: 158:  aux = aux & 0x80;
  1698  000A26  5025               	movf	LEER_LCD@aux^0,w,c
  1699  000A28  0B80               	andlw	128
  1700  000A2A  6E25               	movwf	LEER_LCD@aux^0,c
  1701                           
  1702                           ;LCD.c: 159:  while(aux == 0x80)
  1703  000A2C  EF2C  F005         	goto	l938
  1704  000A30                     l87:
  1705                           
  1706                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1707  000A30  848D               	bsf	141,2,c	;volatile
  1708  000A32                     
  1709                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1710  000A32  0E21               	movlw	33
  1711  000A34                     u677:
  1712  000A34  2EE8               	decfsz	wreg,f,c
  1713  000A36  D7FE               	bra	u677
  1714  000A38  F000               	nop	
  1715  000A3A                     
  1716                           ;LCD.c: 163:             aux = PORTD;
  1717  000A3A  CF83 F025          	movff	3971,LEER_LCD@aux	;volatile
  1718  000A3E                     
  1719                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1720  000A3E  948D               	bcf	141,2,c	;volatile
  1721                           
  1722                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1723  000A40  0E21               	movlw	33
  1724  000A42                     u687:
  1725  000A42  2EE8               	decfsz	wreg,f,c
  1726  000A44  D7FE               	bra	u687
  1727  000A46  F000               	nop	
  1728  000A48                     
  1729                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1730  000A48  848D               	bsf	141,2,c	;volatile
  1731                           
  1732                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1733  000A4A  0E21               	movlw	33
  1734  000A4C                     u697:
  1735  000A4C  2EE8               	decfsz	wreg,f,c
  1736  000A4E  D7FE               	bra	u697
  1737  000A50  F000               	nop	
  1738  000A52                     
  1739                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1740  000A52  948D               	bcf	141,2,c	;volatile
  1741  000A54  EF13  F005         	goto	l924
  1742  000A58                     l938:
  1743                           
  1744                           ;LCD.c: 159:  while(aux == 0x80)
  1745  000A58  0E80               	movlw	128
  1746  000A5A  1825               	xorwf	LEER_LCD@aux^0,w,c
  1747  000A5C  B4D8               	btfsc	status,2,c
  1748  000A5E  EF33  F005         	goto	u11
  1749  000A62  EF35  F005         	goto	u10
  1750  000A66                     u11:
  1751  000A66  EF18  F005         	goto	l87
  1752  000A6A                     u10:
  1753  000A6A  0012               	return		;funcret
  1754  000A6C                     __end_of_LEER_LCD:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _ENVIA_NIBBLE *****************
  1758 ;; Defined at:
  1759 ;;		line 118 in file "LCD.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  dato            1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  dato            1   36[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0
  1774 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1776 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 8
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_ENVIA_CHAR
  1784 ;;		_LCD_CONFIG
  1785 ;;		_ENVIA_LCD_CMD
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text14
  1790  0010F4                     __ptext14:
  1791                           	callstack 0
  1792  0010F4                     _ENVIA_NIBBLE:
  1793                           	callstack 19
  1794                           
  1795                           ;incstack = 0
  1796                           ;ENVIA_NIBBLE@dato stored from wreg
  1797  0010F4  6E25               	movwf	ENVIA_NIBBLE@dato^0,c
  1798  0010F6                     
  1799                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1800  0010F6  0E0F               	movlw	15
  1801  0010F8  168C               	andwf	140,f,c	;volatile
  1802                           
  1803                           ;LCD.c: 121:  dato &= 0xF0;
  1804  0010FA  0EF0               	movlw	240
  1805  0010FC  1625               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1806                           
  1807                           ;LCD.c: 122:  LATD|= dato;
  1808  0010FE  5025               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1809  001100  128C               	iorwf	140,f,c	;volatile
  1810  001102                     
  1811                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  1812  001102  848D               	bsf	141,2,c	;volatile
  1813  001104                     
  1814                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1815  001104  0E21               	movlw	33
  1816  001106                     u707:
  1817  001106  2EE8               	decfsz	wreg,f,c
  1818  001108  D7FE               	bra	u707
  1819  00110A  F000               	nop	
  1820  00110C                     
  1821                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  1822  00110C  948D               	bcf	141,2,c	;volatile
  1823  00110E  0012               	return		;funcret
  1824  001110                     __end_of_ENVIA_NIBBLE:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _INT1_ISR *****************
  1828 ;; Defined at:
  1829 ;;		line 124 in file "maincode3.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  x_var           1   35[COMRAM] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0
  1844 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1845 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1846 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1847 ;;Total ram usage:        9 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 7
  1850 ;; This function calls:
  1851 ;;		_EUSART_Newline
  1852 ;;		_EUSART_Stringsend
  1853 ;;		i1_BORRAR_LCD
  1854 ;;		i1_ENVIA_CHAR
  1855 ;;		i1_ESCRIBE_MENSAJE2
  1856 ;;		i1_POS_CURSOR
  1857 ;; This function is called by:
  1858 ;;		Interrupt level 1
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	intcodelo
  1863  000018                     __pintcodelo:
  1864                           	callstack 0
  1865  000018                     _INT1_ISR:
  1866                           	callstack 18
  1867                           
  1868                           ;incstack = 0
  1869  000018  8031               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1870  00001A  CFD8 F01D          	movff	status,??_INT1_ISR+1
  1871  00001E  CFE8 F01E          	movff	wreg,??_INT1_ISR+2
  1872  000022  CFE0 F01F          	movff	bsr,??_INT1_ISR+3
  1873  000026  CFF6 F020          	movff	tblptrl,??_INT1_ISR+4
  1874  00002A  CFF7 F021          	movff	tblptrh,??_INT1_ISR+5
  1875  00002E  CFF8 F022          	movff	tblptru,??_INT1_ISR+6
  1876  000032  CFF5 F023          	movff	tablat,??_INT1_ISR+7
  1877  000036                     
  1878                           ;maincode3.c: 125:     INTCON3bits.INT1IF = 0;
  1879  000036  90F0               	bcf	240,0,c	;volatile
  1880  000038                     
  1881                           ;maincode3.c: 126:     POS_CURSOR(1,0);
  1882  000038  0E00               	movlw	0
  1883  00003A  6E15               	movwf	i1POS_CURSOR@columna^0,c
  1884  00003C  0E01               	movlw	1
  1885  00003E  EC14  F007         	call	i1_POS_CURSOR
  1886  000042                     
  1887                           ;maincode3.c: 127:     ESCRIBE_MENSAJE2("Servo a 180");
  1888  000042  0E90               	movlw	low STR_10
  1889  000044  6E16               	movwf	i1ESCRIBE_MENSAJE2@cadena^0,c
  1890  000046  0E08               	movlw	high STR_10
  1891  000048  6E17               	movwf	(i1ESCRIBE_MENSAJE2@cadena+1)^0,c
  1892  00004A  EC22  F006         	call	i1_ESCRIBE_MENSAJE2	;wreg free
  1893  00004E                     
  1894                           ;maincode3.c: 128:     ENVIA_CHAR(0xDF);
  1895  00004E  0EDF               	movlw	223
  1896  000050  ECBC  F007         	call	i1_ENVIA_CHAR
  1897                           
  1898                           ;maincode3.c: 129:     EUSART_Stringsend("moviendo servo a 180 grados");
  1899  000054  0E01               	movlw	low STR_11
  1900  000056  6E16               	movwf	EUSART_Stringsend@cadena^0,c
  1901  000058  0E08               	movlw	high STR_11
  1902  00005A  6E17               	movwf	(EUSART_Stringsend@cadena+1)^0,c
  1903  00005C  EC47  F006         	call	_EUSART_Stringsend	;wreg free
  1904  000060                     
  1905                           ;maincode3.c: 130:     EUSART_Newline();
  1906  000060  EC54  F008         	call	_EUSART_Newline	;wreg free
  1907  000064                     
  1908                           ;maincode3.c: 131:     unsigned char x_var;;maincode3.c: 132:     for(x_var=0;x_var<50;x
      +                          _var++){
  1909  000064  0E00               	movlw	0
  1910  000066  6E24               	movwf	INT1_ISR@x_var^0,c
  1911  000068                     i1l218:
  1912                           
  1913                           ;maincode3.c: 133:         LATAbits.LA0 = 1;
  1914  000068  8089               	bsf	137,0,c	;volatile
  1915  00006A                     
  1916                           ;maincode3.c: 134:         _delay((unsigned long)((2300)*(4000000UL/4000000.0)));
  1917  00006A  0E03               	movlw	3
  1918  00006C  6E1C               	movwf	??_INT1_ISR^0,c
  1919  00006E  0EFC               	movlw	252
  1920  000070                     i1u71_27:
  1921  000070  2EE8               	decfsz	wreg,f,c
  1922  000072  D7FE               	bra	i1u71_27
  1923  000074  2E1C               	decfsz	??_INT1_ISR^0,f,c
  1924  000076  D7FC               	bra	i1u71_27
  1925  000078                     
  1926                           ;maincode3.c: 135:         LATAbits.LA0 = 0;
  1927  000078  9089               	bcf	137,0,c	;volatile
  1928                           
  1929                           ;maincode3.c: 136:         _delay((unsigned long)((17700)*(4000000UL/4000000.0)));
  1930  00007A  0E17               	movlw	23
  1931  00007C  6E1C               	movwf	??_INT1_ISR^0,c
  1932  00007E  0EFC               	movlw	252
  1933  000080                     i1u72_27:
  1934  000080  2EE8               	decfsz	wreg,f,c
  1935  000082  D7FE               	bra	i1u72_27
  1936  000084  2E1C               	decfsz	??_INT1_ISR^0,f,c
  1937  000086  D7FC               	bra	i1u72_27
  1938  000088                     
  1939                           ;maincode3.c: 137:     }
  1940  000088  2A24               	incf	INT1_ISR@x_var^0,f,c
  1941  00008A  0E31               	movlw	49
  1942  00008C  6424               	cpfsgt	INT1_ISR@x_var^0,c
  1943  00008E  EF4B  F000         	goto	i1u56_21
  1944  000092  EF4D  F000         	goto	i1u56_20
  1945  000096                     i1u56_21:
  1946  000096  EF34  F000         	goto	i1l218
  1947  00009A                     i1u56_20:
  1948  00009A                     
  1949                           ;maincode3.c: 138:     BORRAR_LCD();
  1950  00009A  ECD1  F008         	call	i1_BORRAR_LCD	;wreg free
  1951  00009E  C023  FFF5         	movff	??_INT1_ISR+7,tablat
  1952  0000A2  C022  FFF8         	movff	??_INT1_ISR+6,tblptru
  1953  0000A6  C021  FFF7         	movff	??_INT1_ISR+5,tblptrh
  1954  0000AA  C020  FFF6         	movff	??_INT1_ISR+4,tblptrl
  1955  0000AE  C01F  FFE0         	movff	??_INT1_ISR+3,bsr
  1956  0000B2  C01E  FFE8         	movff	??_INT1_ISR+2,wreg
  1957  0000B6  C01D  FFD8         	movff	??_INT1_ISR+1,status
  1958  0000BA  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1959  0000BC  0010               	retfie	
  1960  0000BE                     __end_of_INT1_ISR:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function i1_POS_CURSOR *****************
  1964 ;; Defined at:
  1965 ;;		line 5 in file "LCD.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  fila            1    wreg     unsigned char 
  1968 ;;  columna         1   20[COMRAM] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  fila            1   21[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1980 ;;      Params:         1       0       0       0       0       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1983 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 6
  1987 ;; This function calls:
  1988 ;;		i1_ENVIA_LCD_CMD
  1989 ;; This function is called by:
  1990 ;;		_INT1_ISR
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text16
  1995  000E28                     __ptext16:
  1996                           	callstack 0
  1997  000E28                     i1_POS_CURSOR:
  1998                           	callstack 18
  1999                           
  2000                           ;incstack = 0
  2001                           ;i1POS_CURSOR@fila stored from wreg
  2002  000E28  6E16               	movwf	i1POS_CURSOR@fila^0,c
  2003  000E2A                     
  2004                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2005  000E2A  0416               	decf	i1POS_CURSOR@fila^0,w,c
  2006  000E2C  A4D8               	btfss	status,2,c
  2007  000E2E  EF1B  F007         	goto	i1u46_21
  2008  000E32  EF1D  F007         	goto	i1u46_20
  2009  000E36                     i1u46_21:
  2010  000E36  EF23  F007         	goto	i1l1812
  2011  000E3A                     i1u46_20:
  2012  000E3A                     
  2013                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2014  000E3A  5015               	movf	i1POS_CURSOR@columna^0,w,c
  2015  000E3C  0F80               	addlw	128
  2016  000E3E  ECD6  F007         	call	i1_ENVIA_LCD_CMD
  2017                           
  2018                           ;LCD.c: 10:  }
  2019  000E42  EF30  F007         	goto	i1l26
  2020  000E46                     i1l1812:
  2021  000E46  0E02               	movlw	2
  2022  000E48  1816               	xorwf	i1POS_CURSOR@fila^0,w,c
  2023  000E4A  A4D8               	btfss	status,2,c
  2024  000E4C  EF2A  F007         	goto	i1u47_21
  2025  000E50  EF2C  F007         	goto	i1u47_20
  2026  000E54                     i1u47_21:
  2027  000E54  EF30  F007         	goto	i1l26
  2028  000E58                     i1u47_20:
  2029  000E58                     
  2030                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2031  000E58  5015               	movf	i1POS_CURSOR@columna^0,w,c
  2032  000E5A  0FC0               	addlw	192
  2033  000E5C  ECD6  F007         	call	i1_ENVIA_LCD_CMD
  2034  000E60                     i1l26:
  2035  000E60  0012               	return		;funcret
  2036  000E62                     __end_ofi1_POS_CURSOR:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function i1_ESCRIBE_MENSAJE2 *****************
  2040 ;; Defined at:
  2041 ;;		line 69 in file "LCD.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  cadena          2   21[COMRAM] PTR const unsigned char 
  2044 ;;		 -> STR_10(12), STR_3(10), STR_2(12), STR_1(10), 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  i               1   26[COMRAM] unsigned char 
  2047 ;;  tam             1   25[COMRAM] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2057 ;;      Params:         2       0       0       0       0       0       0       0       0
  2058 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2059 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2060 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2061 ;;Total ram usage:        6 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 6
  2064 ;; This function calls:
  2065 ;;		i1_ENVIA_CHAR
  2066 ;;		i1_strlen
  2067 ;; This function is called by:
  2068 ;;		_INT1_ISR
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text17
  2073  000C44                     __ptext17:
  2074                           	callstack 0
  2075  000C44                     i1_ESCRIBE_MENSAJE2:
  2076                           	callstack 18
  2077  000C44                     
  2078                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2079  000C44  C016  F012         	movff	i1ESCRIBE_MENSAJE2@cadena,i1strlen@s
  2080  000C48  C017  F013         	movff	i1ESCRIBE_MENSAJE2@cadena+1,i1strlen@s+1
  2081  000C4C  EC31  F007         	call	i1_strlen	;wreg free
  2082  000C50  5012               	movf	?i1_strlen^0,w,c
  2083  000C52  6E1A               	movwf	i1ESCRIBE_MENSAJE2@tam^0,c
  2084  000C54                     
  2085                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2086  000C54  0E00               	movlw	0
  2087  000C56  6E1B               	movwf	i1ESCRIBE_MENSAJE2@i^0,c
  2088  000C58  EF3D  F006         	goto	i1l1834
  2089  000C5C                     i1l1830:
  2090                           
  2091                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2092  000C5C  501B               	movf	i1ESCRIBE_MENSAJE2@i^0,w,c
  2093  000C5E  2416               	addwf	i1ESCRIBE_MENSAJE2@cadena^0,w,c
  2094  000C60  6E18               	movwf	??i1_ESCRIBE_MENSAJE2^0,c
  2095  000C62  0E00               	movlw	0
  2096  000C64  2017               	addwfc	(i1ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  2097  000C66  6E19               	movwf	(??i1_ESCRIBE_MENSAJE2+1)^0,c
  2098  000C68  C018  FFF6         	movff	??i1_ESCRIBE_MENSAJE2,tblptrl
  2099  000C6C  C019  FFF7         	movff	??i1_ESCRIBE_MENSAJE2+1,tblptrh
  2100  000C70                     	if	0	;tblptru may be non-zero
  2101  000C70                     	endif
  2102  000C70                     	if	0	;tblptru may be non-zero
  2103  000C70                     	endif
  2104  000C70  0008               	tblrd		*
  2105  000C72  50F5               	movf	tablat,w,c
  2106  000C74  ECBC  F007         	call	i1_ENVIA_CHAR
  2107  000C78                     
  2108                           ;LCD.c: 77:  }
  2109  000C78  2A1B               	incf	i1ESCRIBE_MENSAJE2@i^0,f,c
  2110  000C7A                     i1l1834:
  2111  000C7A  501A               	movf	i1ESCRIBE_MENSAJE2@tam^0,w,c
  2112  000C7C  5C1B               	subwf	i1ESCRIBE_MENSAJE2@i^0,w,c
  2113  000C7E  A0D8               	btfss	status,0,c
  2114  000C80  EF44  F006         	goto	i1u50_21
  2115  000C84  EF46  F006         	goto	i1u50_20
  2116  000C88                     i1u50_21:
  2117  000C88  EF2E  F006         	goto	i1l1830
  2118  000C8C                     i1u50_20:
  2119  000C8C  0012               	return		;funcret
  2120  000C8E                     __end_ofi1_ESCRIBE_MENSAJE2:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function i1_ENVIA_CHAR *****************
  2124 ;; Defined at:
  2125 ;;		line 80 in file "LCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  dato            1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  dato            1   18[COMRAM] unsigned char 
  2130 ;;  aux             1   19[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0
  2141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2143 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 5
  2147 ;; This function calls:
  2148 ;;		i1_ENVIA_NIBBLE
  2149 ;;		i1_LEER_LCD
  2150 ;; This function is called by:
  2151 ;;		_INT1_ISR
  2152 ;;		i1_ESCRIBE_MENSAJE2
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text18
  2157  000F78                     __ptext18:
  2158                           	callstack 0
  2159  000F78                     i1_ENVIA_CHAR:
  2160                           	callstack 18
  2161                           
  2162                           ;incstack = 0
  2163                           ;i1ENVIA_CHAR@dato stored from wreg
  2164  000F78  6E13               	movwf	i1ENVIA_CHAR@dato^0,c
  2165  000F7A                     
  2166                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2167  000F7A  808D               	bsf	141,0,c	;volatile
  2168  000F7C                     
  2169                           ;LCD.c: 84:  LEER_LCD();
  2170  000F7C  EC36  F005         	call	i1_LEER_LCD	;wreg free
  2171  000F80                     
  2172                           ;LCD.c: 85:  TRISD = 0x00;
  2173  000F80  0E00               	movlw	0
  2174  000F82  6E95               	movwf	149,c	;volatile
  2175  000F84                     
  2176                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2177  000F84  0E21               	movlw	33
  2178  000F86                     i1u73_27:
  2179  000F86  2EE8               	decfsz	wreg,f,c
  2180  000F88  D7FE               	bra	i1u73_27
  2181  000F8A  F000               	nop	
  2182  000F8C                     
  2183                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2184  000F8C  928D               	bcf	141,1,c	;volatile
  2185  000F8E                     
  2186                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2187  000F8E  948D               	bcf	141,2,c	;volatile
  2188  000F90                     
  2189                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2190  000F90  808D               	bsf	141,0,c	;volatile
  2191  000F92                     
  2192                           ;LCD.c: 90:  aux = dato & 0xF0;
  2193  000F92  5013               	movf	i1ENVIA_CHAR@dato^0,w,c
  2194  000F94  0BF0               	andlw	240
  2195  000F96  6E14               	movwf	i1ENVIA_CHAR@aux^0,c
  2196  000F98                     
  2197                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2198  000F98  5014               	movf	i1ENVIA_CHAR@aux^0,w,c
  2199  000F9A  EC88  F008         	call	i1_ENVIA_NIBBLE
  2200  000F9E                     
  2201                           ;LCD.c: 92:  aux = dato << 4;
  2202  000F9E  3813               	swapf	i1ENVIA_CHAR@dato^0,w,c
  2203  000FA0  0BF0               	andlw	240
  2204  000FA2  6E14               	movwf	i1ENVIA_CHAR@aux^0,c
  2205  000FA4                     
  2206                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2207  000FA4  5014               	movf	i1ENVIA_CHAR@aux^0,w,c
  2208  000FA6  EC88  F008         	call	i1_ENVIA_NIBBLE
  2209  000FAA  0012               	return		;funcret
  2210  000FAC                     __end_ofi1_ENVIA_CHAR:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function i1_BORRAR_LCD *****************
  2214 ;; Defined at:
  2215 ;;		line 96 in file "LCD.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 6
  2236 ;; This function calls:
  2237 ;;		i1_ENVIA_LCD_CMD
  2238 ;; This function is called by:
  2239 ;;		_INT1_ISR
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text19
  2244  0011A2                     __ptext19:
  2245                           	callstack 0
  2246  0011A2                     i1_BORRAR_LCD:
  2247                           	callstack 18
  2248  0011A2                     
  2249                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2250  0011A2  0E01               	movlw	1
  2251  0011A4  ECD6  F007         	call	i1_ENVIA_LCD_CMD
  2252  0011A8  0012               	return		;funcret
  2253  0011AA                     __end_ofi1_BORRAR_LCD:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function i1_ENVIA_LCD_CMD *****************
  2257 ;; Defined at:
  2258 ;;		line 128 in file "LCD.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  dato            1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  dato            1   18[COMRAM] unsigned char 
  2263 ;;  aux             1   19[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        2 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 5
  2280 ;; This function calls:
  2281 ;;		i1_ENVIA_NIBBLE
  2282 ;;		i1_LEER_LCD
  2283 ;; This function is called by:
  2284 ;;		i1_POS_CURSOR
  2285 ;;		i1_BORRAR_LCD
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text20
  2290  000FAC                     __ptext20:
  2291                           	callstack 0
  2292  000FAC                     i1_ENVIA_LCD_CMD:
  2293                           	callstack 18
  2294                           
  2295                           ;incstack = 0
  2296                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  2297  000FAC  6E13               	movwf	i1ENVIA_LCD_CMD@dato^0,c
  2298  000FAE                     
  2299                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  2300  000FAE  908D               	bcf	141,0,c	;volatile
  2301  000FB0                     
  2302                           ;LCD.c: 132:  LEER_LCD();
  2303  000FB0  EC36  F005         	call	i1_LEER_LCD	;wreg free
  2304  000FB4                     
  2305                           ;LCD.c: 133:  TRISD = 0b00000000;
  2306  000FB4  0E00               	movlw	0
  2307  000FB6  6E95               	movwf	149,c	;volatile
  2308  000FB8                     
  2309                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2310  000FB8  0E21               	movlw	33
  2311  000FBA                     i1u74_27:
  2312  000FBA  2EE8               	decfsz	wreg,f,c
  2313  000FBC  D7FE               	bra	i1u74_27
  2314  000FBE  F000               	nop	
  2315  000FC0                     
  2316                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  2317  000FC0  928D               	bcf	141,1,c	;volatile
  2318  000FC2                     
  2319                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  2320  000FC2  948D               	bcf	141,2,c	;volatile
  2321  000FC4                     
  2322                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  2323  000FC4  908D               	bcf	141,0,c	;volatile
  2324  000FC6                     
  2325                           ;LCD.c: 138:  aux = dato & 0xF0;
  2326  000FC6  5013               	movf	i1ENVIA_LCD_CMD@dato^0,w,c
  2327  000FC8  0BF0               	andlw	240
  2328  000FCA  6E14               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2329  000FCC                     
  2330                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2331  000FCC  5014               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2332  000FCE  EC88  F008         	call	i1_ENVIA_NIBBLE
  2333  000FD2                     
  2334                           ;LCD.c: 140:  aux = dato<<4;
  2335  000FD2  3813               	swapf	i1ENVIA_LCD_CMD@dato^0,w,c
  2336  000FD4  0BF0               	andlw	240
  2337  000FD6  6E14               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2338  000FD8                     
  2339                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2340  000FD8  5014               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2341  000FDA  EC88  F008         	call	i1_ENVIA_NIBBLE
  2342  000FDE  0012               	return		;funcret
  2343  000FE0                     __end_ofi1_ENVIA_LCD_CMD:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function i1_LEER_LCD *****************
  2347 ;; Defined at:
  2348 ;;		line 144 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  aux             1   17[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2365 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 4
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		i1_ENVIA_CHAR
  2373 ;;		i1_ENVIA_LCD_CMD
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text21
  2378  000A6C                     __ptext21:
  2379                           	callstack 0
  2380  000A6C                     i1_LEER_LCD:
  2381                           	callstack 18
  2382  000A6C                     
  2383                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2384  000A6C  0EF8               	movlw	248
  2385  000A6E  6E95               	movwf	149,c	;volatile
  2386  000A70                     
  2387                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  2388  000A70  908D               	bcf	141,0,c	;volatile
  2389  000A72                     
  2390                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  2391  000A72  828D               	bsf	141,1,c	;volatile
  2392  000A74                     
  2393                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  2394  000A74  848D               	bsf	141,2,c	;volatile
  2395  000A76                     
  2396                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2397  000A76  0E21               	movlw	33
  2398  000A78                     i1u75_27:
  2399  000A78  2EE8               	decfsz	wreg,f,c
  2400  000A7A  D7FE               	bra	i1u75_27
  2401  000A7C  F000               	nop	
  2402  000A7E                     
  2403                           ;LCD.c: 152:  aux = PORTD;
  2404  000A7E  CF83 F012          	movff	3971,i1LEER_LCD@aux	;volatile
  2405  000A82                     
  2406                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  2407  000A82  948D               	bcf	141,2,c	;volatile
  2408  000A84                     
  2409                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2410  000A84  0E21               	movlw	33
  2411  000A86                     i1u76_27:
  2412  000A86  2EE8               	decfsz	wreg,f,c
  2413  000A88  D7FE               	bra	i1u76_27
  2414  000A8A  F000               	nop	
  2415  000A8C                     
  2416                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  2417  000A8C  848D               	bsf	141,2,c	;volatile
  2418  000A8E                     
  2419                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2420  000A8E  0E21               	movlw	33
  2421  000A90                     i1u77_27:
  2422  000A90  2EE8               	decfsz	wreg,f,c
  2423  000A92  D7FE               	bra	i1u77_27
  2424  000A94  F000               	nop	
  2425  000A96                     
  2426                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  2427  000A96  948D               	bcf	141,2,c	;volatile
  2428  000A98                     i1l1604:
  2429                           
  2430                           ;LCD.c: 158:  aux = aux & 0x80;
  2431  000A98  5012               	movf	i1LEER_LCD@aux^0,w,c
  2432  000A9A  0B80               	andlw	128
  2433  000A9C  6E12               	movwf	i1LEER_LCD@aux^0,c
  2434                           
  2435                           ;LCD.c: 159:  while(aux == 0x80)
  2436  000A9E  EF65  F005         	goto	i1l1618
  2437  000AA2                     i1l87:
  2438                           
  2439                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  2440  000AA2  848D               	bsf	141,2,c	;volatile
  2441  000AA4                     
  2442                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2443  000AA4  0E21               	movlw	33
  2444  000AA6                     i1u78_27:
  2445  000AA6  2EE8               	decfsz	wreg,f,c
  2446  000AA8  D7FE               	bra	i1u78_27
  2447  000AAA  F000               	nop	
  2448  000AAC                     
  2449                           ;LCD.c: 163:             aux = PORTD;
  2450  000AAC  CF83 F012          	movff	3971,i1LEER_LCD@aux	;volatile
  2451  000AB0                     
  2452                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  2453  000AB0  948D               	bcf	141,2,c	;volatile
  2454                           
  2455                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2456  000AB2  0E21               	movlw	33
  2457  000AB4                     i1u79_27:
  2458  000AB4  2EE8               	decfsz	wreg,f,c
  2459  000AB6  D7FE               	bra	i1u79_27
  2460  000AB8  F000               	nop	
  2461  000ABA                     
  2462                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  2463  000ABA  848D               	bsf	141,2,c	;volatile
  2464                           
  2465                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2466  000ABC  0E21               	movlw	33
  2467  000ABE                     i1u80_27:
  2468  000ABE  2EE8               	decfsz	wreg,f,c
  2469  000AC0  D7FE               	bra	i1u80_27
  2470  000AC2  F000               	nop	
  2471  000AC4                     
  2472                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  2473  000AC4  948D               	bcf	141,2,c	;volatile
  2474  000AC6  EF4C  F005         	goto	i1l1604
  2475  000ACA                     i1l1618:
  2476                           
  2477                           ;LCD.c: 159:  while(aux == 0x80)
  2478  000ACA  0E80               	movlw	128
  2479  000ACC  1812               	xorwf	i1LEER_LCD@aux^0,w,c
  2480  000ACE  B4D8               	btfsc	status,2,c
  2481  000AD0  EF6C  F005         	goto	i1u37_21
  2482  000AD4  EF6E  F005         	goto	i1u37_20
  2483  000AD8                     i1u37_21:
  2484  000AD8  EF51  F005         	goto	i1l87
  2485  000ADC                     i1u37_20:
  2486  000ADC  0012               	return		;funcret
  2487  000ADE                     __end_ofi1_LEER_LCD:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function i1_ENVIA_NIBBLE *****************
  2491 ;; Defined at:
  2492 ;;		line 118 in file "LCD.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  dato            1    wreg     unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  dato            1   17[COMRAM] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0
  2507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2509 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 4
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		i1_ENVIA_CHAR
  2517 ;;		i1_ENVIA_LCD_CMD
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text22
  2522  001110                     __ptext22:
  2523                           	callstack 0
  2524  001110                     i1_ENVIA_NIBBLE:
  2525                           	callstack 18
  2526                           
  2527                           ;incstack = 0
  2528                           ;i1ENVIA_NIBBLE@dato stored from wreg
  2529  001110  6E12               	movwf	i1ENVIA_NIBBLE@dato^0,c
  2530  001112                     
  2531                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2532  001112  0E0F               	movlw	15
  2533  001114  168C               	andwf	140,f,c	;volatile
  2534                           
  2535                           ;LCD.c: 121:  dato &= 0xF0;
  2536  001116  0EF0               	movlw	240
  2537  001118  1612               	andwf	i1ENVIA_NIBBLE@dato^0,f,c
  2538                           
  2539                           ;LCD.c: 122:  LATD|= dato;
  2540  00111A  5012               	movf	i1ENVIA_NIBBLE@dato^0,w,c	;volatile
  2541  00111C  128C               	iorwf	140,f,c	;volatile
  2542  00111E                     
  2543                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  2544  00111E  848D               	bsf	141,2,c	;volatile
  2545  001120                     
  2546                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2547  001120  0E21               	movlw	33
  2548  001122                     i1u81_27:
  2549  001122  2EE8               	decfsz	wreg,f,c
  2550  001124  D7FE               	bra	i1u81_27
  2551  001126  F000               	nop	
  2552  001128                     
  2553                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  2554  001128  948D               	bcf	141,2,c	;volatile
  2555  00112A  0012               	return		;funcret
  2556  00112C                     __end_ofi1_ENVIA_NIBBLE:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _EUSART_Stringsend *****************
  2560 ;; Defined at:
  2561 ;;		line 56 in file "maincode3.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  cadena          2   21[COMRAM] PTR unsigned char 
  2564 ;;		 -> STR_11(28), STR_9(25), STR_8(16), STR_7(16), 
  2565 ;;		 -> STR_6(16), STR_5(16), STR_4(26), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  x_var           1   26[COMRAM] unsigned char 
  2568 ;;  tam             1   25[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0
  2579 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2580 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2581 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2582 ;;Total ram usage:        6 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 5
  2585 ;; This function calls:
  2586 ;;		_EUSART_Datasend
  2587 ;;		i1_strlen
  2588 ;; This function is called by:
  2589 ;;		_INT1_ISR
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text23
  2594  000C8E                     __ptext23:
  2595                           	callstack 0
  2596  000C8E                     _EUSART_Stringsend:
  2597                           	callstack 19
  2598  000C8E                     
  2599                           ;maincode3.c: 57:     unsigned char tam;;maincode3.c: 58:     tam = strlen(cadena);
  2600  000C8E  C016  F012         	movff	EUSART_Stringsend@cadena,i1strlen@s
  2601  000C92  C017  F013         	movff	EUSART_Stringsend@cadena+1,i1strlen@s+1
  2602  000C96  EC31  F007         	call	i1_strlen	;wreg free
  2603  000C9A  5012               	movf	?i1_strlen^0,w,c
  2604  000C9C  6E1A               	movwf	EUSART_Stringsend@tam^0,c
  2605  000C9E                     
  2606                           ;maincode3.c: 59:     unsigned char x_var;;maincode3.c: 60:     for(x_var=0;x_var<tam;x_
      +                          var++){
  2607  000C9E  0E00               	movlw	0
  2608  000CA0  6E1B               	movwf	EUSART_Stringsend@x_var^0,c
  2609  000CA2  EF62  F006         	goto	i1l1796
  2610  000CA6                     i1l1792:
  2611                           
  2612                           ;maincode3.c: 61:         EUSART_Datasend(cadena[x_var]);
  2613  000CA6  501B               	movf	EUSART_Stringsend@x_var^0,w,c
  2614  000CA8  2416               	addwf	EUSART_Stringsend@cadena^0,w,c
  2615  000CAA  6E18               	movwf	??_EUSART_Stringsend^0,c
  2616  000CAC  0E00               	movlw	0
  2617  000CAE  2017               	addwfc	(EUSART_Stringsend@cadena+1)^0,w,c
  2618  000CB0  6E19               	movwf	(??_EUSART_Stringsend+1)^0,c
  2619  000CB2  C018  FFF6         	movff	??_EUSART_Stringsend,tblptrl
  2620  000CB6  C019  FFF7         	movff	??_EUSART_Stringsend+1,tblptrh
  2621  000CBA                     	if	0	;tblptru may be non-zero
  2622  000CBA                     	endif
  2623  000CBA                     	if	0	;tblptru may be non-zero
  2624  000CBA                     	endif
  2625  000CBA  0008               	tblrd		*
  2626  000CBC  50F5               	movf	tablat,w,c
  2627  000CBE  ECA4  F008         	call	_EUSART_Datasend
  2628  000CC2                     
  2629                           ;maincode3.c: 62:     }
  2630  000CC2  2A1B               	incf	EUSART_Stringsend@x_var^0,f,c
  2631  000CC4                     i1l1796:
  2632  000CC4  501A               	movf	EUSART_Stringsend@tam^0,w,c
  2633  000CC6  5C1B               	subwf	EUSART_Stringsend@x_var^0,w,c
  2634  000CC8  A0D8               	btfss	status,0,c
  2635  000CCA  EF69  F006         	goto	i1u45_21
  2636  000CCE  EF6B  F006         	goto	i1u45_20
  2637  000CD2                     i1u45_21:
  2638  000CD2  EF53  F006         	goto	i1l1792
  2639  000CD6                     i1u45_20:
  2640  000CD6  0012               	return		;funcret
  2641  000CD8                     __end_of_EUSART_Stringsend:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function i1_strlen *****************
  2645 ;; Defined at:
  2646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2649 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
  2650 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
  2651 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  a               2   19[COMRAM] PTR const unsigned char 
  2654 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
  2655 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
  2656 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2   17[COMRAM] unsigned int 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2666 ;;      Params:         2       0       0       0       0       0       0       0       0
  2667 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2669 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        4 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 4
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_EUSART_Stringsend
  2677 ;;		i1_ESCRIBE_MENSAJE2
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text24
  2682  000E62                     __ptext24:
  2683                           	callstack 0
  2684  000E62                     i1_strlen:
  2685                           	callstack 19
  2686  000E62  C012  F014         	movff	i1strlen@s,i1strlen@a
  2687  000E66  C013  F015         	movff	i1strlen@s+1,i1strlen@a+1
  2688  000E6A  EF39  F007         	goto	i1l1772
  2689  000E6E                     i1l1770:
  2690  000E6E  4A12               	infsnz	i1strlen@s^0,f,c
  2691  000E70  2A13               	incf	(i1strlen@s+1)^0,f,c
  2692  000E72                     i1l1772:
  2693  000E72  C012  FFF6         	movff	i1strlen@s,tblptrl
  2694  000E76  C013  FFF7         	movff	i1strlen@s+1,tblptrh
  2695  000E7A                     	if	0	;tblptru may be non-zero
  2696  000E7A                     	endif
  2697  000E7A                     	if	0	;tblptru may be non-zero
  2698  000E7A                     	endif
  2699  000E7A  0008               	tblrd		*
  2700  000E7C  50F5               	movf	tablat,w,c
  2701  000E7E  0900               	iorlw	0
  2702  000E80  A4D8               	btfss	status,2,c
  2703  000E82  EF45  F007         	goto	i1u43_21
  2704  000E86  EF47  F007         	goto	i1u43_20
  2705  000E8A                     i1u43_21:
  2706  000E8A  EF37  F007         	goto	i1l1770
  2707  000E8E                     i1u43_20:
  2708  000E8E  5014               	movf	i1strlen@a^0,w,c
  2709  000E90  5C12               	subwf	i1strlen@s^0,w,c
  2710  000E92  6E12               	movwf	?i1_strlen^0,c
  2711  000E94  5015               	movf	(i1strlen@a+1)^0,w,c
  2712  000E96  5813               	subwfb	(i1strlen@s+1)^0,w,c
  2713  000E98  6E13               	movwf	(?i1_strlen+1)^0,c
  2714  000E9A  0012               	return		;funcret
  2715  000E9C                     __end_ofi1_strlen:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _EUSART_Datasend *****************
  2719 ;; Defined at:
  2720 ;;		line 44 in file "maincode3.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  dato            1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  dato            1   17[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 4
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_EUSART_Stringsend
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text25
  2749  001148                     __ptext25:
  2750                           	callstack 0
  2751  001148                     _EUSART_Datasend:
  2752                           	callstack 19
  2753                           
  2754                           ;incstack = 0
  2755                           ;EUSART_Datasend@dato stored from wreg
  2756  001148  6E12               	movwf	EUSART_Datasend@dato^0,c
  2757  00114A                     
  2758                           ;maincode3.c: 45:     TXREG1 = dato;
  2759  00114A  C012  FFAD         	movff	EUSART_Datasend@dato,4013	;volatile
  2760  00114E                     i1l167:
  2761  00114E  A2AC               	btfss	172,1,c	;volatile
  2762  001150  EFAC  F008         	goto	i1u10_21
  2763  001154  EFAE  F008         	goto	i1u10_20
  2764  001158                     i1u10_21:
  2765  001158  EFA7  F008         	goto	i1l167
  2766  00115C                     i1u10_20:
  2767  00115C  0012               	return		;funcret
  2768  00115E                     __end_of_EUSART_Datasend:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _EUSART_Newline *****************
  2772 ;; Defined at:
  2773 ;;		line 49 in file "maincode3.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 4
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_INT1_ISR
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text26
  2802  0010A8                     __ptext26:
  2803                           	callstack 0
  2804  0010A8                     _EUSART_Newline:
  2805                           	callstack 20
  2806  0010A8                     
  2807                           ;maincode3.c: 50:     TXREG1 = 0x0A;
  2808  0010A8  0E0A               	movlw	10
  2809  0010AA  6EAD               	movwf	173,c	;volatile
  2810  0010AC                     i1l173:
  2811  0010AC  A2AC               	btfss	172,1,c	;volatile
  2812  0010AE  EF5B  F008         	goto	i1u14_21
  2813  0010B2  EF5D  F008         	goto	i1u14_20
  2814  0010B6                     i1u14_21:
  2815  0010B6  EF56  F008         	goto	i1l173
  2816  0010BA                     i1u14_20:
  2817  0010BA                     
  2818                           ;maincode3.c: 52:     TXREG1 = 0x0D;
  2819  0010BA  0E0D               	movlw	13
  2820  0010BC  6EAD               	movwf	173,c	;volatile
  2821  0010BE                     i1l176:
  2822  0010BE  A2AC               	btfss	172,1,c	;volatile
  2823  0010C0  EF64  F008         	goto	i1u15_21
  2824  0010C4  EF66  F008         	goto	i1u15_20
  2825  0010C8                     i1u15_21:
  2826  0010C8  EF5F  F008         	goto	i1l176
  2827  0010CC                     i1u15_20:
  2828  0010CC  0012               	return		;funcret
  2829  0010CE                     __end_of_EUSART_Newline:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _INT0_EUSARTRX_ISR *****************
  2833 ;; Defined at:
  2834 ;;		line 80 in file "maincode3.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  x_var           1   16[COMRAM] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0
  2849 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2850 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2851 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2852 ;;Total ram usage:        7 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 3
  2855 ;; This function calls:
  2856 ;;		i2_BORRAR_LCD
  2857 ;;		i2_ENVIA_CHAR
  2858 ;;		i2_ESCRIBE_MENSAJE2
  2859 ;;		i2_EUSART_Newline
  2860 ;;		i2_EUSART_Stringsend
  2861 ;;		i2_POS_CURSOR
  2862 ;; This function is called by:
  2863 ;;		Interrupt level 2
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	intcode
  2868  000008                     __pintcode:
  2869                           	callstack 0
  2870  000008                     _INT0_EUSARTRX_ISR:
  2871                           	callstack 18
  2872                           
  2873                           ;incstack = 0
  2874  000008  8231               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2875  00000A  EF5F  F004         	goto	int_func
  2876                           
  2877                           	psect	intcode_body
  2878  0008BE                     __pintcode_body:
  2879                           	callstack 18
  2880  0008BE                     int_func:
  2881                           	callstack 18
  2882  0008BE  CFF6 F00D          	movff	tblptrl,??_INT0_EUSARTRX_ISR+2
  2883  0008C2  CFF7 F00E          	movff	tblptrh,??_INT0_EUSARTRX_ISR+3
  2884  0008C6  CFF8 F00F          	movff	tblptru,??_INT0_EUSARTRX_ISR+4
  2885  0008CA  CFF5 F010          	movff	tablat,??_INT0_EUSARTRX_ISR+5
  2886  0008CE                     
  2887                           ;maincode3.c: 81:     if(INTCONbits.INT0IF == 1){
  2888  0008CE  A2F2               	btfss	242,1,c	;volatile
  2889  0008D0  EF6C  F004         	goto	i2u53_41
  2890  0008D4  EF6E  F004         	goto	i2u53_40
  2891  0008D8                     i2u53_41:
  2892  0008D8  EFA2  F004         	goto	i2l201
  2893  0008DC                     i2u53_40:
  2894  0008DC                     
  2895                           ;maincode3.c: 82:         INTCONbits.INT0IF = 0;
  2896  0008DC  92F2               	bcf	242,1,c	;volatile
  2897  0008DE                     
  2898                           ;maincode3.c: 83:         POS_CURSOR(1,0);
  2899  0008DE  0E00               	movlw	0
  2900  0008E0  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2901  0008E2  0E01               	movlw	1
  2902  0008E4  EC4E  F007         	call	i2_POS_CURSOR
  2903  0008E8                     
  2904                           ;maincode3.c: 84:         ESCRIBE_MENSAJE2("Servo a 0");
  2905  0008E8  0EA8               	movlw	low STR_3
  2906  0008EA  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  2907  0008EC  0E08               	movlw	high STR_3
  2908  0008EE  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  2909  0008F0  EC91  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2910  0008F4                     
  2911                           ;maincode3.c: 85:         ENVIA_CHAR(0xDF);
  2912  0008F4  0EDF               	movlw	223
  2913  0008F6  ECF0  F007         	call	i2_ENVIA_CHAR
  2914                           
  2915                           ;maincode3.c: 86:         EUSART_Stringsend("moviendo servo a 0 grados");
  2916  0008FA  0E1D               	movlw	low STR_4
  2917  0008FC  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  2918  0008FE  0E08               	movlw	high STR_4
  2919  000900  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  2920  000902  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  2921  000906                     
  2922                           ;maincode3.c: 87:         EUSART_Newline();
  2923  000906  EC67  F008         	call	i2_EUSART_Newline	;wreg free
  2924  00090A                     
  2925                           ;maincode3.c: 88:         unsigned char x_var;;maincode3.c: 89:         for(x_var=0;x_va
      +                          r<50;x_var++){
  2926  00090A  0E00               	movlw	0
  2927  00090C  6E11               	movwf	INT0_EUSARTRX_ISR@x_var^0,c
  2928  00090E                     i2l202:
  2929                           
  2930                           ;maincode3.c: 90:             LATAbits.LA0 = 1;
  2931  00090E  8089               	bsf	137,0,c	;volatile
  2932  000910                     
  2933                           ;maincode3.c: 91:             _delay((unsigned long)((700)*(4000000UL/4000000.0)));
  2934  000910  0EE9               	movlw	233
  2935  000912                     i2u82_47:
  2936  000912  2EE8               	decfsz	wreg,f,c
  2937  000914  D7FE               	bra	i2u82_47
  2938  000916  F000               	nop	
  2939  000918                     
  2940                           ;maincode3.c: 92:             LATAbits.LA0 = 0;
  2941  000918  9089               	bcf	137,0,c	;volatile
  2942                           
  2943                           ;maincode3.c: 93:             _delay((unsigned long)((19300)*(4000000UL/4000000.0)));
  2944  00091A  0E1A               	movlw	26
  2945  00091C  6E0B               	movwf	??_INT0_EUSARTRX_ISR^0,c
  2946  00091E  0E0F               	movlw	15
  2947  000920                     i2u83_47:
  2948  000920  2EE8               	decfsz	wreg,f,c
  2949  000922  D7FE               	bra	i2u83_47
  2950  000924  2E0B               	decfsz	??_INT0_EUSARTRX_ISR^0,f,c
  2951  000926  D7FC               	bra	i2u83_47
  2952  000928  F000               	nop	
  2953  00092A                     
  2954                           ;maincode3.c: 94:         }
  2955  00092A  2A11               	incf	INT0_EUSARTRX_ISR@x_var^0,f,c
  2956  00092C  0E31               	movlw	49
  2957  00092E  6411               	cpfsgt	INT0_EUSARTRX_ISR@x_var^0,c
  2958  000930  EF9C  F004         	goto	i2u54_41
  2959  000934  EF9E  F004         	goto	i2u54_40
  2960  000938                     i2u54_41:
  2961  000938  EF87  F004         	goto	i2l202
  2962  00093C                     i2u54_40:
  2963  00093C                     
  2964                           ;maincode3.c: 95:         BORRAR_LCD();
  2965  00093C  ECD5  F008         	call	i2_BORRAR_LCD	;wreg free
  2966                           
  2967                           ;maincode3.c: 96:     }
  2968  000940  EFF3  F004         	goto	i2l213
  2969  000944                     i2l201:
  2970  000944  AA9E               	btfss	158,5,c	;volatile
  2971  000946  EFA7  F004         	goto	i2u55_41
  2972  00094A  EFA9  F004         	goto	i2u55_40
  2973  00094E                     i2u55_41:
  2974  00094E  EFF3  F004         	goto	i2l213
  2975  000952                     i2u55_40:
  2976  000952                     
  2977                           ;maincode3.c: 98:         PIR1bits.RC1IF = 0;
  2978  000952  9A9E               	bcf	158,5,c	;volatile
  2979                           
  2980                           ;maincode3.c: 99:         switch(RCREG1){
  2981  000954  EFD6  F004         	goto	i2l1916
  2982  000958                     i2l1894:
  2983                           
  2984                           ;maincode3.c: 101:                 EUSART_Stringsend("machucaste la P");
  2985  000958  0E60               	movlw	low STR_5
  2986  00095A  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  2987  00095C  0E08               	movlw	high STR_5
  2988  00095E  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  2989  000960  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  2990  000964                     i2l1896:
  2991                           
  2992                           ;maincode3.c: 102:                 EUSART_Newline();
  2993  000964  EC67  F008         	call	i2_EUSART_Newline	;wreg free
  2994                           
  2995                           ;maincode3.c: 103:                 break;
  2996  000968  EFF3  F004         	goto	i2l213
  2997  00096C                     i2l1898:
  2998                           
  2999                           ;maincode3.c: 105:                 EUSART_Stringsend("machucaste la E");
  3000  00096C  0E50               	movlw	low STR_6
  3001  00096E  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  3002  000970  0E08               	movlw	high STR_6
  3003  000972  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  3004  000974  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  3005  000978  EFB2  F004         	goto	i2l1896
  3006  00097C                     i2l1902:
  3007                           
  3008                           ;maincode3.c: 109:                 EUSART_Stringsend("machucaste la R");
  3009  00097C  0E70               	movlw	low STR_7
  3010  00097E  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  3011  000980  0E08               	movlw	high STR_7
  3012  000982  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  3013  000984  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  3014  000988  EFB2  F004         	goto	i2l1896
  3015  00098C                     i2l1906:
  3016                           
  3017                           ;maincode3.c: 113:                 EUSART_Stringsend("machucaste la U");
  3018  00098C  0E80               	movlw	low STR_8
  3019  00098E  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  3020  000990  0E08               	movlw	high STR_8
  3021  000992  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  3022  000994  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  3023  000998  EFB2  F004         	goto	i2l1896
  3024  00099C                     i2l1910:
  3025                           
  3026                           ;maincode3.c: 117:                 EUSART_Stringsend("tecla errada no te pases");
  3027  00099C  0E37               	movlw	low STR_9
  3028  00099E  6E05               	movwf	i2EUSART_Stringsend@cadena^0,c
  3029  0009A0  0E08               	movlw	high STR_9
  3030  0009A2  6E06               	movwf	(i2EUSART_Stringsend@cadena+1)^0,c
  3031  0009A4  EC6C  F006         	call	i2_EUSART_Stringsend	;wreg free
  3032  0009A8  EFB2  F004         	goto	i2l1896
  3033  0009AC                     i2l1916:
  3034  0009AC  50AE               	movf	174,w,c	;volatile
  3035  0009AE  6E0B               	movwf	??_INT0_EUSARTRX_ISR^0,c
  3036  0009B0  6A0C               	clrf	(??_INT0_EUSARTRX_ISR+1)^0,c
  3037                           
  3038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 1, Range of values is 0 to 0
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte            4     3 (average)
  3044                           ;	Chosen strategy is simple_byte
  3045  0009B2  500C               	movf	(??_INT0_EUSARTRX_ISR+1)^0,w,c
  3046  0009B4  0A00               	xorlw	0	; case 0
  3047  0009B6  B4D8               	btfsc	status,2,c
  3048  0009B8  EFE0  F004         	goto	i2l1966
  3049  0009BC  EFCE  F004         	goto	i2l1910
  3050  0009C0                     i2l1966:
  3051                           
  3052                           ; Switch size 1, requested type "simple"
  3053                           ; Number of cases is 4, Range of values is 69 to 85
  3054                           ; switch strategies available:
  3055                           ; Name         Instructions Cycles
  3056                           ; simple_byte           13     7 (average)
  3057                           ;	Chosen strategy is simple_byte
  3058  0009C0  500B               	movf	??_INT0_EUSARTRX_ISR^0,w,c
  3059  0009C2  0A45               	xorlw	69	; case 69
  3060  0009C4  B4D8               	btfsc	status,2,c
  3061  0009C6  EFB6  F004         	goto	i2l1898
  3062  0009CA  0A15               	xorlw	21	; case 80
  3063  0009CC  B4D8               	btfsc	status,2,c
  3064  0009CE  EFAC  F004         	goto	i2l1894
  3065  0009D2  0A02               	xorlw	2	; case 82
  3066  0009D4  B4D8               	btfsc	status,2,c
  3067  0009D6  EFBE  F004         	goto	i2l1902
  3068  0009DA  0A07               	xorlw	7	; case 85
  3069  0009DC  B4D8               	btfsc	status,2,c
  3070  0009DE  EFC6  F004         	goto	i2l1906
  3071  0009E2  EFCE  F004         	goto	i2l1910
  3072  0009E6                     i2l213:
  3073  0009E6  C010  FFF5         	movff	??_INT0_EUSARTRX_ISR+5,tablat
  3074  0009EA  C00F  FFF8         	movff	??_INT0_EUSARTRX_ISR+4,tblptru
  3075  0009EE  C00E  FFF7         	movff	??_INT0_EUSARTRX_ISR+3,tblptrh
  3076  0009F2  C00D  FFF6         	movff	??_INT0_EUSARTRX_ISR+2,tblptrl
  3077  0009F6  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3078  0009F8  0011               	retfie		f
  3079  0009FA                     __end_of_INT0_EUSARTRX_ISR:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function i2_POS_CURSOR *****************
  3083 ;; Defined at:
  3084 ;;		line 5 in file "LCD.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  fila            1    wreg     unsigned char 
  3087 ;;  columna         1    3[COMRAM] unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  fila            1    4[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         1       0       0       0       0       0       0       0       0
  3100 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3102 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:        2 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 2
  3106 ;; This function calls:
  3107 ;;		i2_ENVIA_LCD_CMD
  3108 ;; This function is called by:
  3109 ;;		_INT0_EUSARTRX_ISR
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text28
  3114  000E9C                     __ptext28:
  3115                           	callstack 0
  3116  000E9C                     i2_POS_CURSOR:
  3117                           	callstack 18
  3118                           
  3119                           ;incstack = 0
  3120                           ;i2POS_CURSOR@fila stored from wreg
  3121  000E9C  6E05               	movwf	i2POS_CURSOR@fila^0,c
  3122  000E9E                     
  3123                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  3124  000E9E  0405               	decf	i2POS_CURSOR@fila^0,w,c
  3125  000EA0  A4D8               	btfss	status,2,c
  3126  000EA2  EF55  F007         	goto	i2u48_41
  3127  000EA6  EF57  F007         	goto	i2u48_40
  3128  000EAA                     i2u48_41:
  3129  000EAA  EF5D  F007         	goto	i2l1820
  3130  000EAE                     i2u48_40:
  3131  000EAE                     
  3132                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  3133  000EAE  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3134  000EB0  0F80               	addlw	128
  3135  000EB2  EC0A  F008         	call	i2_ENVIA_LCD_CMD
  3136                           
  3137                           ;LCD.c: 10:  }
  3138  000EB6  EF6A  F007         	goto	i2l26
  3139  000EBA                     i2l1820:
  3140  000EBA  0E02               	movlw	2
  3141  000EBC  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  3142  000EBE  A4D8               	btfss	status,2,c
  3143  000EC0  EF64  F007         	goto	i2u49_41
  3144  000EC4  EF66  F007         	goto	i2u49_40
  3145  000EC8                     i2u49_41:
  3146  000EC8  EF6A  F007         	goto	i2l26
  3147  000ECC                     i2u49_40:
  3148  000ECC                     
  3149                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  3150  000ECC  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3151  000ECE  0FC0               	addlw	192
  3152  000ED0  EC0A  F008         	call	i2_ENVIA_LCD_CMD
  3153  000ED4                     i2l26:
  3154  000ED4  0012               	return		;funcret
  3155  000ED6                     __end_ofi2_POS_CURSOR:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function i2_EUSART_Stringsend *****************
  3159 ;; Defined at:
  3160 ;;		line 56 in file "maincode3.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  cadena          2    4[COMRAM] PTR unsigned char 
  3163 ;;		 -> STR_11(28), STR_9(25), STR_8(16), STR_7(16), 
  3164 ;;		 -> STR_6(16), STR_5(16), STR_4(26), 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  x_var           1    9[COMRAM] unsigned char 
  3167 ;;  tam             1    8[COMRAM] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3177 ;;      Params:         2       0       0       0       0       0       0       0       0
  3178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3179 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3180 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        6 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 1
  3184 ;; This function calls:
  3185 ;;		i2_EUSART_Datasend
  3186 ;;		i2_strlen
  3187 ;; This function is called by:
  3188 ;;		_INT0_EUSARTRX_ISR
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text29
  3193  000CD8                     __ptext29:
  3194                           	callstack 0
  3195  000CD8                     i2_EUSART_Stringsend:
  3196                           	callstack 19
  3197  000CD8                     
  3198                           ;maincode3.c: 57:     unsigned char tam;;maincode3.c: 58:     tam = strlen(cadena);
  3199  000CD8  C005  F001         	movff	i2EUSART_Stringsend@cadena,i2strlen@s
  3200  000CDC  C006  F002         	movff	i2EUSART_Stringsend@cadena+1,i2strlen@s+1
  3201  000CE0  EC6B  F007         	call	i2_strlen	;wreg free
  3202  000CE4  5001               	movf	?i2_strlen^0,w,c
  3203  000CE6  6E09               	movwf	i2EUSART_Stringsend@tam^0,c
  3204  000CE8                     
  3205                           ;maincode3.c: 59:     unsigned char x_var;;maincode3.c: 60:     for(x_var=0;x_var<tam;x_
      +                          var++){
  3206  000CE8  0E00               	movlw	0
  3207  000CEA  6E0A               	movwf	i2EUSART_Stringsend@x_var^0,c
  3208  000CEC  EF87  F006         	goto	i2l1860
  3209  000CF0                     i2l1856:
  3210                           
  3211                           ;maincode3.c: 61:         EUSART_Datasend(cadena[x_var]);
  3212  000CF0  500A               	movf	i2EUSART_Stringsend@x_var^0,w,c
  3213  000CF2  2405               	addwf	i2EUSART_Stringsend@cadena^0,w,c
  3214  000CF4  6E07               	movwf	??i2_EUSART_Stringsend^0,c
  3215  000CF6  0E00               	movlw	0
  3216  000CF8  2006               	addwfc	(i2EUSART_Stringsend@cadena+1)^0,w,c
  3217  000CFA  6E08               	movwf	(??i2_EUSART_Stringsend+1)^0,c
  3218  000CFC  C007  FFF6         	movff	??i2_EUSART_Stringsend,tblptrl
  3219  000D00  C008  FFF7         	movff	??i2_EUSART_Stringsend+1,tblptrh
  3220  000D04                     	if	0	;tblptru may be non-zero
  3221  000D04                     	endif
  3222  000D04                     	if	0	;tblptru may be non-zero
  3223  000D04                     	endif
  3224  000D04  0008               	tblrd		*
  3225  000D06  50F5               	movf	tablat,w,c
  3226  000D08  ECAF  F008         	call	i2_EUSART_Datasend
  3227  000D0C                     
  3228                           ;maincode3.c: 62:     }
  3229  000D0C  2A0A               	incf	i2EUSART_Stringsend@x_var^0,f,c
  3230  000D0E                     i2l1860:
  3231  000D0E  5009               	movf	i2EUSART_Stringsend@tam^0,w,c
  3232  000D10  5C0A               	subwf	i2EUSART_Stringsend@x_var^0,w,c
  3233  000D12  A0D8               	btfss	status,0,c
  3234  000D14  EF8E  F006         	goto	i2u52_41
  3235  000D18  EF90  F006         	goto	i2u52_40
  3236  000D1C                     i2u52_41:
  3237  000D1C  EF78  F006         	goto	i2l1856
  3238  000D20                     i2u52_40:
  3239  000D20  0012               	return		;funcret
  3240  000D22                     __end_ofi2_EUSART_Stringsend:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function i2_EUSART_Datasend *****************
  3244 ;; Defined at:
  3245 ;;		line 44 in file "maincode3.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  dato            1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  dato            1    0[COMRAM] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3262 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		i2_EUSART_Stringsend
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text30
  3273  00115E                     __ptext30:
  3274                           	callstack 0
  3275  00115E                     i2_EUSART_Datasend:
  3276                           	callstack 19
  3277                           
  3278                           ;incstack = 0
  3279                           ;i2EUSART_Datasend@dato stored from wreg
  3280  00115E  6E01               	movwf	i2EUSART_Datasend@dato^0,c
  3281  001160                     
  3282                           ;maincode3.c: 45:     TXREG1 = dato;
  3283  001160  C001  FFAD         	movff	i2EUSART_Datasend@dato,4013	;volatile
  3284  001164                     i2l167:
  3285  001164  A2AC               	btfss	172,1,c	;volatile
  3286  001166  EFB7  F008         	goto	i2u42_41
  3287  00116A  EFB9  F008         	goto	i2u42_40
  3288  00116E                     i2u42_41:
  3289  00116E  EFB2  F008         	goto	i2l167
  3290  001172                     i2u42_40:
  3291  001172  0012               	return		;funcret
  3292  001174                     __end_ofi2_EUSART_Datasend:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function i2_EUSART_Newline *****************
  3296 ;; Defined at:
  3297 ;;		line 49 in file "maincode3.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_INT0_EUSARTRX_ISR
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text31
  3325  0010CE                     __ptext31:
  3326                           	callstack 0
  3327  0010CE                     i2_EUSART_Newline:
  3328                           	callstack 20
  3329  0010CE                     
  3330                           ;maincode3.c: 50:     TXREG1 = 0x0A;
  3331  0010CE  0E0A               	movlw	10
  3332  0010D0  6EAD               	movwf	173,c	;volatile
  3333  0010D2                     i2l173:
  3334  0010D2  A2AC               	btfss	172,1,c	;volatile
  3335  0010D4  EF6E  F008         	goto	i2u23_41
  3336  0010D8  EF70  F008         	goto	i2u23_40
  3337  0010DC                     i2u23_41:
  3338  0010DC  EF69  F008         	goto	i2l173
  3339  0010E0                     i2u23_40:
  3340  0010E0                     
  3341                           ;maincode3.c: 52:     TXREG1 = 0x0D;
  3342  0010E0  0E0D               	movlw	13
  3343  0010E2  6EAD               	movwf	173,c	;volatile
  3344  0010E4                     i2l176:
  3345  0010E4  A2AC               	btfss	172,1,c	;volatile
  3346  0010E6  EF77  F008         	goto	i2u24_41
  3347  0010EA  EF79  F008         	goto	i2u24_40
  3348  0010EE                     i2u24_41:
  3349  0010EE  EF72  F008         	goto	i2l176
  3350  0010F2                     i2u24_40:
  3351  0010F2  0012               	return		;funcret
  3352  0010F4                     __end_ofi2_EUSART_Newline:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  3356 ;; Defined at:
  3357 ;;		line 69 in file "LCD.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  3360 ;;		 -> STR_10(12), STR_3(10), STR_2(12), STR_1(10), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  i               1    9[COMRAM] unsigned char 
  3363 ;;  tam             1    8[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3373 ;;      Params:         2       0       0       0       0       0       0       0       0
  3374 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3375 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3376 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:        6 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 2
  3380 ;; This function calls:
  3381 ;;		i2_ENVIA_CHAR
  3382 ;;		i2_strlen
  3383 ;; This function is called by:
  3384 ;;		_INT0_EUSARTRX_ISR
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text32
  3389  000D22                     __ptext32:
  3390                           	callstack 0
  3391  000D22                     i2_ESCRIBE_MENSAJE2:
  3392                           	callstack 18
  3393  000D22                     
  3394                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  3395  000D22  C005  F001         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  3396  000D26  C006  F002         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  3397  000D2A  EC6B  F007         	call	i2_strlen	;wreg free
  3398  000D2E  5001               	movf	?i2_strlen^0,w,c
  3399  000D30  6E09               	movwf	i2ESCRIBE_MENSAJE2@tam^0,c
  3400  000D32                     
  3401                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  3402  000D32  0E00               	movlw	0
  3403  000D34  6E0A               	movwf	i2ESCRIBE_MENSAJE2@i^0,c
  3404  000D36  EFAC  F006         	goto	i2l1846
  3405  000D3A                     i2l1842:
  3406                           
  3407                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  3408  000D3A  500A               	movf	i2ESCRIBE_MENSAJE2@i^0,w,c
  3409  000D3C  2405               	addwf	i2ESCRIBE_MENSAJE2@cadena^0,w,c
  3410  000D3E  6E07               	movwf	??i2_ESCRIBE_MENSAJE2^0,c
  3411  000D40  0E00               	movlw	0
  3412  000D42  2006               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  3413  000D44  6E08               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^0,c
  3414  000D46  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  3415  000D4A  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  3416  000D4E                     	if	0	;tblptru may be non-zero
  3417  000D4E                     	endif
  3418  000D4E                     	if	0	;tblptru may be non-zero
  3419  000D4E                     	endif
  3420  000D4E  0008               	tblrd		*
  3421  000D50  50F5               	movf	tablat,w,c
  3422  000D52  ECF0  F007         	call	i2_ENVIA_CHAR
  3423  000D56                     
  3424                           ;LCD.c: 77:  }
  3425  000D56  2A0A               	incf	i2ESCRIBE_MENSAJE2@i^0,f,c
  3426  000D58                     i2l1846:
  3427  000D58  5009               	movf	i2ESCRIBE_MENSAJE2@tam^0,w,c
  3428  000D5A  5C0A               	subwf	i2ESCRIBE_MENSAJE2@i^0,w,c
  3429  000D5C  A0D8               	btfss	status,0,c
  3430  000D5E  EFB3  F006         	goto	i2u51_41
  3431  000D62  EFB5  F006         	goto	i2u51_40
  3432  000D66                     i2u51_41:
  3433  000D66  EF9D  F006         	goto	i2l1842
  3434  000D6A                     i2u51_40:
  3435  000D6A  0012               	return		;funcret
  3436  000D6C                     __end_ofi2_ESCRIBE_MENSAJE2:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function i2_strlen *****************
  3440 ;; Defined at:
  3441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3444 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
  3445 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
  3446 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3449 ;;		 -> STR_11(28), STR_10(12), STR_9(25), STR_8(16), 
  3450 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(26), 
  3451 ;;		 -> STR_3(10), STR_2(12), STR_1(10), 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    0[COMRAM] unsigned int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         2       0       0       0       0       0       0       0       0
  3462 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3464 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3465 ;;Total ram usage:        4 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		i2_ESCRIBE_MENSAJE2
  3471 ;;		i2_EUSART_Stringsend
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text33
  3476  000ED6                     __ptext33:
  3477                           	callstack 0
  3478  000ED6                     i2_strlen:
  3479                           	callstack 19
  3480  000ED6  C001  F003         	movff	i2strlen@s,i2strlen@a
  3481  000EDA  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3482  000EDE  EF73  F007         	goto	i2l1782
  3483  000EE2                     i2l1780:
  3484  000EE2  4A01               	infsnz	i2strlen@s^0,f,c
  3485  000EE4  2A02               	incf	(i2strlen@s+1)^0,f,c
  3486  000EE6                     i2l1782:
  3487  000EE6  C001  FFF6         	movff	i2strlen@s,tblptrl
  3488  000EEA  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  3489  000EEE                     	if	0	;tblptru may be non-zero
  3490  000EEE                     	endif
  3491  000EEE                     	if	0	;tblptru may be non-zero
  3492  000EEE                     	endif
  3493  000EEE  0008               	tblrd		*
  3494  000EF0  50F5               	movf	tablat,w,c
  3495  000EF2  0900               	iorlw	0
  3496  000EF4  A4D8               	btfss	status,2,c
  3497  000EF6  EF7F  F007         	goto	i2u44_41
  3498  000EFA  EF81  F007         	goto	i2u44_40
  3499  000EFE                     i2u44_41:
  3500  000EFE  EF71  F007         	goto	i2l1780
  3501  000F02                     i2u44_40:
  3502  000F02  5003               	movf	i2strlen@a^0,w,c
  3503  000F04  5C01               	subwf	i2strlen@s^0,w,c
  3504  000F06  6E01               	movwf	?i2_strlen^0,c
  3505  000F08  5004               	movf	(i2strlen@a+1)^0,w,c
  3506  000F0A  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3507  000F0C  6E02               	movwf	(?i2_strlen+1)^0,c
  3508  000F0E  0012               	return		;funcret
  3509  000F10                     __end_ofi2_strlen:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function i2_ENVIA_CHAR *****************
  3513 ;; Defined at:
  3514 ;;		line 80 in file "LCD.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  dato            1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  dato            1    1[COMRAM] unsigned char 
  3519 ;;  aux             1    2[COMRAM] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0
  3530 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3532 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 1
  3536 ;; This function calls:
  3537 ;;		i2_ENVIA_NIBBLE
  3538 ;;		i2_LEER_LCD
  3539 ;; This function is called by:
  3540 ;;		_INT0_EUSARTRX_ISR
  3541 ;;		i2_ESCRIBE_MENSAJE2
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text34
  3546  000FE0                     __ptext34:
  3547                           	callstack 0
  3548  000FE0                     i2_ENVIA_CHAR:
  3549                           	callstack 18
  3550                           
  3551                           ;incstack = 0
  3552                           ;i2ENVIA_CHAR@dato stored from wreg
  3553  000FE0  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  3554  000FE2                     
  3555                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  3556  000FE2  808D               	bsf	141,0,c	;volatile
  3557  000FE4                     
  3558                           ;LCD.c: 84:  LEER_LCD();
  3559  000FE4  EC6F  F005         	call	i2_LEER_LCD	;wreg free
  3560  000FE8                     
  3561                           ;LCD.c: 85:  TRISD = 0x00;
  3562  000FE8  0E00               	movlw	0
  3563  000FEA  6E95               	movwf	149,c	;volatile
  3564  000FEC                     
  3565                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3566  000FEC  0E21               	movlw	33
  3567  000FEE                     i2u84_47:
  3568  000FEE  2EE8               	decfsz	wreg,f,c
  3569  000FF0  D7FE               	bra	i2u84_47
  3570  000FF2  F000               	nop	
  3571  000FF4                     
  3572                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  3573  000FF4  928D               	bcf	141,1,c	;volatile
  3574  000FF6                     
  3575                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  3576  000FF6  948D               	bcf	141,2,c	;volatile
  3577  000FF8                     
  3578                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  3579  000FF8  808D               	bsf	141,0,c	;volatile
  3580  000FFA                     
  3581                           ;LCD.c: 90:  aux = dato & 0xF0;
  3582  000FFA  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  3583  000FFC  0BF0               	andlw	240
  3584  000FFE  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3585  001000                     
  3586                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  3587  001000  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3588  001002  EC96  F008         	call	i2_ENVIA_NIBBLE
  3589  001006                     
  3590                           ;LCD.c: 92:  aux = dato << 4;
  3591  001006  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  3592  001008  0BF0               	andlw	240
  3593  00100A  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3594  00100C                     
  3595                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  3596  00100C  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3597  00100E  EC96  F008         	call	i2_ENVIA_NIBBLE
  3598  001012  0012               	return		;funcret
  3599  001014                     __end_ofi2_ENVIA_CHAR:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function i2_BORRAR_LCD *****************
  3603 ;; Defined at:
  3604 ;;		line 96 in file "LCD.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 2
  3625 ;; This function calls:
  3626 ;;		i2_ENVIA_LCD_CMD
  3627 ;; This function is called by:
  3628 ;;		_INT0_EUSARTRX_ISR
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text35
  3633  0011AA                     __ptext35:
  3634                           	callstack 0
  3635  0011AA                     i2_BORRAR_LCD:
  3636                           	callstack 18
  3637  0011AA                     
  3638                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  3639  0011AA  0E01               	movlw	1
  3640  0011AC  EC0A  F008         	call	i2_ENVIA_LCD_CMD
  3641  0011B0  0012               	return		;funcret
  3642  0011B2                     __end_ofi2_BORRAR_LCD:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function i2_ENVIA_LCD_CMD *****************
  3646 ;; Defined at:
  3647 ;;		line 128 in file "LCD.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  dato            1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  dato            1    1[COMRAM] unsigned char 
  3652 ;;  aux             1    2[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0
  3663 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3665 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 1
  3669 ;; This function calls:
  3670 ;;		i2_ENVIA_NIBBLE
  3671 ;;		i2_LEER_LCD
  3672 ;; This function is called by:
  3673 ;;		i2_POS_CURSOR
  3674 ;;		i2_BORRAR_LCD
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text36
  3679  001014                     __ptext36:
  3680                           	callstack 0
  3681  001014                     i2_ENVIA_LCD_CMD:
  3682                           	callstack 18
  3683                           
  3684                           ;incstack = 0
  3685                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  3686  001014  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  3687  001016                     
  3688                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  3689  001016  908D               	bcf	141,0,c	;volatile
  3690  001018                     
  3691                           ;LCD.c: 132:  LEER_LCD();
  3692  001018  EC6F  F005         	call	i2_LEER_LCD	;wreg free
  3693  00101C                     
  3694                           ;LCD.c: 133:  TRISD = 0b00000000;
  3695  00101C  0E00               	movlw	0
  3696  00101E  6E95               	movwf	149,c	;volatile
  3697  001020                     
  3698                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3699  001020  0E21               	movlw	33
  3700  001022                     i2u85_47:
  3701  001022  2EE8               	decfsz	wreg,f,c
  3702  001024  D7FE               	bra	i2u85_47
  3703  001026  F000               	nop	
  3704  001028                     
  3705                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  3706  001028  928D               	bcf	141,1,c	;volatile
  3707  00102A                     
  3708                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  3709  00102A  948D               	bcf	141,2,c	;volatile
  3710  00102C                     
  3711                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  3712  00102C  908D               	bcf	141,0,c	;volatile
  3713  00102E                     
  3714                           ;LCD.c: 138:  aux = dato & 0xF0;
  3715  00102E  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  3716  001030  0BF0               	andlw	240
  3717  001032  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3718  001034                     
  3719                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  3720  001034  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3721  001036  EC96  F008         	call	i2_ENVIA_NIBBLE
  3722  00103A                     
  3723                           ;LCD.c: 140:  aux = dato<<4;
  3724  00103A  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  3725  00103C  0BF0               	andlw	240
  3726  00103E  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3727  001040                     
  3728                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  3729  001040  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3730  001042  EC96  F008         	call	i2_ENVIA_NIBBLE
  3731  001046  0012               	return		;funcret
  3732  001048                     __end_ofi2_ENVIA_LCD_CMD:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function i2_LEER_LCD *****************
  3736 ;; Defined at:
  3737 ;;		line 144 in file "LCD.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  aux             1    0[COMRAM] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0
  3752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3755 ;;Total ram usage:        1 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		i2_ENVIA_CHAR
  3761 ;;		i2_ENVIA_LCD_CMD
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text37
  3766  000ADE                     __ptext37:
  3767                           	callstack 0
  3768  000ADE                     i2_LEER_LCD:
  3769                           	callstack 18
  3770  000ADE                     
  3771                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  3772  000ADE  0EF8               	movlw	248
  3773  000AE0  6E95               	movwf	149,c	;volatile
  3774  000AE2                     
  3775                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  3776  000AE2  908D               	bcf	141,0,c	;volatile
  3777  000AE4                     
  3778                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  3779  000AE4  828D               	bsf	141,1,c	;volatile
  3780  000AE6                     
  3781                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  3782  000AE6  848D               	bsf	141,2,c	;volatile
  3783  000AE8                     
  3784                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3785  000AE8  0E21               	movlw	33
  3786  000AEA                     i2u86_47:
  3787  000AEA  2EE8               	decfsz	wreg,f,c
  3788  000AEC  D7FE               	bra	i2u86_47
  3789  000AEE  F000               	nop	
  3790  000AF0                     
  3791                           ;LCD.c: 152:  aux = PORTD;
  3792  000AF0  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3793  000AF4                     
  3794                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  3795  000AF4  948D               	bcf	141,2,c	;volatile
  3796  000AF6                     
  3797                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3798  000AF6  0E21               	movlw	33
  3799  000AF8                     i2u87_47:
  3800  000AF8  2EE8               	decfsz	wreg,f,c
  3801  000AFA  D7FE               	bra	i2u87_47
  3802  000AFC  F000               	nop	
  3803  000AFE                     
  3804                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  3805  000AFE  848D               	bsf	141,2,c	;volatile
  3806  000B00                     
  3807                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3808  000B00  0E21               	movlw	33
  3809  000B02                     i2u88_47:
  3810  000B02  2EE8               	decfsz	wreg,f,c
  3811  000B04  D7FE               	bra	i2u88_47
  3812  000B06  F000               	nop	
  3813  000B08                     
  3814                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  3815  000B08  948D               	bcf	141,2,c	;volatile
  3816  000B0A                     i2l1642:
  3817                           
  3818                           ;LCD.c: 158:  aux = aux & 0x80;
  3819  000B0A  5001               	movf	i2LEER_LCD@aux^0,w,c
  3820  000B0C  0B80               	andlw	128
  3821  000B0E  6E01               	movwf	i2LEER_LCD@aux^0,c
  3822                           
  3823                           ;LCD.c: 159:  while(aux == 0x80)
  3824  000B10  EF9E  F005         	goto	i2l1656
  3825  000B14                     i2l87:
  3826                           
  3827                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  3828  000B14  848D               	bsf	141,2,c	;volatile
  3829  000B16                     
  3830                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3831  000B16  0E21               	movlw	33
  3832  000B18                     i2u89_47:
  3833  000B18  2EE8               	decfsz	wreg,f,c
  3834  000B1A  D7FE               	bra	i2u89_47
  3835  000B1C  F000               	nop	
  3836  000B1E                     
  3837                           ;LCD.c: 163:             aux = PORTD;
  3838  000B1E  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3839  000B22                     
  3840                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  3841  000B22  948D               	bcf	141,2,c	;volatile
  3842                           
  3843                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3844  000B24  0E21               	movlw	33
  3845  000B26                     i2u90_47:
  3846  000B26  2EE8               	decfsz	wreg,f,c
  3847  000B28  D7FE               	bra	i2u90_47
  3848  000B2A  F000               	nop	
  3849  000B2C                     
  3850                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  3851  000B2C  848D               	bsf	141,2,c	;volatile
  3852                           
  3853                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3854  000B2E  0E21               	movlw	33
  3855  000B30                     i2u91_47:
  3856  000B30  2EE8               	decfsz	wreg,f,c
  3857  000B32  D7FE               	bra	i2u91_47
  3858  000B34  F000               	nop	
  3859  000B36                     
  3860                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  3861  000B36  948D               	bcf	141,2,c	;volatile
  3862  000B38  EF85  F005         	goto	i2l1642
  3863  000B3C                     i2l1656:
  3864                           
  3865                           ;LCD.c: 159:  while(aux == 0x80)
  3866  000B3C  0E80               	movlw	128
  3867  000B3E  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  3868  000B40  B4D8               	btfsc	status,2,c
  3869  000B42  EFA5  F005         	goto	i2u38_41
  3870  000B46  EFA7  F005         	goto	i2u38_40
  3871  000B4A                     i2u38_41:
  3872  000B4A  EF8A  F005         	goto	i2l87
  3873  000B4E                     i2u38_40:
  3874  000B4E  0012               	return		;funcret
  3875  000B50                     __end_ofi2_LEER_LCD:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function i2_ENVIA_NIBBLE *****************
  3879 ;; Defined at:
  3880 ;;		line 118 in file "LCD.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  dato            1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  dato            1    0[COMRAM] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		i2_ENVIA_CHAR
  3904 ;;		i2_ENVIA_LCD_CMD
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text38
  3909  00112C                     __ptext38:
  3910                           	callstack 0
  3911  00112C                     i2_ENVIA_NIBBLE:
  3912                           	callstack 18
  3913                           
  3914                           ;incstack = 0
  3915                           ;i2ENVIA_NIBBLE@dato stored from wreg
  3916  00112C  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  3917  00112E                     
  3918                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  3919  00112E  0E0F               	movlw	15
  3920  001130  168C               	andwf	140,f,c	;volatile
  3921                           
  3922                           ;LCD.c: 121:  dato &= 0xF0;
  3923  001132  0EF0               	movlw	240
  3924  001134  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  3925                           
  3926                           ;LCD.c: 122:  LATD|= dato;
  3927  001136  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  3928  001138  128C               	iorwf	140,f,c	;volatile
  3929  00113A                     
  3930                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  3931  00113A  848D               	bsf	141,2,c	;volatile
  3932  00113C                     
  3933                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3934  00113C  0E21               	movlw	33
  3935  00113E                     i2u92_47:
  3936  00113E  2EE8               	decfsz	wreg,f,c
  3937  001140  D7FE               	bra	i2u92_47
  3938  001142  F000               	nop	
  3939  001144                     
  3940                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  3941  001144  948D               	bcf	141,2,c	;volatile
  3942  001146  0012               	return		;funcret
  3943  001148                     __end_ofi2_ENVIA_NIBBLE:
  3944                           	callstack 0
  3945                           
  3946                           	psect	rparam
  3947  0000                     
  3948                           	psect	temp
  3949  000031                     btemp:
  3950                           	callstack 0
  3951  000031                     	ds	1
  3952  0000                     int$flags	set	btemp
  3953  0000                     wtemp8	set	btemp+1
  3954  0000                     ttemp5	set	btemp+1
  3955  0000                     ttemp6	set	btemp+4
  3956  0000                     ttemp7	set	btemp+8
  3957                           
  3958                           	psect	idloc
  3959                           
  3960                           ;Config register IDLOC0 @ 0x200000
  3961                           ;	unspecified, using default values
  3962  200000                     	org	2097152
  3963  200000  FF                 	db	255
  3964                           
  3965                           ;Config register IDLOC1 @ 0x200001
  3966                           ;	unspecified, using default values
  3967  200001                     	org	2097153
  3968  200001  FF                 	db	255
  3969                           
  3970                           ;Config register IDLOC2 @ 0x200002
  3971                           ;	unspecified, using default values
  3972  200002                     	org	2097154
  3973  200002  FF                 	db	255
  3974                           
  3975                           ;Config register IDLOC3 @ 0x200003
  3976                           ;	unspecified, using default values
  3977  200003                     	org	2097155
  3978  200003  FF                 	db	255
  3979                           
  3980                           ;Config register IDLOC4 @ 0x200004
  3981                           ;	unspecified, using default values
  3982  200004                     	org	2097156
  3983  200004  FF                 	db	255
  3984                           
  3985                           ;Config register IDLOC5 @ 0x200005
  3986                           ;	unspecified, using default values
  3987  200005                     	org	2097157
  3988  200005  FF                 	db	255
  3989                           
  3990                           ;Config register IDLOC6 @ 0x200006
  3991                           ;	unspecified, using default values
  3992  200006                     	org	2097158
  3993  200006  FF                 	db	255
  3994                           
  3995                           ;Config register IDLOC7 @ 0x200007
  3996                           ;	unspecified, using default values
  3997  200007                     	org	2097159
  3998  200007  FF                 	db	255
  3999                           
  4000                           	psect	config
  4001                           
  4002                           ;Config register CONFIG1L @ 0x300000
  4003                           ;	PLL Selection
  4004                           ;	PLLSEL = PLL4X, 4x clock multiplier
  4005                           ;	PLL Enable Configuration bit
  4006                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4007                           ;	CPU System Clock Postscaler
  4008                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4009                           ;	Low Speed USB mode with 48 MHz system clock
  4010                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  4011  300000                     	org	3145728
  4012  300000  00                 	db	0
  4013                           
  4014                           ;Config register CONFIG1H @ 0x300001
  4015                           ;	Oscillator Selection
  4016                           ;	FOSC = INTOSCIO, Internal oscillator
  4017                           ;	Primary Oscillator Shutdown
  4018                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  4019                           ;	Fail-Safe Clock Monitor
  4020                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4021                           ;	Internal/External Oscillator Switchover
  4022                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4023  300001                     	org	3145729
  4024  300001  08                 	db	8
  4025                           
  4026                           ;Config register CONFIG2L @ 0x300002
  4027                           ;	Power-up Timer Enable
  4028                           ;	nPWRTEN = ON, Power up timer enabled
  4029                           ;	Brown-out Reset Enable
  4030                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  4031                           ;	Brown-out Reset Voltage
  4032                           ;	BORV = 190, BOR set to 1.9V nominal
  4033                           ;	Low-Power Brown-out Reset
  4034                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4035  300002                     	org	3145730
  4036  300002  58                 	db	88
  4037                           
  4038                           ;Config register CONFIG2H @ 0x300003
  4039                           ;	Watchdog Timer Enable bits
  4040                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4041                           ;	Watchdog Timer Postscaler
  4042                           ;	WDTPS = 32768, 1:32768
  4043  300003                     	org	3145731
  4044  300003  3C                 	db	60
  4045                           
  4046                           ; Padding undefined space
  4047  300004                     	org	3145732
  4048  300004  FF                 	db	255
  4049                           
  4050                           ;Config register CONFIG3H @ 0x300005
  4051                           ;	CCP2 MUX bit
  4052                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4053                           ;	PORTB A/D Enable bit
  4054                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4055                           ;	Timer3 Clock Input MUX bit
  4056                           ;	T3CMX = RC0, T3CKI function is on RC0
  4057                           ;	SDO Output MUX bit
  4058                           ;	SDOMX = RB3, SDO function is on RB3
  4059                           ;	Master Clear Reset Pin Enable
  4060                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4061  300005                     	org	3145733
  4062  300005  D1                 	db	209
  4063                           
  4064                           ;Config register CONFIG4L @ 0x300006
  4065                           ;	Stack Full/Underflow Reset
  4066                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4067                           ;	Single-Supply ICSP Enable bit
  4068                           ;	LVP = OFF, Single-Supply ICSP disabled
  4069                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4070                           ;	ICPRT = OFF, ICPORT disabled
  4071                           ;	Extended Instruction Set Enable bit
  4072                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4073                           ;	Background Debugger Enable bit
  4074                           ;	DEBUG = 0x1, unprogrammed default
  4075  300006                     	org	3145734
  4076  300006  81                 	db	129
  4077                           
  4078                           ; Padding undefined space
  4079  300007                     	org	3145735
  4080  300007  FF                 	db	255
  4081                           
  4082                           ;Config register CONFIG5L @ 0x300008
  4083                           ;	Block 0 Code Protect
  4084                           ;	CP0 = OFF, Block 0 is not code-protected
  4085                           ;	Block 1 Code Protect
  4086                           ;	CP1 = OFF, Block 1 is not code-protected
  4087                           ;	Block 2 Code Protect
  4088                           ;	CP2 = OFF, Block 2 is not code-protected
  4089                           ;	Block 3 Code Protect
  4090                           ;	CP3 = OFF, Block 3 is not code-protected
  4091  300008                     	org	3145736
  4092  300008  0F                 	db	15
  4093                           
  4094                           ;Config register CONFIG5H @ 0x300009
  4095                           ;	Boot Block Code Protect
  4096                           ;	CPB = OFF, Boot block is not code-protected
  4097                           ;	Data EEPROM Code Protect
  4098                           ;	CPD = OFF, Data EEPROM is not code-protected
  4099  300009                     	org	3145737
  4100  300009  C0                 	db	192
  4101                           
  4102                           ;Config register CONFIG6L @ 0x30000A
  4103                           ;	Block 0 Write Protect
  4104                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4105                           ;	Block 1 Write Protect
  4106                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4107                           ;	Block 2 Write Protect
  4108                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4109                           ;	Block 3 Write Protect
  4110                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4111  30000A                     	org	3145738
  4112  30000A  0F                 	db	15
  4113                           
  4114                           ;Config register CONFIG6H @ 0x30000B
  4115                           ;	Configuration Registers Write Protect
  4116                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4117                           ;	Boot Block Write Protect
  4118                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4119                           ;	Data EEPROM Write Protect
  4120                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4121  30000B                     	org	3145739
  4122  30000B  E0                 	db	224
  4123                           
  4124                           ;Config register CONFIG7L @ 0x30000C
  4125                           ;	Block 0 Table Read Protect
  4126                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4127                           ;	Block 1 Table Read Protect
  4128                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4129                           ;	Block 2 Table Read Protect
  4130                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4131                           ;	Block 3 Table Read Protect
  4132                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4133  30000C                     	org	3145740
  4134  30000C  0F                 	db	15
  4135                           
  4136                           ;Config register CONFIG7H @ 0x30000D
  4137                           ;	Boot Block Table Read Protect
  4138                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4139  30000D                     	org	3145741
  4140  30000D  40                 	db	64
  4141                           tosu	equ	0xFFF
  4142                           tosh	equ	0xFFE
  4143                           tosl	equ	0xFFD
  4144                           stkptr	equ	0xFFC
  4145                           pclatu	equ	0xFFB
  4146                           pclath	equ	0xFFA
  4147                           pcl	equ	0xFF9
  4148                           tblptru	equ	0xFF8
  4149                           tblptrh	equ	0xFF7
  4150                           tblptrl	equ	0xFF6
  4151                           tablat	equ	0xFF5
  4152                           prodh	equ	0xFF4
  4153                           prodl	equ	0xFF3
  4154                           indf0	equ	0xFEF
  4155                           postinc0	equ	0xFEE
  4156                           postdec0	equ	0xFED
  4157                           preinc0	equ	0xFEC
  4158                           plusw0	equ	0xFEB
  4159                           fsr0h	equ	0xFEA
  4160                           fsr0l	equ	0xFE9
  4161                           wreg	equ	0xFE8
  4162                           indf1	equ	0xFE7
  4163                           postinc1	equ	0xFE6
  4164                           postdec1	equ	0xFE5
  4165                           preinc1	equ	0xFE4
  4166                           plusw1	equ	0xFE3
  4167                           fsr1h	equ	0xFE2
  4168                           fsr1l	equ	0xFE1
  4169                           bsr	equ	0xFE0
  4170                           indf2	equ	0xFDF
  4171                           postinc2	equ	0xFDE
  4172                           postdec2	equ	0xFDD
  4173                           preinc2	equ	0xFDC
  4174                           plusw2	equ	0xFDB
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8

Data Sizes:
    Strings     187
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_11(CODE[28]), STR_10(CODE[12]), STR_9(CODE[25]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[26]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_11(CODE[28]), STR_10(CODE[12]), STR_9(CODE[25]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[26]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[10]), 

    EUSART_Stringsend@cadena	PTR unsigned char  size(2) Largest target is 28
		 -> STR_11(CODE[28]), STR_9(CODE[25]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[26]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_pantallazo
    _pantallazo->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->_EUSART_Stringsend
    _INT1_ISR->i1_ESCRIBE_MENSAJE2
    i1_POS_CURSOR->i1_ENVIA_LCD_CMD
    i1_ESCRIBE_MENSAJE2->i1_strlen
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD
    i1_BORRAR_LCD->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD
    _EUSART_Stringsend->i1_strlen

Critical Paths under _INT0_EUSARTRX_ISR in COMRAM

    _INT0_EUSARTRX_ISR->i2_ESCRIBE_MENSAJE2
    _INT0_EUSARTRX_ISR->i2_EUSART_Stringsend
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_EUSART_Stringsend->i2_strlen
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_EUSARTRX_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1807
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    1282
                                             46 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     460
                                             39 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     702
                                             40 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     216
                                             36 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                             37 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             40 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             39 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             39 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             37 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             9     9      0    1820
                                             27 COMRAM     9     9      0
                     _EUSART_Newline
                  _EUSART_Stringsend
                       i1_BORRAR_LCD
                       i1_ENVIA_CHAR
                 i1_ESCRIBE_MENSAJE2
                       i1_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i1_POS_CURSOR                                         2     1      1     297
                                             20 COMRAM     2     1      1
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i1_ESCRIBE_MENSAJE2                                   6     4      2     465
                                             21 COMRAM     6     4      2
                       i1_ENVIA_CHAR
                           i1_strlen
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_CHAR                                         2     2      0     183
                                             18 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i1_BORRAR_LCD                                         0     0      0     183
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             18 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i1_LEER_LCD                                           1     1      0      70
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_ENVIA_NIBBLE                                       1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Stringsend                                    6     4      2     646
                                             21 COMRAM     6     4      2
                    _EUSART_Datasend
                           i1_strlen
 ---------------------------------------------------------------------------------
 (8) i1_strlen                                             4     2      2     142
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _EUSART_Datasend                                      1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Newline                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_EUSARTRX_ISR                                   7     7      0    1607
                                             10 COMRAM     7     7      0
                       i2_BORRAR_LCD
                       i2_ENVIA_CHAR
                 i2_ESCRIBE_MENSAJE2
                   i2_EUSART_Newline
                i2_EUSART_Stringsend
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (11) i2_POS_CURSOR                                        2     1      1     297
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_Stringsend                                 6     4      2     433
                                              4 COMRAM     6     4      2
                  i2_EUSART_Datasend
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_Datasend                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_Newline                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_ESCRIBE_MENSAJE2                                  6     4      2     465
                                              4 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (11) i2_BORRAR_LCD                                        0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (13) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
           _ENVIA_NIBBLE
           _LEER_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _strlen
     _POS_CURSOR
       _ENVIA_LCD_CMD

 _INT1_ISR (ROOT)
   _EUSART_Newline
   _EUSART_Stringsend
     _EUSART_Datasend
     i1_strlen
   i1_BORRAR_LCD
     i1_ENVIA_LCD_CMD
       i1_ENVIA_NIBBLE
       i1_LEER_LCD
   i1_ENVIA_CHAR
     i1_ENVIA_NIBBLE
     i1_LEER_LCD
   i1_ESCRIBE_MENSAJE2
     i1_ENVIA_CHAR
     i1_strlen
   i1_POS_CURSOR
     i1_ENVIA_LCD_CMD

 _INT0_EUSARTRX_ISR (ROOT)
   i2_BORRAR_LCD
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ENVIA_CHAR
     i2_ENVIA_NIBBLE
     i2_LEER_LCD
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
     i2_strlen
   i2_EUSART_Newline
   i2_EUSART_Stringsend
     i2_EUSART_Datasend
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     30      30       1       51.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhlh        2      0       0      22        0.0%
BITBIGSFRhhllh      1F      0       0      23        0.0%
BITBIGSFRhhllll      C      0       0      24        0.0%
BITBIGSFRhhllll      6      0       0      25        0.0%
BITBIGSFRhll         4      0       0      26        0.0%
BITBIGSFRlhhh        2      0       0      27        0.0%
BITBIGSFRlhhl        3      0       0      28        0.0%
BITBIGSFRlhl         1      0       0      29        0.0%
BITBIGSFRllh        23      0       0      30        0.0%
BITBIGSFRlll         8      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BIGRAM             7FF      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 14 21:22:06 2023

                         l26 0DEC                           l39 1198                           l71 0F42  
                         l80 110E                           l56 10A6                           l74 11A0  
                         l83 0F76                           l68 0C42                           l77 0BF8  
                         l87 0A30                           l89 0A6A                           l97 1076  
                         u10 0A6A                           u11 0A66                           u20 108A  
                         u21 1086                           u30 10A0                           u31 109C  
                         bsr 000FE0            i2_EUSART_Datasend 115E                ENVIA_CHAR@aux 0027  
                        l164 0BA6                          l193 117C                          l194 117C  
                        l188 0DB2                          l900 0E26                          l910 0A04  
                        l902 09FA                          l920 0A1C                          l912 0A0C  
                        l904 09FE                          l930 0A3E                          l922 0A24  
                        l914 0A10                          l906 0A00                          l940 10F6  
                        l932 0A48                          l924 0A26                          l916 0A12  
                        l908 0A02                          l942 1102                          l934 0A52  
                        l926 0A32                          l918 0A1A                          l950 0F48  
                        l944 1104                          l928 0A3A                          l960 0F5C  
                        l952 0F4C                          l946 110C                          l938 0A58  
                        l962 0F5E                          l954 0F50                          l970 1192  
                        l964 0F64                          l956 0F58                          l948 0F46  
                        l972 107A                          l980 0F12                          l966 0F6A  
                        l958 0F5A                          l974 108A                          l990 0F26  
                        l982 0F14                          l968 0F70                          l976 1090  
                        l992 0F28                          l984 0F18                          l978 10A0  
                        l994 0F2A                          l986 0F1C                          l996 0F30  
                        l988 0F24                          l998 0F36    __end_of_INT0_EUSARTRX_ISR 09FA  
                        u400 0DE4                          u401 0DE0                          u410 0C42  
                        u411 0C3E                          u360 0E1A                          u361 0E16  
                        u390 0DC6             i2_EUSART_Newline 10CE                          u607 1060  
                        u391 0DC2                          u617 0BB8                          u707 1106  
                        u627 0BC8                          u637 0F52                          u647 0A06  
                        u657 0A14                          u577 0DA2                          u667 0A1E  
                        u587 0F1E                          u677 0A34                          u597 104E  
                        u687 0A42                          u697 0A4C           ?i2_EUSART_Datasend 0001  
                LEER_LCD@aux 0025                          wreg 000FE8             ??i2_ENVIA_NIBBLE 0001  
               ?_CURSOR_HOME 0001                   _TXSTA1bits 000FAC              i1_ENVIA_LCD_CMD 0FAC  
             ??_ENVIA_NIBBLE 0025        i2EUSART_Datasend@dato 0001          ??i2_EUSART_Datasend 0001  
                ?i1_LEER_LCD 0001               ENVIA_CHAR@dato 0026                         l1000 0F3C  
                       l1012 119A                         l1020 0BC0                         l1030 0BE6  
                       l1022 0BCE                         l1014 0BA8                         l1032 0BEC  
                       l1024 0BD4                         l1016 0BAC                         l1034 0BF2  
                       l1026 0BDA                         l1018 0BB2                         l1028 0BE0  
                       l1300 0B86                         l1150 1056                         l1310 0B98  
                       l1302 0B88                         l1152 105A                         l1320 0BA2  
                       l1312 0B9A                         l1304 0B8A                         l1314 0B9C  
                       l1306 0B8C                         l1148 1048                         l1316 0B9E  
                       l1308 0B8E                         l1318 0BA0                         l1270 0B56  
                       l1280 0B62                         l1272 0B5A                         l1290 0B6C  
                       l1282 0B64                         l1274 0B5C                         l1266 0B50  
                       l1292 0B6E                         l1284 0B66                         l1276 0B5E  
                       l1268 0B54                         l1294 0B80                         l1286 0B68  
                       l1278 0B60                         l1296 0B82                         l1288 0B6A  
                       l1560 0DFE                         l1800 0D76                         l1298 0B84  
                       l1562 0E1A                         l1802 0D82                         l1556 0DEE  
                       l1660 0DC6                         l1804 0D98                         l1558 0DFA  
                       l1670 0C0A                         l1662 0DD2                         l1806 0DAE  
                       l1672 0C12                         l1664 0DE4                         l1674 0C2E  
                       l1666 0BFA                         l1658 0DB6                         l1676 0C30  
                       l1668 0C0A                         l1862 1174                         l1864 1178  
                       l1798 0D6C                         STR_1 08B2                         STR_2 089C  
                       STR_3 08A8                         STR_4 081D                         STR_5 0860  
                       STR_6 0850                         STR_7 0870                         STR_8 0880  
                       STR_9 0837             i1POS_CURSOR@fila 0016                         _LATD 000F8C  
                       i1l26 0E60                         i1l71 0FAA                         i1l80 112A  
                       i2l26 0ED4                         i1l74 11A8                         i1l83 0FDE  
                       i1l68 0C8C                         i2l71 1012                         i1l87 0AA2  
                       i2l80 1146                         i1l89 0ADC                         i2l74 11B0  
                       i2l83 1046                         i2l68 0D6A                         i2l87 0B14  
                       i2l89 0B4E                  ?i2_LEER_LCD 0001                         _main 1174  
                       btemp 0031            ??i2_ENVIA_LCD_CMD 0002                         start 00BE  
              ?_CURSOR_ONOFF 0001                 ___param_bank 000000              ??_ENVIA_LCD_CMD 0026  
           __end_of_LCD_INIT 1078    __end_ofi2_EUSART_Datasend 1174             __end_of_LEER_LCD 0A6C  
           __end_of_INT1_ISR 00BE                        ?_main 0001                        STR_10 0890  
                      STR_11 0801                        i1l220 009E                        i1l170 115C  
                      i1l218 0068                        i1l173 10AC                        i1l167 114E  
                      i1l176 10BE                        i2l201 0944                        i1l185 0CD6  
                      i2l202 090E                        i1l179 10CC                        i2l213 09E6  
                      i2l170 1172                        i1l900 0E9A                        i2l173 10D2  
                      i2l167 1164                        i2l176 10E4                        i2l185 0D20  
                      i2l179 10F2                        i2l900 0F0E                        _PORTD 000F83  
                      _TRISD 000F95                        _TRISE 000F96            ??_EUSART_Datasend 0012  
                ?_POS_CURSOR 0028                        tablat 000FF5                        ttemp5 0032  
                      ttemp6 0035                        ttemp7 0039                        status 000FD8  
                      wtemp8 0032               ??_CURSOR_ONOFF 0028             __end_ofi1_strlen 0E9C  
           __end_ofi2_strlen 0F10              __initialization 1184                 __end_of_main 1184  
              ?i1_BORRAR_LCD 0001     i2ESCRIBE_MENSAJE2@cadena 0005      __end_ofi1_ENVIA_LCD_CMD 0FE0  
                     ??_main 0031                __activetblptr 000002                ?i1_ENVIA_CHAR 0001  
            i1ENVIA_CHAR@aux 0014                ?i2_BORRAR_LCD 0001                       _ANSELD 000F5E  
                     _ANSELE 000F5F                       i1l1322 10A8                       i1l1154 114A  
                     i1l1324 10BA                       i1l1600 0A8E                       i1l1610 0AB0  
                     i1l1602 0A96                       i1l1612 0ABA                       i1l1604 0A98  
                     i1l1614 0AC4                       i1l1606 0AA4                       i1l1608 0AAC  
                     i1l1570 1120                       i1l1618 0ACA                       i1l1730 0FC0  
                     i1l1722 0FAE                       i1l1810 0E3A                       i1l1572 1128  
                     i1l1740 0FD2                       i1l1732 0FC2                       i1l1724 0FB0  
                     i1l1812 0E46                       i1l1566 1112                       i1l1590 0A76  
                     i1l1582 0A6C                       i1l1742 0FD8                       i1l1734 0FC4  
                     i1l1726 0FB4                       i1l1830 0C5C                       i1l1814 0E58  
                     i1l1568 111E                       i1l1592 0A7E                       i1l1584 0A70  
                     i1l1736 0FC6                       i1l1728 0FB8                       i1l1680 0F7C  
                     i1l1832 0C78                       i1l1824 0C44                       i1l1808 0E2A  
                     i1l1770 0E6E                       i1l1594 0A82                       i1l1586 0A72  
                     i1l1738 0FCC                       i1l1690 0F90                       i1l1682 0F80  
                     i1l1834 0C7A                       i1l1826 0C54                       i1l1930 0060  
                     i1l1922 0036                       i1l1772 0E72                       i1l1596 0A84  
                     i1l1588 0A74                       i1l1692 0F92                       i1l1684 0F84  
                     i1l1828 0C54                       i1l1940 0078                       i1l1932 0064  
                     i1l1924 0038                       i1l1774 0E8E                       i1l1790 0C9E  
                     i1l1598 0A8C                       i1l1694 0F98                       i1l1686 0F8C  
                     i1l1678 0F7A                       i1l1942 0088                       i1l1926 0042  
                     i1l1768 0E62                       i1l1792 0CA6                       i1l1848 11A2  
                     i1l1696 0F9E                       i1l1688 0F8E                       i1l1944 009A  
                     i1l1928 004E                       i1l1794 0CC2                       i1l1698 0FA4  
                     i1l1938 006A                       i1l1796 0CC4                       i1l1788 0C8E  
                     i2l1620 0ADE                       i2l1700 0FE2                       i2l1630 0AF0  
                     i2l1622 0AE2                       i2l1710 0FF6                       i2l1702 0FE4  
                     i2l1390 10CE                       i2l1640 0B08                       i2l1632 0AF4  
                     i2l1624 0AE4                       i2l1720 100C                       i2l1712 0FF8  
                     i2l1704 0FE8                       i2l1392 10E0                       i2l1650 0B2C  
                     i2l1642 0B0A                       i2l1634 0AF6                       i2l1626 0AE6  
                     i2l1714 0FFA                       i2l1706 0FEC                       i2l1580 1144  
                     i2l1652 0B36                       i2l1644 0B16                       i2l1636 0AFE  
                     i2l1628 0AE8                       i2l1716 1000                       i2l1708 0FF4  
                     i2l1820 0EBA                       i2l1574 112E                       i2l1646 0B1E  
                     i2l1638 0B00                       i2l1750 1020                       i2l1718 1006  
                     i2l1822 0ECC                       i2l1910 099C                       i2l1902 097C  
                     i2l1576 113A                       i2l1648 0B22                       i2l1656 0B3C  
                     i2l1760 1034                       i2l1752 1028                       i2l1744 1016  
                     i2l1840 0D32                       i2l1816 0E9E                       i2l1578 113C  
                     i2l1762 103A                       i2l1754 102A                       i2l1746 1018  
                     i2l1850 11AA                       i2l1842 0D3A                       i2l1818 0EAE  
                     i2l1906 098C                       i2l1764 1040                       i2l1756 102C  
                     i2l1748 101C                       i2l1780 0EE2                       i2l1844 0D56  
                     i2l1836 0D22                       i2l1860 0D0E                       i2l1852 0CD8  
                     i2l1916 09AC                       i2l1758 102E                       i2l1782 0EE6  
                     i2l1846 0D58                       i2l1838 0D32                       i2l1766 1160  
                     i2l1854 0CE8                       i2l1870 08DE                       i2l1784 0F02  
                     i2l1856 0CF0                       i2l1872 08E8                       i2l1778 0ED6  
                     i2l1858 0D0C                       i2l1890 093C                       i2l1874 08F4  
                     i2l1866 08CE                       i2l1892 0952                       i2l1884 0910  
                     i2l1876 0906                       i2l1868 08DC                       i2l1966 09C0  
                     i2l1894 0958                       i2l1886 0918                       i2l1878 090A  
                     i2l1896 0964                       i2l1888 092A                       i2l1898 096C  
                     _RCREG1 000FAE                       _OSCCON 000FD3   __end_ofi1_ESCRIBE_MENSAJE2 0C8E  
                     _SPBRG1 000FAF               _EUSART_Newline 10A8                       _TXREG1 000FAD  
        i2ESCRIBE_MENSAJE2@i 000A                ?i2_ENVIA_CHAR 0001               ??i1_BORRAR_LCD 0015  
       __end_of_ENVIA_NIBBLE 1110                       isa$std 000001                       _strlen 0DEE  
             ??i1_ENVIA_CHAR 0013                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8               ??i2_BORRAR_LCD 0004  
               ??_BORRAR_LCD 0028          EUSART_Datasend@dato 0012    i2EUSART_Stringsend@cadena 0005  
     __end_of_EUSART_Newline 10CE                    ?_LCD_INIT 0001                    ?_LEER_LCD 0001  
                 __accesstop 0060      __end_of__initialization 1184                    ?_INT1_ISR 0001  
               ??_LCD_CONFIG 0028               ??i2_ENVIA_CHAR 0002     __end_ofi2_EUSART_Newline 10F4  
              ___rparam_used 000001                 ??_ENVIA_CHAR 0026               __pcstackCOMRAM 0001  
              ?i1_POS_CURSOR 0015          i2_EUSART_Stringsend 0CD8           __end_of_BORRAR_LCD 11A2  
           ?i1_ENVIA_LCD_CMD 0001          i2ENVIA_LCD_CMD@dato 0002             _ESCRIBE_MENSAJE2 0BFA  
           ENVIA_LCD_CMD@aux 0027         __end_of_CURSOR_ONOFF 10A8           __end_of_LCD_CONFIG 0BFA  
         __end_of_ENVIA_CHAR 0F44              i2_ENVIA_LCD_CMD 1014                    ?i1_strlen 0012  
                  ?i2_strlen 0001                 ??i1_LEER_LCD 0012                INT1_ISR@x_var 0024  
              ?i2_POS_CURSOR 0004              ?_EUSART_Newline 0001         ?i2_EUSART_Stringsend 0005  
                 ??_LCD_INIT 0029                 ??i2_LEER_LCD 0001                   ??_LEER_LCD 0025  
           ENVIA_NIBBLE@dato 0025                   ??_INT1_ISR 001C             i1ENVIA_CHAR@dato 0013  
             ??i1_POS_CURSOR 0016              _EUSART_Datasend 1148           __end_ofi1_LEER_LCD 0ADE  
 __end_ofi2_ESCRIBE_MENSAJE2 0D6C                      ?_strlen 0025           __end_ofi2_LEER_LCD 0B50  
        i1POS_CURSOR@columna 0015                      i1u10_20 115C                      i1u10_21 1158  
                    i1u14_20 10BA                      i1u14_21 10B6                      i1u15_20 10CC  
                    i1u15_21 10C8                      i1u50_20 0C8C                      i1u50_21 0C88  
                    i1u43_20 0E8E                      i1u43_21 0E8A                      i1u45_20 0CD6  
                    i1u37_20 0ADC                      i1u45_21 0CD2                      i1u37_21 0AD8  
                    i1u46_20 0E3A                      i1u46_21 0E36                      i1u47_20 0E58  
                    i1u47_21 0E54                      i2u23_40 10E0                      i2u23_41 10DC  
                    i1u71_27 0070                      i1u56_20 009A                      i1u56_21 0096  
                    i2u24_40 10F2                      i2u24_41 10EE                      i1u80_27 0ABE  
                    i1u72_27 0080                      i1u81_27 1122                      i1u73_27 0F86  
                    i2u42_40 1172                      i2u42_41 116E                      i1u74_27 0FBA  
                    i2u51_40 0D6A                      i2u51_41 0D66                      i1u75_27 0A78  
                    i2u44_40 0F02                      i2u52_40 0D20                      i2u44_41 0EFE  
                    i2u52_41 0D1C                      i1u76_27 0A86                      i2u53_40 08DC  
                    i2u53_41 08D8                      i1u77_27 0A90                      i2u38_40 0B4E  
                    i2u54_40 093C                      i2u38_41 0B4A                      i2u54_41 0938  
                    i1u78_27 0AA6                      i2u55_40 0952                      i2u55_41 094E  
                    i1u79_27 0AB4                      i2u48_40 0EAE                      i2u48_41 0EAA  
                    i2u49_40 0ECC                      i2u49_41 0EC8                   ??i1_strlen 0014  
                    i2u90_47 0B26                      i2u82_47 0912                      _SPBRGH1 000FB0  
                    i2u91_47 0B30                      i2u83_47 0920                      i2u92_47 113E  
                    i2u84_47 0FEE                      i2u85_47 1022                      i2u86_47 0AEA  
                    i2u87_47 0AF8                      i2u88_47 0B02                      i2u89_47 0B18  
                 ??i2_strlen 0003               ??i2_POS_CURSOR 0005         __end_ofi1_BORRAR_LCD 11AA  
               ??_POS_CURSOR 0029        ??i2_EUSART_Stringsend 0007         __end_ofi1_ENVIA_CHAR 0FAC  
                    __Hparam 0000                      __Lparam 0000            __end_of_configuro 0BA8  
       __end_ofi2_BORRAR_LCD 11B2                 __psmallconst 0800        __end_of_ENVIA_LCD_CMD 0F78  
                    __pcinit 1184           __end_of_POS_CURSOR 0DEE                      __ramtop 0800  
                    __ptext0 1174                      __ptext1 0D6C                      __ptext2 0DB4  
                    __ptext3 0BFA                      __ptext4 0DEE                      __ptext5 0F10  
                    __ptext6 0B50                      __ptext7 1048                      __ptext8 0BA8  
                    __ptext9 1078      __end_ofi2_ENVIA_LCD_CMD 1048         __end_ofi2_ENVIA_CHAR 1014  
                 _pantallazo 0D6C        i1ESCRIBE_MENSAJE2@tam 001A              i2ENVIA_CHAR@aux 0003  
             __pintcode_body 08BE                 _ENVIA_NIBBLE 10F4         end_of_initialization 1184  
     EUSART_Stringsend@x_var 001B                __Lmediumconst 0000                      int_func 08BE  
     i2EUSART_Stringsend@tam 0009      __end_of_EUSART_Datasend 115E     i1ESCRIBE_MENSAJE2@cadena 0016  
         i1_ESCRIBE_MENSAJE2 0C44           i1ENVIA_LCD_CMD@aux 0014                      strlen@a 0027  
                    strlen@s 0025          ?i1_ESCRIBE_MENSAJE2 0016            ESCRIBE_MENSAJE2@i 002E  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
         i1ENVIA_NIBBLE@dato 0012         __end_ofi1_POS_CURSOR 0E62               i1_ENVIA_NIBBLE 1110  
       ??i1_ESCRIBE_MENSAJE2 0018            ?i2_EUSART_Newline 0001     __end_of_ESCRIBE_MENSAJE2 0C44  
               _CURSOR_ONOFF 1078           CURSOR_ONOFF@estado 0028           ??i2_EUSART_Newline 0001  
       __end_ofi2_POS_CURSOR 0ED6             ?i2_ENVIA_LCD_CMD 0001               __end_of_strlen 0E28  
              ??_CURSOR_HOME 0028          start_initialization 1184                  ?_pantallazo 0001  
           ??_EUSART_Newline 0012                i1LEER_LCD@aux 0012       __end_ofi1_ENVIA_NIBBLE 112C  
                  i1strlen@a 0014                    i1strlen@s 0012            _EUSART_Stringsend 0C8E  
                  i2strlen@a 0003                    i2strlen@s 0001            ENVIA_LCD_CMD@dato 0026  
           i2POS_CURSOR@fila 0005           ?_EUSART_Stringsend 0016             ?_EUSART_Datasend 0001  
        ??_EUSART_Stringsend 0018                 i1_BORRAR_LCD 11A2                     ??_strlen 0027  
               i1_ENVIA_CHAR 0F78                i2LEER_LCD@aux 0001    __end_of_EUSART_Stringsend 0CD8  
               i2_BORRAR_LCD 11AA              ?i1_ENVIA_NIBBLE 0001           i2_ESCRIBE_MENSAJE2 0D22  
         i2ENVIA_LCD_CMD@aux 0003          __end_of_CURSOR_HOME 119A               i2_ENVIA_NIBBLE 112C  
        ?i2_ESCRIBE_MENSAJE2 0005                 i2_ENVIA_CHAR 0FE0           i2ENVIA_NIBBLE@dato 0001  
                  __pintcode 0008                  __pintcodelo 0018                    _configuro 0B50  
       ??i2_ESCRIBE_MENSAJE2 0007                  __smallconst 0800  __end_ofi2_EUSART_Stringsend 0D22  
        i2POS_CURSOR@columna 0004       __end_ofi2_ENVIA_NIBBLE 1148                     _LCD_INIT 1048  
                   _LEER_LCD 09FA                     _INT1_ISR 0018                     _LATAbits 000F89  
                   _LATEbits 000F8D                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
                   _RCONbits 000FD0                 i1_POS_CURSOR 0E28               POS_CURSOR@fila 0029  
                 ?_configuro 0001       ESCRIBE_MENSAJE2@cadena 0029                     _WPUBbits 000F85  
                _CURSOR_HOME 1192                     i1_strlen 0E62        i2ESCRIBE_MENSAJE2@tam 0009  
                   i2_strlen 0ED6                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
               i2_POS_CURSOR 0E9C              ?i2_ENVIA_NIBBLE 0001            ??i1_ENVIA_LCD_CMD 0013  
                   __Hrparam 0000            ?_ESCRIBE_MENSAJE2 0029                     __Lrparam 0000  
         ??_ESCRIBE_MENSAJE2 002B                   _ANSELAbits 000F5B                   _ANSELBbits 000F5C  
                 _ANSELCbits 000F5D                 ??_pantallazo 002F     i2EUSART_Stringsend@x_var 000A  
                   __ptext10 1192                     __ptext11 119A                     __ptext20 0FAC  
                   __ptext12 0F44                     __ptext21 0A6C                     __ptext13 09FA  
                   __ptext30 115E                     __ptext22 1110                     __ptext14 10F4  
                   __ptext31 10CE                     __ptext23 0C8E                     __ptext32 0D22  
                   __ptext24 0E62                     __ptext16 0E28                     __ptext33 0ED6  
                   __ptext25 1148                     __ptext17 0C44                     __ptext34 0FE0  
                   __ptext26 10A8                     __ptext18 0F78                     __ptext35 11AA  
                   __ptext19 11A2                     __ptext36 1014                     __ptext28 0E9C  
                   __ptext37 0ADE                     __ptext29 0CD8                     __ptext38 112C  
                 _BORRAR_LCD 119A                   _LCD_CONFIG 0BA8          i1ESCRIBE_MENSAJE2@i 001B  
                 _ENVIA_CHAR 0F10         EUSART_Stringsend@tam 001A                     isa$xinst 000000  
         __end_of_pantallazo 0DB4                     int$flags 0031      EUSART_Stringsend@cadena 0016  
           i2ENVIA_CHAR@dato 0002                _ENVIA_LCD_CMD 0F44                  ??_configuro 002A  
                 _INTCONbits 000FF2             ??i1_ENVIA_NIBBLE 0012                   i1_LEER_LCD 0A6C  
                   intlevel1 0000                     intlevel2 0000                   i2_LEER_LCD 0ADE  
                 _RCSTA1bits 000FAB               ?_ENVIA_LCD_CMD 0001          i1ENVIA_LCD_CMD@dato 0013  
          _INT0_EUSARTRX_ISR 0008          ESCRIBE_MENSAJE2@tam 002D           ?_INT0_EUSARTRX_ISR 0001  
                ?_BORRAR_LCD 0001                ?_ENVIA_NIBBLE 0001       INT0_EUSARTRX_ISR@x_var 0011  
                 _POS_CURSOR 0DB4          ??_INT0_EUSARTRX_ISR 000B                  ?_LCD_CONFIG 0001  
                ?_ENVIA_CHAR 0001            POS_CURSOR@columna 0028  
