

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 16 18:47:25 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1
    37                           	psect	text29,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.35
    58                           ; Generated 05/05/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F45K50 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     _ANSELAbits	set	3931
    93  0000                     _TRISAbits	set	3986
    94  0000                     _OSCCON	set	4051
    95  0000                     _INTCON3bits	set	4080
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _TXSTAbits	set	4012
    99  0000                     _RCONbits	set	4048
   100  0000                     _TRISE	set	3990
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISB	set	3987
   104  0000                     _PORTD	set	3971
   105  0000                     _WPUB	set	3973
   106  0000                     _ANSELE	set	3935
   107  0000                     _ANSELD	set	3934
   108  0000                     _ANSELCbits	set	3933
   109  0000                     _ANSELB	set	3932
   110  0000                     _INTCONbits	set	4082
   111  0000                     _LATAbits	set	3977
   112  0000                     _TXREG1	set	4013
   113  0000                     _SPBRG1	set	4015
   114  0000                     _SPBRGH1	set	4016
   115  0000                     _LATD	set	3980
   116  0000                     _LATEbits	set	3981
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_7:
   123  000801  4D                 	db	77	;'M'
   124  000802  6F                 	db	111	;'o'
   125  000803  76                 	db	118	;'v'
   126  000804  69                 	db	105	;'i'
   127  000805  65                 	db	101	;'e'
   128  000806  6E                 	db	110	;'n'
   129  000807  64                 	db	100	;'d'
   130  000808  6F                 	db	111	;'o'
   131  000809  20                 	db	32
   132  00080A  73                 	db	115	;'s'
   133  00080B  65                 	db	101	;'e'
   134  00080C  72                 	db	114	;'r'
   135  00080D  76                 	db	118	;'v'
   136  00080E  6F                 	db	111	;'o'
   137  00080F  6D                 	db	109	;'m'
   138  000810  6F                 	db	111	;'o'
   139  000811  74                 	db	116	;'t'
   140  000812  6F                 	db	111	;'o'
   141  000813  72                 	db	114	;'r'
   142  000814  20                 	db	32
   143  000815  61                 	db	97	;'a'
   144  000816  20                 	db	32
   145  000817  63                 	db	99	;'c'
   146  000818  65                 	db	101	;'e'
   147  000819  72                 	db	114	;'r'
   148  00081A  6F                 	db	111	;'o'
   149  00081B  20                 	db	32
   150  00081C  67                 	db	103	;'g'
   151  00081D  72                 	db	114	;'r'
   152  00081E  61                 	db	97	;'a'
   153  00081F  64                 	db	100	;'d'
   154  000820  6F                 	db	111	;'o'
   155  000821  73                 	db	115	;'s'
   156  000822  00                 	db	0
   157  000823                     STR_10:
   158  000823  4D                 	db	77	;'M'
   159  000824  6F                 	db	111	;'o'
   160  000825  76                 	db	118	;'v'
   161  000826  69                 	db	105	;'i'
   162  000827  65                 	db	101	;'e'
   163  000828  6E                 	db	110	;'n'
   164  000829  64                 	db	100	;'d'
   165  00082A  6F                 	db	111	;'o'
   166  00082B  20                 	db	32
   167  00082C  73                 	db	115	;'s'
   168  00082D  65                 	db	101	;'e'
   169  00082E  72                 	db	114	;'r'
   170  00082F  76                 	db	118	;'v'
   171  000830  6F                 	db	111	;'o'
   172  000831  6D                 	db	109	;'m'
   173  000832  6F                 	db	111	;'o'
   174  000833  74                 	db	116	;'t'
   175  000834  6F                 	db	111	;'o'
   176  000835  72                 	db	114	;'r'
   177  000836  20                 	db	32
   178  000837  61                 	db	97	;'a'
   179  000838  20                 	db	32
   180  000839  31                 	db	49	;'1'
   181  00083A  38                 	db	56	;'8'
   182  00083B  30                 	db	48	;'0'
   183  00083C  20                 	db	32
   184  00083D  67                 	db	103	;'g'
   185  00083E  72                 	db	114	;'r'
   186  00083F  61                 	db	97	;'a'
   187  000840  64                 	db	100	;'d'
   188  000841  6F                 	db	111	;'o'
   189  000842  73                 	db	115	;'s'
   190  000843  00                 	db	0
   191  000844                     STR_4:
   192  000844  53                 	db	83	;'S'
   193  000845  6F                 	db	111	;'o'
   194  000846  79                 	db	121	;'y'
   195  000847  20                 	db	32
   196  000848  65                 	db	101	;'e'
   197  000849  6C                 	db	108	;'l'
   198  00084A  20                 	db	32
   199  00084B  70                 	db	112	;'p'
   200  00084C  69                 	db	105	;'i'
   201  00084D  63                 	db	99	;'c'
   202  00084E  31                 	db	49	;'1'
   203  00084F  38                 	db	56	;'8'
   204  000850  2C                 	db	44
   205  000851  20                 	db	32
   206  000852  68                 	db	104	;'h'
   207  000853  61                 	db	97	;'a'
   208  000854  7A                 	db	122	;'z'
   209  000855  6D                 	db	109	;'m'
   210  000856  65                 	db	101	;'e'
   211  000857  20                 	db	32
   212  000858  63                 	db	99	;'c'
   213  000859  61                 	db	97	;'a'
   214  00085A  73                 	db	115	;'s'
   215  00085B  6F                 	db	111	;'o'
   216  00085C  00                 	db	0
   217  00085D                     STR_5:
   218  00085D  53                 	db	83	;'S'
   219  00085E  65                 	db	101	;'e'
   220  00085F  72                 	db	114	;'r'
   221  000860  76                 	db	118	;'v'
   222  000861  6F                 	db	111	;'o'
   223  000862  6D                 	db	109	;'m'
   224  000863  6F                 	db	111	;'o'
   225  000864  74                 	db	116	;'t'
   226  000865  6F                 	db	111	;'o'
   227  000866  72                 	db	114	;'r'
   228  000867  20                 	db	32
   229  000868  20                 	db	32
   230  000869  20                 	db	32
   231  00086A  20                 	db	32
   232  00086B  20                 	db	32
   233  00086C  20                 	db	32
   234  00086D  00                 	db	0
   235  00086E                     STR_6:
   236  00086E  6D                 	db	109	;'m'
   237  00086F  6F                 	db	111	;'o'
   238  000870  76                 	db	118	;'v'
   239  000871  69                 	db	105	;'i'
   240  000872  65                 	db	101	;'e'
   241  000873  6E                 	db	110	;'n'
   242  000874  64                 	db	100	;'d'
   243  000875  6F                 	db	111	;'o'
   244  000876  73                 	db	115	;'s'
   245  000877  65                 	db	101	;'e'
   246  000878  20                 	db	32
   247  000879  61                 	db	97	;'a'
   248  00087A  20                 	db	32
   249  00087B  20                 	db	32
   250  00087C  30                 	db	48	;'0'
   251  00087D  00                 	db	0
   252  00087E                     STR_9:
   253  00087E  6D                 	db	109	;'m'
   254  00087F  6F                 	db	111	;'o'
   255  000880  76                 	db	118	;'v'
   256  000881  69                 	db	105	;'i'
   257  000882  65                 	db	101	;'e'
   258  000883  6E                 	db	110	;'n'
   259  000884  64                 	db	100	;'d'
   260  000885  6F                 	db	111	;'o'
   261  000886  20                 	db	32
   262  000887  61                 	db	97	;'a'
   263  000888  20                 	db	32
   264  000889  20                 	db	32
   265  00088A  31                 	db	49	;'1'
   266  00088B  38                 	db	56	;'8'
   267  00088C  30                 	db	48	;'0'
   268  00088D  00                 	db	0
   269  00088E                     STR_1:
   270  00088E  4D                 	db	77	;'M'
   271  00088F  69                 	db	105	;'i'
   272  000890  63                 	db	99	;'c'
   273  000891  72                 	db	114	;'r'
   274  000892  6F                 	db	111	;'o'
   275  000893  20                 	db	32
   276  000894  32                 	db	50	;'2'
   277  000895  30                 	db	48	;'0'
   278  000896  32                 	db	50	;'2'
   279  000897  33                 	db	51	;'3'
   280  000898  2D                 	db	45
   281  000899  31                 	db	49	;'1'
   282  00089A  00                 	db	0
   283  00089B                     STR_3:
   284  00089B  48                 	db	72	;'H'
   285  00089C  6F                 	db	111	;'o'
   286  00089D  6C                 	db	108	;'l'
   287  00089E  61                 	db	97	;'a'
   288  00089F  20                 	db	32
   289  0008A0  6D                 	db	109	;'m'
   290  0008A1  75                 	db	117	;'u'
   291  0008A2  6E                 	db	110	;'n'
   292  0008A3  64                 	db	100	;'d'
   293  0008A4  6F                 	db	111	;'o'
   294  0008A5  00                 	db	0
   295  0008A6                     STR_2:
   296  0008A6  53                 	db	83	;'S'
   297  0008A7  65                 	db	101	;'e'
   298  0008A8  6D                 	db	109	;'m'
   299  0008A9  61                 	db	97	;'a'
   300  0008AA  6E                 	db	110	;'n'
   301  0008AB  61                 	db	97	;'a'
   302  0008AC  20                 	db	32
   303  0008AD  31                 	db	49	;'1'
   304  0008AE  33                 	db	51	;'3'
   305  0008AF  00                 	db	0
   306  0008B0  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           ; #config settings
   309                           
   310                           	psect	cinit
   311  00116C                     __pcinit:
   312                           	callstack 0
   313  00116C                     start_initialization:
   314                           	callstack 0
   315  00116C                     __initialization:
   316                           	callstack 0
   317  00116C                     end_of_initialization:
   318                           	callstack 0
   319  00116C                     __end_of__initialization:
   320                           	callstack 0
   321  00116C  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  00116E  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  001170  0E00               	movlw	low (__Lsmallconst shr (0+16))
   324  001172  6EF8               	movwf	tblptru,c
   325  001174  0E08               	movlw	high __Lsmallconst
   326  001176  6EF7               	movwf	tblptrh,c
   327  001178  0100               	movlb	0
   328  00117A  EFBF  F008         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	callstack 0
   333  000001                     ?i2_strlen:
   334                           	callstack 0
   335  000001                     i2EUSART_SendByte@dato:
   336                           	callstack 0
   337  000001                     i2ENVIA_NIBBLE@dato:
   338                           	callstack 0
   339  000001                     i2LEER_LCD@aux:
   340                           	callstack 0
   341  000001                     i2strlen@s:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x0
   345  000001                     	ds	1
   346  000002                     i2ENVIA_CHAR@dato:
   347                           	callstack 0
   348  000002                     i2ENVIA_LCD_CMD@dato:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x1
   352  000002                     	ds	1
   353  000003                     i2ENVIA_CHAR@aux:
   354                           	callstack 0
   355  000003                     i2ENVIA_LCD_CMD@aux:
   356                           	callstack 0
   357  000003                     i2strlen@a:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  000003                     	ds	1
   362  000004                     i2POS_CURSOR@columna:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x3
   366  000004                     	ds	1
   367  000005                     i2POS_CURSOR@fila:
   368                           	callstack 0
   369  000005                     i2EUSART_SendString@cadenasa:
   370                           	callstack 0
   371  000005                     i2ESCRIBE_MENSAJE2@cadena:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x4
   375  000005                     	ds	2
   376  000007                     ??i2_EUSART_SendString:
   377  000007                     ??i2_ESCRIBE_MENSAJE2:
   378                           
   379                           ; 1 bytes @ 0x6
   380  000007                     	ds	2
   381  000009                     i2EUSART_SendString@tam:
   382                           	callstack 0
   383  000009                     i2ESCRIBE_MENSAJE2@tam:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x8
   387  000009                     	ds	1
   388  00000A                     i2EUSART_SendString@x:
   389                           	callstack 0
   390  00000A                     i2ESCRIBE_MENSAJE2@i:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x9
   394  00000A                     	ds	1
   395  00000B                     ??_INT0_ISR:
   396                           
   397                           ; 1 bytes @ 0xA
   398  00000B                     	ds	5
   399  000010                     INT0_ISR@x:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0xF
   403  000010                     	ds	1
   404  000011                     ?i1_strlen:
   405                           	callstack 0
   406  000011                     i1EUSART_SendByte@dato:
   407                           	callstack 0
   408  000011                     i1ENVIA_NIBBLE@dato:
   409                           	callstack 0
   410  000011                     i1LEER_LCD@aux:
   411                           	callstack 0
   412  000011                     i1strlen@s:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x10
   416  000011                     	ds	1
   417  000012                     i1ENVIA_CHAR@dato:
   418                           	callstack 0
   419  000012                     i1ENVIA_LCD_CMD@dato:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x11
   423  000012                     	ds	1
   424  000013                     i1ENVIA_CHAR@aux:
   425                           	callstack 0
   426  000013                     i1ENVIA_LCD_CMD@aux:
   427                           	callstack 0
   428  000013                     i1strlen@a:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x12
   432  000013                     	ds	1
   433  000014                     i1POS_CURSOR@columna:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x13
   437  000014                     	ds	1
   438  000015                     i1POS_CURSOR@fila:
   439                           	callstack 0
   440  000015                     i1EUSART_SendString@cadenasa:
   441                           	callstack 0
   442  000015                     i1ESCRIBE_MENSAJE2@cadena:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x14
   446  000015                     	ds	2
   447  000017                     ??i1_EUSART_SendString:
   448  000017                     ??i1_ESCRIBE_MENSAJE2:
   449                           
   450                           ; 1 bytes @ 0x16
   451  000017                     	ds	2
   452  000019                     i1EUSART_SendString@tam:
   453                           	callstack 0
   454  000019                     i1ESCRIBE_MENSAJE2@tam:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x18
   458  000019                     	ds	1
   459  00001A                     i1EUSART_SendString@x:
   460                           	callstack 0
   461  00001A                     i1ESCRIBE_MENSAJE2@i:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x19
   465  00001A                     	ds	1
   466  00001B                     ??_INT1_ISR:
   467                           
   468                           ; 1 bytes @ 0x1A
   469  00001B                     	ds	8
   470  000023                     INT1_ISR@x:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x22
   474  000023                     	ds	1
   475  000024                     ?_strlen:
   476                           	callstack 0
   477  000024                     EUSART_SendByte@dato:
   478                           	callstack 0
   479  000024                     ENVIA_NIBBLE@dato:
   480                           	callstack 0
   481  000024                     LEER_LCD@aux:
   482                           	callstack 0
   483  000024                     strlen@s:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x23
   487  000024                     	ds	1
   488  000025                     ENVIA_CHAR@dato:
   489                           	callstack 0
   490  000025                     ENVIA_LCD_CMD@dato:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x24
   494  000025                     	ds	1
   495  000026                     ENVIA_CHAR@aux:
   496                           	callstack 0
   497  000026                     ENVIA_LCD_CMD@aux:
   498                           	callstack 0
   499  000026                     strlen@a:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x25
   503  000026                     	ds	1
   504  000027                     ??_LCD_CONFIG:
   505  000027                     POS_CURSOR@columna:
   506                           	callstack 0
   507  000027                     CURSOR_ONOFF@estado:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x26
   511  000027                     	ds	1
   512  000028                     ??_LCD_INIT:
   513  000028                     POS_CURSOR@fila:
   514                           	callstack 0
   515  000028                     EUSART_SendString@cadenasa:
   516                           	callstack 0
   517  000028                     ESCRIBE_MENSAJE2@cadena:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x27
   521  000028                     	ds	1
   522  000029                     
   523                           ; 1 bytes @ 0x28
   524  000029                     	ds	1
   525  00002A                     ??_ESCRIBE_MENSAJE2:
   526  00002A                     ??_EUSART_SendString:
   527                           
   528                           ; 1 bytes @ 0x29
   529  00002A                     	ds	2
   530  00002C                     EUSART_SendString@tam:
   531                           	callstack 0
   532  00002C                     ESCRIBE_MENSAJE2@tam:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x2B
   536  00002C                     	ds	1
   537  00002D                     EUSART_SendString@x:
   538                           	callstack 0
   539  00002D                     ESCRIBE_MENSAJE2@i:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x2C
   543  00002D                     	ds	1
   544  00002E                     ??_pantallazo:
   545                           
   546                           ; 1 bytes @ 0x2D
   547  00002E                     	ds	2
   548  000030                     
   549                           ; 1 bytes @ 0x2F
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 77 in file "maincode1.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   569 ;;      Params:         0       0       0       0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels required when called: 13
   575 ;; This function calls:
   576 ;;		_configuro
   577 ;;		_pantallazo
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00117E                     __ptext0:
   585                           	callstack 0
   586  00117E                     _main:
   587                           	callstack 18
   588  00117E                     
   589                           ;maincode1.c: 78:     configuro();
   590  00117E  EC87  F005         	call	_configuro	;wreg free
   591  001182                     
   592                           ;maincode1.c: 79:     pantallazo();
   593  001182  EC53  F005         	call	_pantallazo	;wreg free
   594  001186                     l90:
   595  001186  EFC3  F008         	goto	l90
   596  00118A  EF6A  F000         	goto	start
   597  00118E                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _pantallazo *****************
   601 ;; Defined at:
   602 ;;		line 64 in file "maincode1.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         0       0       0       0       0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0
   618 ;;      Temps:          2       0       0       0       0       0       0       0       0
   619 ;;      Totals:         2       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 11
   623 ;; This function calls:
   624 ;;		_BORRAR_LCD
   625 ;;		_ESCRIBE_MENSAJE2
   626 ;;		_EUSART_NewLine
   627 ;;		_EUSART_SendString
   628 ;;		_POS_CURSOR
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text1
   635  000AA6                     __ptext1:
   636                           	callstack 0
   637  000AA6                     _pantallazo:
   638                           	callstack 19
   639  000AA6                     
   640                           ;maincode1.c: 65:     POS_CURSOR(1,0);
   641  000AA6  0E00               	movlw	0
   642  000AA8  6E27               	movwf	POS_CURSOR@columna^0,c
   643  000AAA  0E01               	movlw	1
   644  000AAC  ECB8  F006         	call	_POS_CURSOR
   645  000AB0                     
   646                           ;maincode1.c: 66:     ESCRIBE_MENSAJE2("Micro 2023-1");
   647  000AB0  0E8E               	movlw	low STR_1
   648  000AB2  6E28               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   649  000AB4  0E08               	movlw	high STR_1
   650  000AB6  6E29               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   651  000AB8  ECFF  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   652  000ABC                     
   653                           ;maincode1.c: 67:     POS_CURSOR(2,0);
   654  000ABC  0E00               	movlw	0
   655  000ABE  6E27               	movwf	POS_CURSOR@columna^0,c
   656  000AC0  0E02               	movlw	2
   657  000AC2  ECB8  F006         	call	_POS_CURSOR
   658                           
   659                           ;maincode1.c: 68:     ESCRIBE_MENSAJE2("Semana 13");
   660  000AC6  0EA6               	movlw	low STR_2
   661  000AC8  6E28               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   662  000ACA  0E08               	movlw	high STR_2
   663  000ACC  6E29               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   664  000ACE  ECFF  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   665                           
   666                           ;maincode1.c: 69:     EUSART_SendString("Hola mundo");
   667  000AD2  0E9B               	movlw	low STR_3
   668  000AD4  6E28               	movwf	EUSART_SendString@cadenasa^0,c
   669  000AD6  0E08               	movlw	high STR_3
   670  000AD8  6E29               	movwf	(EUSART_SendString@cadenasa+1)^0,c
   671  000ADA  ECDA  F005         	call	_EUSART_SendString	;wreg free
   672  000ADE                     
   673                           ;maincode1.c: 70:     EUSART_NewLine();
   674  000ADE  EC32  F008         	call	_EUSART_NewLine	;wreg free
   675  000AE2                     
   676                           ;maincode1.c: 71:     EUSART_SendString("Soy el pic18, hazme caso");
   677  000AE2  0E44               	movlw	low STR_4
   678  000AE4  6E28               	movwf	EUSART_SendString@cadenasa^0,c
   679  000AE6  0E08               	movlw	high STR_4
   680  000AE8  6E29               	movwf	(EUSART_SendString@cadenasa+1)^0,c
   681  000AEA  ECDA  F005         	call	_EUSART_SendString	;wreg free
   682                           
   683                           ;maincode1.c: 72:     EUSART_NewLine();
   684  000AEE  EC32  F008         	call	_EUSART_NewLine	;wreg free
   685  000AF2                     
   686                           ;maincode1.c: 73:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   687  000AF2  0E10               	movlw	16
   688  000AF4  6E2F               	movwf	(??_pantallazo+1)^0,c
   689  000AF6  0E39               	movlw	57
   690  000AF8  6E2E               	movwf	??_pantallazo^0,c
   691  000AFA  0E0E               	movlw	14
   692  000AFC                     u597:
   693  000AFC  2EE8               	decfsz	wreg,f,c
   694  000AFE  D7FE               	bra	u597
   695  000B00  2E2E               	decfsz	??_pantallazo^0,f,c
   696  000B02  D7FC               	bra	u597
   697  000B04  2E2F               	decfsz	(??_pantallazo+1)^0,f,c
   698  000B06  D7FA               	bra	u597
   699  000B08                     
   700                           ;maincode1.c: 74:     BORRAR_LCD();
   701  000B08  ECCB  F008         	call	_BORRAR_LCD	;wreg free
   702  000B0C  0012               	return		;funcret
   703  000B0E                     __end_of_pantallazo:
   704                           	callstack 0
   705                           
   706 ;; *************** function _POS_CURSOR *****************
   707 ;; Defined at:
   708 ;;		line 5 in file "LCD.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  fila            1    wreg     unsigned char 
   711 ;;  columna         1   38[COMRAM] unsigned char 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  fila            1   39[COMRAM] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   723 ;;      Params:         1       0       0       0       0       0       0       0       0
   724 ;;      Locals:         1       0       0       0       0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0
   726 ;;      Totals:         2       0       0       0       0       0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 10
   730 ;; This function calls:
   731 ;;		_ENVIA_LCD_CMD
   732 ;; This function is called by:
   733 ;;		_pantallazo
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text2
   738  000D70                     __ptext2:
   739                           	callstack 0
   740  000D70                     _POS_CURSOR:
   741                           	callstack 19
   742                           
   743                           ;incstack = 0
   744                           ;POS_CURSOR@fila stored from wreg
   745  000D70  6E28               	movwf	POS_CURSOR@fila^0,c
   746  000D72                     
   747                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   748  000D72  0428               	decf	POS_CURSOR@fila^0,w,c
   749  000D74  A4D8               	btfss	status,2,c
   750  000D76  EFBF  F006         	goto	u421
   751  000D7A  EFC1  F006         	goto	u420
   752  000D7E                     u421:
   753  000D7E  EFC7  F006         	goto	l1616
   754  000D82                     u420:
   755  000D82                     
   756                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   757  000D82  5027               	movf	POS_CURSOR@columna^0,w,c
   758  000D84  0F80               	addlw	128
   759  000D86  EC80  F007         	call	_ENVIA_LCD_CMD
   760                           
   761                           ;LCD.c: 10:  }
   762  000D8A  EFD4  F006         	goto	l133
   763  000D8E                     l1616:
   764  000D8E  0E02               	movlw	2
   765  000D90  1828               	xorwf	POS_CURSOR@fila^0,w,c
   766  000D92  A4D8               	btfss	status,2,c
   767  000D94  EFCE  F006         	goto	u431
   768  000D98  EFD0  F006         	goto	u430
   769  000D9C                     u431:
   770  000D9C  EFD4  F006         	goto	l133
   771  000DA0                     u430:
   772  000DA0                     
   773                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   774  000DA0  5027               	movf	POS_CURSOR@columna^0,w,c
   775  000DA2  0FC0               	addlw	192
   776  000DA4  EC80  F007         	call	_ENVIA_LCD_CMD
   777  000DA8                     l133:
   778  000DA8  0012               	return		;funcret
   779  000DAA                     __end_of_POS_CURSOR:
   780                           	callstack 0
   781                           
   782 ;; *************** function _EUSART_SendString *****************
   783 ;; Defined at:
   784 ;;		line 48 in file "maincode1.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  cadenasa        2   39[COMRAM] PTR unsigned char 
   787 ;;		 -> STR_10(33), STR_7(34), STR_4(25), STR_3(11), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  x               1   44[COMRAM] unsigned char 
   790 ;;  tam             1   43[COMRAM] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   800 ;;      Params:         2       0       0       0       0       0       0       0       0
   801 ;;      Locals:         2       0       0       0       0       0       0       0       0
   802 ;;      Temps:          2       0       0       0       0       0       0       0       0
   803 ;;      Totals:         6       0       0       0       0       0       0       0       0
   804 ;;Total ram usage:        6 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 9
   807 ;; This function calls:
   808 ;;		_EUSART_SendByte
   809 ;;		_strlen
   810 ;; This function is called by:
   811 ;;		_pantallazo
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text3
   816  000BB4                     __ptext3:
   817                           	callstack 0
   818  000BB4                     _EUSART_SendString:
   819                           	callstack 20
   820  000BB4                     
   821                           ;maincode1.c: 49:     unsigned char tam;;maincode1.c: 50:     tam = strlen(cadenasa);
   822  000BB4  C028  F024         	movff	EUSART_SendString@cadenasa,strlen@s
   823  000BB8  C029  F025         	movff	EUSART_SendString@cadenasa+1,strlen@s+1
   824  000BBC  ECD5  F006         	call	_strlen	;wreg free
   825  000BC0  5024               	movf	?_strlen^0,w,c
   826  000BC2  6E2C               	movwf	EUSART_SendString@tam^0,c
   827  000BC4                     
   828                           ;maincode1.c: 51:     unsigned char x;;maincode1.c: 52:     for(x=0;x<tam;x++){
   829  000BC4  0E00               	movlw	0
   830  000BC6  6E2D               	movwf	EUSART_SendString@x^0,c
   831  000BC8  EFF5  F005         	goto	l1610
   832  000BCC                     l1606:
   833                           
   834                           ;maincode1.c: 53:         EUSART_SendByte(cadenasa[x]);
   835  000BCC  502D               	movf	EUSART_SendString@x^0,w,c
   836  000BCE  2428               	addwf	EUSART_SendString@cadenasa^0,w,c
   837  000BD0  6E2A               	movwf	??_EUSART_SendString^0,c
   838  000BD2  0E00               	movlw	0
   839  000BD4  2029               	addwfc	(EUSART_SendString@cadenasa+1)^0,w,c
   840  000BD6  6E2B               	movwf	(??_EUSART_SendString+1)^0,c
   841  000BD8  C02A  FFF6         	movff	??_EUSART_SendString,tblptrl
   842  000BDC  C02B  FFF7         	movff	??_EUSART_SendString+1,tblptrh
   843  000BE0                     	if	0	;tblptru may be non-zero
   844  000BE0                     	endif
   845  000BE0                     	if	0	;tblptru may be non-zero
   846  000BE0                     	endif
   847  000BE0  0008               	tblrd		*
   848  000BE2  50F5               	movf	tablat,w,c
   849  000BE4  EC95  F008         	call	_EUSART_SendByte
   850  000BE8                     
   851                           ;maincode1.c: 54:     }
   852  000BE8  2A2D               	incf	EUSART_SendString@x^0,f,c
   853  000BEA                     l1610:
   854  000BEA  502C               	movf	EUSART_SendString@tam^0,w,c
   855  000BEC  5C2D               	subwf	EUSART_SendString@x^0,w,c
   856  000BEE  A0D8               	btfss	status,0,c
   857  000BF0  EFFC  F005         	goto	u411
   858  000BF4  EFFE  F005         	goto	u410
   859  000BF8                     u411:
   860  000BF8  EFE6  F005         	goto	l1606
   861  000BFC                     u410:
   862  000BFC  0012               	return		;funcret
   863  000BFE                     __end_of_EUSART_SendString:
   864                           	callstack 0
   865                           
   866 ;; *************** function _EUSART_SendByte *****************
   867 ;; Defined at:
   868 ;;		line 43 in file "maincode1.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  dato            1    wreg     unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  dato            1   35[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         1       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 8
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_EUSART_SendString
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text4
   897  00112A                     __ptext4:
   898                           	callstack 0
   899  00112A                     _EUSART_SendByte:
   900                           	callstack 20
   901                           
   902                           ;incstack = 0
   903                           ;EUSART_SendByte@dato stored from wreg
   904  00112A  6E24               	movwf	EUSART_SendByte@dato^0,c
   905  00112C                     
   906                           ;maincode1.c: 44:     TXREG1 = dato;
   907  00112C  C024  FFAD         	movff	EUSART_SendByte@dato,4013	;volatile
   908  001130                     l64:
   909  001130  A2AC               	btfss	172,1,c	;volatile
   910  001132  EF9D  F008         	goto	u21
   911  001136  EF9F  F008         	goto	u20
   912  00113A                     u21:
   913  00113A  EF98  F008         	goto	l64
   914  00113E                     u20:
   915  00113E  0012               	return		;funcret
   916  001140                     __end_of_EUSART_SendByte:
   917                           	callstack 0
   918                           
   919 ;; *************** function _EUSART_NewLine *****************
   920 ;; Defined at:
   921 ;;		line 57 in file "maincode1.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   935 ;;      Params:         0       0       0       0       0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 8
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_pantallazo
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text5
   950  001064                     __ptext5:
   951                           	callstack 0
   952  001064                     _EUSART_NewLine:
   953                           	callstack 21
   954  001064                     
   955                           ;maincode1.c: 58:     TXREG1 = 0x0D;
   956  001064  0E0D               	movlw	13
   957  001066  6EAD               	movwf	173,c	;volatile
   958  001068                     l76:
   959  001068  A2AC               	btfss	172,1,c	;volatile
   960  00106A  EF39  F008         	goto	u91
   961  00106E  EF3B  F008         	goto	u90
   962  001072                     u91:
   963  001072  EF34  F008         	goto	l76
   964  001076                     u90:
   965  001076                     
   966                           ;maincode1.c: 60:     TXREG1 = 0x0A;
   967  001076  0E0A               	movlw	10
   968  001078  6EAD               	movwf	173,c	;volatile
   969  00107A                     l79:
   970  00107A  A2AC               	btfss	172,1,c	;volatile
   971  00107C  EF42  F008         	goto	u101
   972  001080  EF44  F008         	goto	u100
   973  001084                     u101:
   974  001084  EF3D  F008         	goto	l79
   975  001088                     u100:
   976  001088  0012               	return		;funcret
   977  00108A                     __end_of_EUSART_NewLine:
   978                           	callstack 0
   979                           
   980 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   981 ;; Defined at:
   982 ;;		line 69 in file "LCD.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  cadena          2   39[COMRAM] PTR const unsigned char 
   985 ;;		 -> STR_9(16), STR_8(17), STR_6(16), STR_5(17), 
   986 ;;		 -> STR_2(10), STR_1(13), 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  i               1   44[COMRAM] unsigned char 
   989 ;;  tam             1   43[COMRAM] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         2       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 10
  1006 ;; This function calls:
  1007 ;;		_ENVIA_CHAR
  1008 ;;		_strlen
  1009 ;; This function is called by:
  1010 ;;		_pantallazo
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text6
  1015  000BFE                     __ptext6:
  1016                           	callstack 0
  1017  000BFE                     _ESCRIBE_MENSAJE2:
  1018                           	callstack 19
  1019  000BFE                     
  1020                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  1021  000BFE  C028  F024         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1022  000C02  C029  F025         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1023  000C06  ECD5  F006         	call	_strlen	;wreg free
  1024  000C0A  5024               	movf	?_strlen^0,w,c
  1025  000C0C  6E2C               	movwf	ESCRIBE_MENSAJE2@tam^0,c
  1026  000C0E                     
  1027                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  1028  000C0E  0E00               	movlw	0
  1029  000C10  6E2D               	movwf	ESCRIBE_MENSAJE2@i^0,c
  1030  000C12  EF1A  F006         	goto	l1630
  1031  000C16                     l1626:
  1032                           
  1033                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  1034  000C16  502D               	movf	ESCRIBE_MENSAJE2@i^0,w,c
  1035  000C18  2428               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
  1036  000C1A  6E2A               	movwf	??_ESCRIBE_MENSAJE2^0,c
  1037  000C1C  0E00               	movlw	0
  1038  000C1E  2029               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  1039  000C20  6E2B               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
  1040  000C22  C02A  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1041  000C26  C02B  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1042  000C2A                     	if	0	;tblptru may be non-zero
  1043  000C2A                     	endif
  1044  000C2A                     	if	0	;tblptru may be non-zero
  1045  000C2A                     	endif
  1046  000C2A  0008               	tblrd		*
  1047  000C2C  50F5               	movf	tablat,w,c
  1048  000C2E  EC66  F007         	call	_ENVIA_CHAR
  1049  000C32                     
  1050                           ;LCD.c: 77:  }
  1051  000C32  2A2D               	incf	ESCRIBE_MENSAJE2@i^0,f,c
  1052  000C34                     l1630:
  1053  000C34  502C               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
  1054  000C36  5C2D               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
  1055  000C38  A0D8               	btfss	status,0,c
  1056  000C3A  EF21  F006         	goto	u441
  1057  000C3E  EF23  F006         	goto	u440
  1058  000C42                     u441:
  1059  000C42  EF0B  F006         	goto	l1626
  1060  000C46                     u440:
  1061  000C46  0012               	return		;funcret
  1062  000C48                     __end_of_ESCRIBE_MENSAJE2:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _strlen *****************
  1066 ;; Defined at:
  1067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  s               2   35[COMRAM] PTR const unsigned char 
  1070 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  1071 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  1072 ;;		 -> STR_2(10), STR_1(13), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  a               2   37[COMRAM] PTR const unsigned char 
  1075 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  1076 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  1077 ;;		 -> STR_2(10), STR_1(13), 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   35[COMRAM] unsigned int 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        4 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 8
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_EUSART_SendString
  1098 ;;		_ESCRIBE_MENSAJE2
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text7
  1103  000DAA                     __ptext7:
  1104                           	callstack 0
  1105  000DAA                     _strlen:
  1106                           	callstack 20
  1107  000DAA  C024  F026         	movff	strlen@s,strlen@a
  1108  000DAE  C025  F027         	movff	strlen@s+1,strlen@a+1
  1109  000DB2  EFDD  F006         	goto	l1504
  1110  000DB6                     l1502:
  1111  000DB6  4A24               	infsnz	strlen@s^0,f,c
  1112  000DB8  2A25               	incf	(strlen@s+1)^0,f,c
  1113  000DBA                     l1504:
  1114  000DBA  C024  FFF6         	movff	strlen@s,tblptrl
  1115  000DBE  C025  FFF7         	movff	strlen@s+1,tblptrh
  1116  000DC2                     	if	0	;tblptru may be non-zero
  1117  000DC2                     	endif
  1118  000DC2                     	if	0	;tblptru may be non-zero
  1119  000DC2                     	endif
  1120  000DC2  0008               	tblrd		*
  1121  000DC4  50F5               	movf	tablat,w,c
  1122  000DC6  0900               	iorlw	0
  1123  000DC8  A4D8               	btfss	status,2,c
  1124  000DCA  EFE9  F006         	goto	u381
  1125  000DCE  EFEB  F006         	goto	u380
  1126  000DD2                     u381:
  1127  000DD2  EFDB  F006         	goto	l1502
  1128  000DD6                     u380:
  1129  000DD6  5026               	movf	strlen@a^0,w,c
  1130  000DD8  5C24               	subwf	strlen@s^0,w,c
  1131  000DDA  6E24               	movwf	?_strlen^0,c
  1132  000DDC  5027               	movf	(strlen@a+1)^0,w,c
  1133  000DDE  5825               	subwfb	(strlen@s+1)^0,w,c
  1134  000DE0  6E25               	movwf	(?_strlen+1)^0,c
  1135  000DE2  0012               	return		;funcret
  1136  000DE4                     __end_of_strlen:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _ENVIA_CHAR *****************
  1140 ;; Defined at:
  1141 ;;		line 80 in file "LCD.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  dato            1    wreg     unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  dato            1   36[COMRAM] unsigned char 
  1146 ;;  aux             1   37[COMRAM] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 9
  1163 ;; This function calls:
  1164 ;;		_ENVIA_NIBBLE
  1165 ;;		_LEER_LCD
  1166 ;; This function is called by:
  1167 ;;		_ESCRIBE_MENSAJE2
  1168 ;;		_ESCRIBE_MENSAJE
  1169 ;;		_GENERACARACTER
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text8
  1174  000ECC                     __ptext8:
  1175                           	callstack 0
  1176  000ECC                     _ENVIA_CHAR:
  1177                           	callstack 19
  1178                           
  1179                           ;incstack = 0
  1180                           ;ENVIA_CHAR@dato stored from wreg
  1181  000ECC  6E25               	movwf	ENVIA_CHAR@dato^0,c
  1182  000ECE                     
  1183                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  1184  000ECE  808D               	bsf	141,0,c	;volatile
  1185  000ED0                     
  1186                           ;LCD.c: 84:  LEER_LCD();
  1187  000ED0  ECA8  F004         	call	_LEER_LCD	;wreg free
  1188  000ED4                     
  1189                           ;LCD.c: 85:  TRISD = 0x00;
  1190  000ED4  0E00               	movlw	0
  1191  000ED6  6E95               	movwf	149,c	;volatile
  1192  000ED8                     
  1193                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1194  000ED8  0E21               	movlw	33
  1195  000EDA                     u607:
  1196  000EDA  2EE8               	decfsz	wreg,f,c
  1197  000EDC  D7FE               	bra	u607
  1198  000EDE  F000               	nop	
  1199  000EE0                     
  1200                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  1201  000EE0  928D               	bcf	141,1,c	;volatile
  1202  000EE2                     
  1203                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  1204  000EE2  948D               	bcf	141,2,c	;volatile
  1205  000EE4                     
  1206                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  1207  000EE4  808D               	bsf	141,0,c	;volatile
  1208  000EE6                     
  1209                           ;LCD.c: 90:  aux = dato & 0xF0;
  1210  000EE6  5025               	movf	ENVIA_CHAR@dato^0,w,c
  1211  000EE8  0BF0               	andlw	240
  1212  000EEA  6E26               	movwf	ENVIA_CHAR@aux^0,c
  1213  000EEC                     
  1214                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1215  000EEC  5026               	movf	ENVIA_CHAR@aux^0,w,c
  1216  000EEE  EC6B  F008         	call	_ENVIA_NIBBLE
  1217  000EF2                     
  1218                           ;LCD.c: 92:  aux = dato << 4;
  1219  000EF2  3825               	swapf	ENVIA_CHAR@dato^0,w,c
  1220  000EF4  0BF0               	andlw	240
  1221  000EF6  6E26               	movwf	ENVIA_CHAR@aux^0,c
  1222  000EF8                     
  1223                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1224  000EF8  5026               	movf	ENVIA_CHAR@aux^0,w,c
  1225  000EFA  EC6B  F008         	call	_ENVIA_NIBBLE
  1226  000EFE  0012               	return		;funcret
  1227  000F00                     __end_of_ENVIA_CHAR:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _configuro *****************
  1231 ;; Defined at:
  1232 ;;		line 7 in file "maincode1.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1246 ;;      Params:         0       0       0       0       0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1249 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 12
  1253 ;; This function calls:
  1254 ;;		_LCD_INIT
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text9
  1261  000B0E                     __ptext9:
  1262                           	callstack 0
  1263  000B0E                     _configuro:
  1264                           	callstack 18
  1265  000B0E                     
  1266                           ;maincode1.c: 9:     OSCCON = 0x52;
  1267  000B0E  0E52               	movlw	82
  1268  000B10  6ED3               	movwf	211,c	;volatile
  1269  000B12                     
  1270                           ;maincode1.c: 11:     TRISAbits.RA0 = 0;
  1271  000B12  9092               	bcf	146,0,c	;volatile
  1272  000B14                     
  1273                           ;maincode1.c: 12:     ANSELAbits.ANSA0 = 0;
  1274  000B14  010F               	movlb	15	; () banked
  1275  000B16  915B               	bcf	91,0,b	;volatile
  1276                           
  1277                           ;maincode1.c: 13:     TRISB = 0xF3;
  1278  000B18  0EF3               	movlw	243
  1279  000B1A  6E93               	movwf	147,c	;volatile
  1280                           
  1281                           ;maincode1.c: 14:     ANSELB = 0xF0;
  1282  000B1C  0EF0               	movlw	240
  1283  000B1E  6F5C               	movwf	92,b	;volatile
  1284  000B20                     
  1285                           ; BSR set to: 15
  1286                           ;maincode1.c: 15:     TRISCbits.RC6 = 0;
  1287  000B20  9C94               	bcf	148,6,c	;volatile
  1288  000B22                     
  1289                           ; BSR set to: 15
  1290                           ;maincode1.c: 16:     ANSELCbits.ANSC6 = 0;
  1291  000B22  9D5D               	bcf	93,6,b	;volatile
  1292  000B24                     
  1293                           ; BSR set to: 15
  1294                           ;maincode1.c: 17:     TRISCbits.RC7 = 1;
  1295  000B24  8E94               	bsf	148,7,c	;volatile
  1296  000B26                     
  1297                           ; BSR set to: 15
  1298                           ;maincode1.c: 18:     ANSELCbits.ANSC7 = 0;
  1299  000B26  9F5D               	bcf	93,7,b	;volatile
  1300                           
  1301                           ;maincode1.c: 19:     TRISD = 0x0F;
  1302  000B28  0E0F               	movlw	15
  1303  000B2A  6E95               	movwf	149,c	;volatile
  1304                           
  1305                           ;maincode1.c: 20:     ANSELD = 0x0F;
  1306  000B2C  0E0F               	movlw	15
  1307  000B2E  6F5E               	movwf	94,b	;volatile
  1308                           
  1309                           ;maincode1.c: 21:     TRISE = 0xF8;
  1310  000B30  0EF8               	movlw	248
  1311  000B32  6E96               	movwf	150,c	;volatile
  1312                           
  1313                           ;maincode1.c: 22:     ANSELE = 0xF8;
  1314  000B34  0EF8               	movlw	248
  1315  000B36  6F5F               	movwf	95,b	;volatile
  1316  000B38                     
  1317                           ; BSR set to: 15
  1318                           ;maincode1.c: 24:     INTCON2bits.nRBPU = 0;
  1319  000B38  9EF1               	bcf	241,7,c	;volatile
  1320                           
  1321                           ;maincode1.c: 25:     WPUB = 0x03;
  1322  000B3A  0E03               	movlw	3
  1323  000B3C  6E85               	movwf	133,c	;volatile
  1324  000B3E                     
  1325                           ; BSR set to: 15
  1326                           ;maincode1.c: 26:     INTCON2bits.INTEDG0 = 0;
  1327  000B3E  9CF1               	bcf	241,6,c	;volatile
  1328  000B40                     
  1329                           ; BSR set to: 15
  1330                           ;maincode1.c: 27:     INTCON2bits.INTEDG1 = 0;
  1331  000B40  9AF1               	bcf	241,5,c	;volatile
  1332  000B42                     
  1333                           ; BSR set to: 15
  1334                           ;maincode1.c: 28:     RCONbits.IPEN = 1;
  1335  000B42  8ED0               	bsf	208,7,c	;volatile
  1336  000B44                     
  1337                           ; BSR set to: 15
  1338                           ;maincode1.c: 29:     INTCONbits.GIEH = 1;
  1339  000B44  8EF2               	bsf	242,7,c	;volatile
  1340  000B46                     
  1341                           ; BSR set to: 15
  1342                           ;maincode1.c: 30:     INTCONbits.GIEL = 1;
  1343  000B46  8CF2               	bsf	242,6,c	;volatile
  1344  000B48                     
  1345                           ; BSR set to: 15
  1346                           ;maincode1.c: 31:     INTCONbits.INT0IE = 1;
  1347  000B48  88F2               	bsf	242,4,c	;volatile
  1348  000B4A                     
  1349                           ; BSR set to: 15
  1350                           ;maincode1.c: 32:     INTCON3bits.INT1IE = 1;
  1351  000B4A  86F0               	bsf	240,3,c	;volatile
  1352  000B4C                     
  1353                           ; BSR set to: 15
  1354                           ;maincode1.c: 33:     INTCON3bits.INT1IP = 0;
  1355  000B4C  9CF0               	bcf	240,6,c	;volatile
  1356  000B4E                     
  1357                           ; BSR set to: 15
  1358                           ;maincode1.c: 34:     LCD_INIT();
  1359  000B4E  EC02  F008         	call	_LCD_INIT	;wreg free
  1360  000B52                     
  1361                           ;maincode1.c: 36:     TXSTAbits.BRGH = 1;
  1362  000B52  84AC               	bsf	172,2,c	;volatile
  1363  000B54                     
  1364                           ;maincode1.c: 37:     SPBRGH1 = 0;
  1365  000B54  0E00               	movlw	0
  1366  000B56  6EB0               	movwf	176,c	;volatile
  1367  000B58                     
  1368                           ;maincode1.c: 38:     SPBRG1 = 25;
  1369  000B58  0E19               	movlw	25
  1370  000B5A  6EAF               	movwf	175,c	;volatile
  1371  000B5C                     
  1372                           ;maincode1.c: 39:     TXSTAbits.TXEN = 1;
  1373  000B5C  8AAC               	bsf	172,5,c	;volatile
  1374  000B5E                     
  1375                           ;maincode1.c: 40:     RCSTAbits.SPEN = 1;
  1376  000B5E  8EAB               	bsf	171,7,c	;volatile
  1377  000B60  0012               	return		;funcret
  1378  000B62                     __end_of_configuro:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _LCD_INIT *****************
  1382 ;; Defined at:
  1383 ;;		line 184 in file "LCD.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 11
  1404 ;; This function calls:
  1405 ;;		_BORRAR_LCD
  1406 ;;		_CURSOR_HOME
  1407 ;;		_CURSOR_ONOFF
  1408 ;;		_LCD_CONFIG
  1409 ;; This function is called by:
  1410 ;;		_configuro
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text10
  1415  001004                     __ptext10:
  1416                           	callstack 0
  1417  001004                     _LCD_INIT:
  1418                           	callstack 18
  1419  001004                     
  1420                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1421  001004  0E14               	movlw	20
  1422  001006  6E28               	movwf	??_LCD_INIT^0,c
  1423  001008  0E7A               	movlw	122
  1424  00100A                     u617:
  1425  00100A  2EE8               	decfsz	wreg,f,c
  1426  00100C  D7FE               	bra	u617
  1427  00100E  2E28               	decfsz	??_LCD_INIT^0,f,c
  1428  001010  D7FC               	bra	u617
  1429  001012                     
  1430                           ;LCD.c: 186:     LCD_CONFIG();
  1431  001012  ECB1  F005         	call	_LCD_CONFIG	;wreg free
  1432  001016                     
  1433                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1434  001016  0E14               	movlw	20
  1435  001018  6E28               	movwf	??_LCD_INIT^0,c
  1436  00101A  0E7A               	movlw	122
  1437  00101C                     u627:
  1438  00101C  2EE8               	decfsz	wreg,f,c
  1439  00101E  D7FE               	bra	u627
  1440  001020  2E28               	decfsz	??_LCD_INIT^0,f,c
  1441  001022  D7FC               	bra	u627
  1442                           
  1443                           ;LCD.c: 188:     BORRAR_LCD();
  1444  001024  ECCB  F008         	call	_BORRAR_LCD	;wreg free
  1445                           
  1446                           ;LCD.c: 189:     CURSOR_HOME();
  1447  001028  ECC7  F008         	call	_CURSOR_HOME	;wreg free
  1448                           
  1449                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1450  00102C  0E01               	movlw	1
  1451  00102E  EC1A  F008         	call	_CURSOR_ONOFF
  1452  001032  0012               	return		;funcret
  1453  001034                     __end_of_LCD_INIT:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _LCD_CONFIG *****************
  1457 ;; Defined at:
  1458 ;;		line 101 in file "LCD.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        1 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 10
  1479 ;; This function calls:
  1480 ;;		_ENVIA_LCD_CMD
  1481 ;;		_ENVIA_NIBBLE
  1482 ;; This function is called by:
  1483 ;;		_LCD_INIT
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text11
  1488  000B62                     __ptext11:
  1489                           	callstack 0
  1490  000B62                     _LCD_CONFIG:
  1491                           	callstack 18
  1492  000B62                     
  1493                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
  1494  000B62  908D               	bcf	141,0,c	;volatile
  1495                           
  1496                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
  1497  000B64  928D               	bcf	141,1,c	;volatile
  1498  000B66                     
  1499                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1500  000B66  0E30               	movlw	48
  1501  000B68  EC6B  F008         	call	_ENVIA_NIBBLE
  1502  000B6C                     
  1503                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1504  000B6C  0E03               	movlw	3
  1505  000B6E  6E27               	movwf	??_LCD_CONFIG^0,c
  1506  000B70  0E98               	movlw	152
  1507  000B72                     u637:
  1508  000B72  2EE8               	decfsz	wreg,f,c
  1509  000B74  D7FE               	bra	u637
  1510  000B76  2E27               	decfsz	??_LCD_CONFIG^0,f,c
  1511  000B78  D7FC               	bra	u637
  1512  000B7A                     
  1513                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1514  000B7A  0E30               	movlw	48
  1515  000B7C  EC6B  F008         	call	_ENVIA_NIBBLE
  1516                           
  1517                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1518  000B80  0E21               	movlw	33
  1519  000B82                     u647:
  1520  000B82  2EE8               	decfsz	wreg,f,c
  1521  000B84  D7FE               	bra	u647
  1522  000B86  F000               	nop	
  1523  000B88                     
  1524                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1525  000B88  0E30               	movlw	48
  1526  000B8A  EC6B  F008         	call	_ENVIA_NIBBLE
  1527  000B8E                     
  1528                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1529  000B8E  0E20               	movlw	32
  1530  000B90  EC6B  F008         	call	_ENVIA_NIBBLE
  1531  000B94                     
  1532                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1533  000B94  0E01               	movlw	1
  1534  000B96  EC80  F007         	call	_ENVIA_LCD_CMD
  1535  000B9A                     
  1536                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1537  000B9A  0E28               	movlw	40
  1538  000B9C  EC80  F007         	call	_ENVIA_LCD_CMD
  1539  000BA0                     
  1540                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1541  000BA0  0E0F               	movlw	15
  1542  000BA2  EC80  F007         	call	_ENVIA_LCD_CMD
  1543  000BA6                     
  1544                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1545  000BA6  0E06               	movlw	6
  1546  000BA8  EC80  F007         	call	_ENVIA_LCD_CMD
  1547  000BAC                     
  1548                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1549  000BAC  0E01               	movlw	1
  1550  000BAE  EC80  F007         	call	_ENVIA_LCD_CMD
  1551  000BB2  0012               	return		;funcret
  1552  000BB4                     __end_of_LCD_CONFIG:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _CURSOR_ONOFF *****************
  1556 ;; Defined at:
  1557 ;;		line 54 in file "LCD.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  estado          1    wreg     unsigned char 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  estado          1   38[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0
  1572 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1574 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1575 ;;Total ram usage:        1 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 10
  1578 ;; This function calls:
  1579 ;;		_ENVIA_LCD_CMD
  1580 ;; This function is called by:
  1581 ;;		_LCD_INIT
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text12
  1586  001034                     __ptext12:
  1587                           	callstack 0
  1588  001034                     _CURSOR_ONOFF:
  1589                           	callstack 18
  1590                           
  1591                           ;incstack = 0
  1592                           ;CURSOR_ONOFF@estado stored from wreg
  1593  001034  6E27               	movwf	CURSOR_ONOFF@estado^0,c
  1594  001036                     
  1595                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1596  001036  5027               	movf	CURSOR_ONOFF@estado^0,w,c
  1597  001038  A4D8               	btfss	status,2,c
  1598  00103A  EF21  F008         	goto	u41
  1599  00103E  EF23  F008         	goto	u40
  1600  001042                     u41:
  1601  001042  EF26  F008         	goto	l996
  1602  001046                     u40:
  1603  001046  0E0E               	movlw	14
  1604  001048  EC80  F007         	call	_ENVIA_LCD_CMD
  1605  00104C                     l996:
  1606                           
  1607                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1608  00104C  0427               	decf	CURSOR_ONOFF@estado^0,w,c
  1609  00104E  A4D8               	btfss	status,2,c
  1610  001050  EF2C  F008         	goto	u51
  1611  001054  EF2E  F008         	goto	u50
  1612  001058                     u51:
  1613  001058  EF31  F008         	goto	l163
  1614  00105C                     u50:
  1615  00105C  0E0C               	movlw	12
  1616  00105E  EC80  F007         	call	_ENVIA_LCD_CMD
  1617  001062                     l163:
  1618  001062  0012               	return		;funcret
  1619  001064                     __end_of_CURSOR_ONOFF:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _CURSOR_HOME *****************
  1623 ;; Defined at:
  1624 ;;		line 29 in file "LCD.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 10
  1645 ;; This function calls:
  1646 ;;		_ENVIA_LCD_CMD
  1647 ;; This function is called by:
  1648 ;;		_LCD_INIT
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text13
  1653  00118E                     __ptext13:
  1654                           	callstack 0
  1655  00118E                     _CURSOR_HOME:
  1656                           	callstack 18
  1657  00118E                     
  1658                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1659  00118E  0E02               	movlw	2
  1660  001190  EC80  F007         	call	_ENVIA_LCD_CMD
  1661  001194  0012               	return		;funcret
  1662  001196                     __end_of_CURSOR_HOME:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _BORRAR_LCD *****************
  1666 ;; Defined at:
  1667 ;;		line 96 in file "LCD.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 10
  1688 ;; This function calls:
  1689 ;;		_ENVIA_LCD_CMD
  1690 ;; This function is called by:
  1691 ;;		_pantallazo
  1692 ;;		_LCD_INIT
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text14
  1697  001196                     __ptext14:
  1698                           	callstack 0
  1699  001196                     _BORRAR_LCD:
  1700                           	callstack 19
  1701  001196                     
  1702                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1703  001196  0E01               	movlw	1
  1704  001198  EC80  F007         	call	_ENVIA_LCD_CMD
  1705  00119C  0012               	return		;funcret
  1706  00119E                     __end_of_BORRAR_LCD:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _ENVIA_LCD_CMD *****************
  1710 ;; Defined at:
  1711 ;;		line 128 in file "LCD.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  dato            1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  dato            1   36[COMRAM] unsigned char 
  1716 ;;  aux             1   37[COMRAM] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0
  1727 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1729 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1730 ;;Total ram usage:        2 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 9
  1733 ;; This function calls:
  1734 ;;		_ENVIA_NIBBLE
  1735 ;;		_LEER_LCD
  1736 ;; This function is called by:
  1737 ;;		_POS_CURSOR
  1738 ;;		_CURSOR_HOME
  1739 ;;		_CURSOR_ONOFF
  1740 ;;		_BORRAR_LCD
  1741 ;;		_LCD_CONFIG
  1742 ;;		_BLINK_CURSOR
  1743 ;;		_DISPLAY_ONOFF
  1744 ;;		_CURSOR_SHIFTLEFT
  1745 ;;		_CURSOR_SHIFTRIGHT
  1746 ;;		_DISPLAY_SHIFTLEFT
  1747 ;;		_DISPLAY_SHIFTRIGHT
  1748 ;;		_GENERACARACTER
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text15
  1753  000F00                     __ptext15:
  1754                           	callstack 0
  1755  000F00                     _ENVIA_LCD_CMD:
  1756                           	callstack 19
  1757                           
  1758                           ;incstack = 0
  1759                           ;ENVIA_LCD_CMD@dato stored from wreg
  1760  000F00  6E25               	movwf	ENVIA_LCD_CMD@dato^0,c
  1761  000F02                     
  1762                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1763  000F02  908D               	bcf	141,0,c	;volatile
  1764  000F04                     
  1765                           ;LCD.c: 132:  LEER_LCD();
  1766  000F04  ECA8  F004         	call	_LEER_LCD	;wreg free
  1767  000F08                     
  1768                           ;LCD.c: 133:  TRISD = 0b00000000;
  1769  000F08  0E00               	movlw	0
  1770  000F0A  6E95               	movwf	149,c	;volatile
  1771  000F0C                     
  1772                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1773  000F0C  0E21               	movlw	33
  1774  000F0E                     u657:
  1775  000F0E  2EE8               	decfsz	wreg,f,c
  1776  000F10  D7FE               	bra	u657
  1777  000F12  F000               	nop	
  1778  000F14                     
  1779                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1780  000F14  928D               	bcf	141,1,c	;volatile
  1781  000F16                     
  1782                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1783  000F16  948D               	bcf	141,2,c	;volatile
  1784  000F18                     
  1785                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1786  000F18  908D               	bcf	141,0,c	;volatile
  1787  000F1A                     
  1788                           ;LCD.c: 138:  aux = dato & 0xF0;
  1789  000F1A  5025               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1790  000F1C  0BF0               	andlw	240
  1791  000F1E  6E26               	movwf	ENVIA_LCD_CMD@aux^0,c
  1792  000F20                     
  1793                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1794  000F20  5026               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1795  000F22  EC6B  F008         	call	_ENVIA_NIBBLE
  1796  000F26                     
  1797                           ;LCD.c: 140:  aux = dato<<4;
  1798  000F26  3825               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1799  000F28  0BF0               	andlw	240
  1800  000F2A  6E26               	movwf	ENVIA_LCD_CMD@aux^0,c
  1801  000F2C                     
  1802                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1803  000F2C  5026               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1804  000F2E  EC6B  F008         	call	_ENVIA_NIBBLE
  1805  000F32  0012               	return		;funcret
  1806  000F34                     __end_of_ENVIA_LCD_CMD:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _LEER_LCD *****************
  1810 ;; Defined at:
  1811 ;;		line 144 in file "LCD.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  aux             1   35[COMRAM] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        1 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 8
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_ENVIA_CHAR
  1836 ;;		_ENVIA_LCD_CMD
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text16
  1841  000950                     __ptext16:
  1842                           	callstack 0
  1843  000950                     _LEER_LCD:
  1844                           	callstack 19
  1845  000950                     
  1846                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1847  000950  0EF8               	movlw	248
  1848  000952  6E95               	movwf	149,c	;volatile
  1849  000954                     
  1850                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1851  000954  908D               	bcf	141,0,c	;volatile
  1852  000956                     
  1853                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1854  000956  828D               	bsf	141,1,c	;volatile
  1855  000958                     
  1856                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1857  000958  848D               	bsf	141,2,c	;volatile
  1858  00095A                     
  1859                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1860  00095A  0E21               	movlw	33
  1861  00095C                     u667:
  1862  00095C  2EE8               	decfsz	wreg,f,c
  1863  00095E  D7FE               	bra	u667
  1864  000960  F000               	nop	
  1865  000962                     
  1866                           ;LCD.c: 152:  aux = PORTD;
  1867  000962  CF83 F024          	movff	3971,LEER_LCD@aux	;volatile
  1868  000966                     
  1869                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1870  000966  948D               	bcf	141,2,c	;volatile
  1871  000968                     
  1872                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1873  000968  0E21               	movlw	33
  1874  00096A                     u677:
  1875  00096A  2EE8               	decfsz	wreg,f,c
  1876  00096C  D7FE               	bra	u677
  1877  00096E  F000               	nop	
  1878  000970                     
  1879                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1880  000970  848D               	bsf	141,2,c	;volatile
  1881  000972                     
  1882                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1883  000972  0E21               	movlw	33
  1884  000974                     u687:
  1885  000974  2EE8               	decfsz	wreg,f,c
  1886  000976  D7FE               	bra	u687
  1887  000978  F000               	nop	
  1888  00097A                     
  1889                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1890  00097A  948D               	bcf	141,2,c	;volatile
  1891  00097C                     l908:
  1892                           
  1893                           ;LCD.c: 158:  aux = aux & 0x80;
  1894  00097C  5024               	movf	LEER_LCD@aux^0,w,c
  1895  00097E  0B80               	andlw	128
  1896  000980  6E24               	movwf	LEER_LCD@aux^0,c
  1897                           
  1898                           ;LCD.c: 159:  while(aux == 0x80)
  1899  000982  EFD7  F004         	goto	l922
  1900  000986                     l194:
  1901                           
  1902                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1903  000986  848D               	bsf	141,2,c	;volatile
  1904  000988                     
  1905                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1906  000988  0E21               	movlw	33
  1907  00098A                     u697:
  1908  00098A  2EE8               	decfsz	wreg,f,c
  1909  00098C  D7FE               	bra	u697
  1910  00098E  F000               	nop	
  1911  000990                     
  1912                           ;LCD.c: 163:             aux = PORTD;
  1913  000990  CF83 F024          	movff	3971,LEER_LCD@aux	;volatile
  1914  000994                     
  1915                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1916  000994  948D               	bcf	141,2,c	;volatile
  1917                           
  1918                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1919  000996  0E21               	movlw	33
  1920  000998                     u707:
  1921  000998  2EE8               	decfsz	wreg,f,c
  1922  00099A  D7FE               	bra	u707
  1923  00099C  F000               	nop	
  1924  00099E                     
  1925                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1926  00099E  848D               	bsf	141,2,c	;volatile
  1927                           
  1928                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1929  0009A0  0E21               	movlw	33
  1930  0009A2                     u717:
  1931  0009A2  2EE8               	decfsz	wreg,f,c
  1932  0009A4  D7FE               	bra	u717
  1933  0009A6  F000               	nop	
  1934  0009A8                     
  1935                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1936  0009A8  948D               	bcf	141,2,c	;volatile
  1937  0009AA  EFBE  F004         	goto	l908
  1938  0009AE                     l922:
  1939                           
  1940                           ;LCD.c: 159:  while(aux == 0x80)
  1941  0009AE  0E80               	movlw	128
  1942  0009B0  1824               	xorwf	LEER_LCD@aux^0,w,c
  1943  0009B2  B4D8               	btfsc	status,2,c
  1944  0009B4  EFDE  F004         	goto	u11
  1945  0009B8  EFE0  F004         	goto	u10
  1946  0009BC                     u11:
  1947  0009BC  EFC3  F004         	goto	l194
  1948  0009C0                     u10:
  1949  0009C0  0012               	return		;funcret
  1950  0009C2                     __end_of_LEER_LCD:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _ENVIA_NIBBLE *****************
  1954 ;; Defined at:
  1955 ;;		line 118 in file "LCD.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  dato            1    wreg     unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  dato            1   35[COMRAM] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        1 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 8
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_ENVIA_CHAR
  1980 ;;		_LCD_CONFIG
  1981 ;;		_ENVIA_LCD_CMD
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text17
  1986  0010D6                     __ptext17:
  1987                           	callstack 0
  1988  0010D6                     _ENVIA_NIBBLE:
  1989                           	callstack 19
  1990                           
  1991                           ;incstack = 0
  1992                           ;ENVIA_NIBBLE@dato stored from wreg
  1993  0010D6  6E24               	movwf	ENVIA_NIBBLE@dato^0,c
  1994  0010D8                     
  1995                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1996  0010D8  0E0F               	movlw	15
  1997  0010DA  168C               	andwf	140,f,c	;volatile
  1998                           
  1999                           ;LCD.c: 121:  dato &= 0xF0;
  2000  0010DC  0EF0               	movlw	240
  2001  0010DE  1624               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2002                           
  2003                           ;LCD.c: 122:  LATD|= dato;
  2004  0010E0  5024               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2005  0010E2  128C               	iorwf	140,f,c	;volatile
  2006  0010E4                     
  2007                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  2008  0010E4  848D               	bsf	141,2,c	;volatile
  2009  0010E6                     
  2010                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2011  0010E6  0E21               	movlw	33
  2012  0010E8                     u727:
  2013  0010E8  2EE8               	decfsz	wreg,f,c
  2014  0010EA  D7FE               	bra	u727
  2015  0010EC  F000               	nop	
  2016  0010EE                     
  2017                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  2018  0010EE  948D               	bcf	141,2,c	;volatile
  2019  0010F0  0012               	return		;funcret
  2020  0010F2                     __end_of_ENVIA_NIBBLE:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _INT1_ISR *****************
  2024 ;; Defined at:
  2025 ;;		line 102 in file "maincode1.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  x               1   34[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        9 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 7
  2046 ;; This function calls:
  2047 ;;		i1_BORRAR_LCD
  2048 ;;		i1_ENVIA_CHAR
  2049 ;;		i1_ESCRIBE_MENSAJE2
  2050 ;;		i1_EUSART_NewLine
  2051 ;;		i1_EUSART_SendString
  2052 ;;		i1_POS_CURSOR
  2053 ;; This function is called by:
  2054 ;;		Interrupt level 1
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	intcodelo
  2059  000018                     __pintcodelo:
  2060                           	callstack 0
  2061  000018                     _INT1_ISR:
  2062                           	callstack 18
  2063                           
  2064                           ;incstack = 0
  2065  000018  8030               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2066  00001A  CFD8 F01C          	movff	status,??_INT1_ISR+1
  2067  00001E  CFE8 F01D          	movff	wreg,??_INT1_ISR+2
  2068  000022  CFE0 F01E          	movff	bsr,??_INT1_ISR+3
  2069  000026  CFF6 F01F          	movff	tblptrl,??_INT1_ISR+4
  2070  00002A  CFF7 F020          	movff	tblptrh,??_INT1_ISR+5
  2071  00002E  CFF8 F021          	movff	tblptru,??_INT1_ISR+6
  2072  000032  CFF5 F022          	movff	tablat,??_INT1_ISR+7
  2073  000036                     
  2074                           ;maincode1.c: 103:     INTCON3bits.INT1IF = 0;
  2075  000036  90F0               	bcf	240,0,c	;volatile
  2076  000038                     
  2077                           ;maincode1.c: 104:     POS_CURSOR(1,0);
  2078  000038  0E00               	movlw	0
  2079  00003A  6E14               	movwf	i1POS_CURSOR@columna^0,c
  2080  00003C  0E01               	movlw	1
  2081  00003E  ECF2  F006         	call	i1_POS_CURSOR
  2082  000042                     
  2083                           ;maincode1.c: 105:     ESCRIBE_MENSAJE2("Servomotor      ");
  2084  000042  0E5D               	movlw	low STR_5
  2085  000044  6E15               	movwf	i1ESCRIBE_MENSAJE2@cadena^0,c
  2086  000046  0E08               	movlw	high STR_5
  2087  000048  6E16               	movwf	(i1ESCRIBE_MENSAJE2@cadena+1)^0,c
  2088  00004A  EC49  F006         	call	i1_ESCRIBE_MENSAJE2	;wreg free
  2089  00004E                     
  2090                           ;maincode1.c: 106:     POS_CURSOR(2,0);
  2091  00004E  0E00               	movlw	0
  2092  000050  6E14               	movwf	i1POS_CURSOR@columna^0,c
  2093  000052  0E02               	movlw	2
  2094  000054  ECF2  F006         	call	i1_POS_CURSOR
  2095                           
  2096                           ;maincode1.c: 107:     ESCRIBE_MENSAJE2("moviendo a  180");
  2097  000058  0E7E               	movlw	low STR_9
  2098  00005A  6E15               	movwf	i1ESCRIBE_MENSAJE2@cadena^0,c
  2099  00005C  0E08               	movlw	high STR_9
  2100  00005E  6E16               	movwf	(i1ESCRIBE_MENSAJE2@cadena+1)^0,c
  2101  000060  EC49  F006         	call	i1_ESCRIBE_MENSAJE2	;wreg free
  2102  000064                     
  2103                           ;maincode1.c: 108:     ENVIA_CHAR(0xDF);
  2104  000064  0EDF               	movlw	223
  2105  000066  EC9A  F007         	call	i1_ENVIA_CHAR
  2106  00006A                     
  2107                           ;maincode1.c: 109:     EUSART_SendString("Moviendo servomotor a 180 grados");
  2108  00006A  0E23               	movlw	low STR_10
  2109  00006C  6E15               	movwf	i1EUSART_SendString@cadenasa^0,c
  2110  00006E  0E08               	movlw	high STR_10
  2111  000070  6E16               	movwf	(i1EUSART_SendString@cadenasa+1)^0,c
  2112  000072  EC24  F006         	call	i1_EUSART_SendString	;wreg free
  2113  000076                     
  2114                           ;maincode1.c: 110:     EUSART_NewLine();
  2115  000076  EC45  F008         	call	i1_EUSART_NewLine	;wreg free
  2116  00007A                     
  2117                           ;maincode1.c: 111:     unsigned char x;;maincode1.c: 112:     for(x=0;x<50;x++){
  2118  00007A  0E00               	movlw	0
  2119  00007C  6E23               	movwf	INT1_ISR@x^0,c
  2120  00007E                     i1l105:
  2121                           
  2122                           ;maincode1.c: 113:         LATAbits.LA0 = 1;
  2123  00007E  8089               	bsf	137,0,c	;volatile
  2124  000080                     
  2125                           ;maincode1.c: 114:         _delay((unsigned long)((2300)*(4000000UL/4000000.0)));
  2126  000080  0E03               	movlw	3
  2127  000082  6E1B               	movwf	??_INT1_ISR^0,c
  2128  000084  0EFC               	movlw	252
  2129  000086                     i1u73_27:
  2130  000086  2EE8               	decfsz	wreg,f,c
  2131  000088  D7FE               	bra	i1u73_27
  2132  00008A  2E1B               	decfsz	??_INT1_ISR^0,f,c
  2133  00008C  D7FC               	bra	i1u73_27
  2134  00008E                     
  2135                           ;maincode1.c: 115:         LATAbits.LA0 = 0;
  2136  00008E  9089               	bcf	137,0,c	;volatile
  2137                           
  2138                           ;maincode1.c: 116:         _delay((unsigned long)((17700)*(4000000UL/4000000.0)));
  2139  000090  0E17               	movlw	23
  2140  000092  6E1B               	movwf	??_INT1_ISR^0,c
  2141  000094  0EFC               	movlw	252
  2142  000096                     i1u74_27:
  2143  000096  2EE8               	decfsz	wreg,f,c
  2144  000098  D7FE               	bra	i1u74_27
  2145  00009A  2E1B               	decfsz	??_INT1_ISR^0,f,c
  2146  00009C  D7FC               	bra	i1u74_27
  2147  00009E                     
  2148                           ;maincode1.c: 117:     }
  2149  00009E  2A23               	incf	INT1_ISR@x^0,f,c
  2150  0000A0  0E31               	movlw	49
  2151  0000A2  6423               	cpfsgt	INT1_ISR@x^0,c
  2152  0000A4  EF56  F000         	goto	i1u58_21
  2153  0000A8  EF58  F000         	goto	i1u58_20
  2154  0000AC                     i1u58_21:
  2155  0000AC  EF3F  F000         	goto	i1l105
  2156  0000B0                     i1u58_20:
  2157  0000B0                     
  2158                           ;maincode1.c: 118:     BORRAR_LCD();
  2159  0000B0  ECCF  F008         	call	i1_BORRAR_LCD	;wreg free
  2160  0000B4  C022  FFF5         	movff	??_INT1_ISR+7,tablat
  2161  0000B8  C021  FFF8         	movff	??_INT1_ISR+6,tblptru
  2162  0000BC  C020  FFF7         	movff	??_INT1_ISR+5,tblptrh
  2163  0000C0  C01F  FFF6         	movff	??_INT1_ISR+4,tblptrl
  2164  0000C4  C01E  FFE0         	movff	??_INT1_ISR+3,bsr
  2165  0000C8  C01D  FFE8         	movff	??_INT1_ISR+2,wreg
  2166  0000CC  C01C  FFD8         	movff	??_INT1_ISR+1,status
  2167  0000D0  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2168  0000D2  0010               	retfie	
  2169  0000D4                     __end_of_INT1_ISR:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function i1_POS_CURSOR *****************
  2173 ;; Defined at:
  2174 ;;		line 5 in file "LCD.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  fila            1    wreg     unsigned char 
  2177 ;;  columna         1   19[COMRAM] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  fila            1   20[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2189 ;;      Params:         1       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 6
  2196 ;; This function calls:
  2197 ;;		i1_ENVIA_LCD_CMD
  2198 ;; This function is called by:
  2199 ;;		_INT1_ISR
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text19
  2204  000DE4                     __ptext19:
  2205                           	callstack 0
  2206  000DE4                     i1_POS_CURSOR:
  2207                           	callstack 18
  2208                           
  2209                           ;incstack = 0
  2210                           ;i1POS_CURSOR@fila stored from wreg
  2211  000DE4  6E15               	movwf	i1POS_CURSOR@fila^0,c
  2212  000DE6                     
  2213                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2214  000DE6  0415               	decf	i1POS_CURSOR@fila^0,w,c
  2215  000DE8  A4D8               	btfss	status,2,c
  2216  000DEA  EFF9  F006         	goto	i1u51_21
  2217  000DEE  EFFB  F006         	goto	i1u51_20
  2218  000DF2                     i1u51_21:
  2219  000DF2  EF01  F007         	goto	i1l1782
  2220  000DF6                     i1u51_20:
  2221  000DF6                     
  2222                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2223  000DF6  5014               	movf	i1POS_CURSOR@columna^0,w,c
  2224  000DF8  0F80               	addlw	128
  2225  000DFA  ECB4  F007         	call	i1_ENVIA_LCD_CMD
  2226                           
  2227                           ;LCD.c: 10:  }
  2228  000DFE  EF0E  F007         	goto	i1l133
  2229  000E02                     i1l1782:
  2230  000E02  0E02               	movlw	2
  2231  000E04  1815               	xorwf	i1POS_CURSOR@fila^0,w,c
  2232  000E06  A4D8               	btfss	status,2,c
  2233  000E08  EF08  F007         	goto	i1u52_21
  2234  000E0C  EF0A  F007         	goto	i1u52_20
  2235  000E10                     i1u52_21:
  2236  000E10  EF0E  F007         	goto	i1l133
  2237  000E14                     i1u52_20:
  2238  000E14                     
  2239                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2240  000E14  5014               	movf	i1POS_CURSOR@columna^0,w,c
  2241  000E16  0FC0               	addlw	192
  2242  000E18  ECB4  F007         	call	i1_ENVIA_LCD_CMD
  2243  000E1C                     i1l133:
  2244  000E1C  0012               	return		;funcret
  2245  000E1E                     __end_ofi1_POS_CURSOR:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function i1_EUSART_SendString *****************
  2249 ;; Defined at:
  2250 ;;		line 48 in file "maincode1.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  cadenasa        2   20[COMRAM] PTR unsigned char 
  2253 ;;		 -> STR_10(33), STR_7(34), STR_4(25), STR_3(11), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  x               1   25[COMRAM] unsigned char 
  2256 ;;  tam             1   24[COMRAM] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         2       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        6 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 5
  2273 ;; This function calls:
  2274 ;;		i1_EUSART_SendByte
  2275 ;;		i1_strlen
  2276 ;; This function is called by:
  2277 ;;		_INT1_ISR
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text20
  2282  000C48                     __ptext20:
  2283                           	callstack 0
  2284  000C48                     i1_EUSART_SendString:
  2285                           	callstack 19
  2286  000C48                     
  2287                           ;maincode1.c: 49:     unsigned char tam;;maincode1.c: 50:     tam = strlen(cadenasa);
  2288  000C48  C015  F011         	movff	i1EUSART_SendString@cadenasa,i1strlen@s
  2289  000C4C  C016  F012         	movff	i1EUSART_SendString@cadenasa+1,i1strlen@s+1
  2290  000C50  EC0F  F007         	call	i1_strlen	;wreg free
  2291  000C54  5011               	movf	?i1_strlen^0,w,c
  2292  000C56  6E19               	movwf	i1EUSART_SendString@tam^0,c
  2293  000C58                     
  2294                           ;maincode1.c: 51:     unsigned char x;;maincode1.c: 52:     for(x=0;x<tam;x++){
  2295  000C58  0E00               	movlw	0
  2296  000C5A  6E1A               	movwf	i1EUSART_SendString@x^0,c
  2297  000C5C  EF3F  F006         	goto	i1l1766
  2298  000C60                     i1l1762:
  2299                           
  2300                           ;maincode1.c: 53:         EUSART_SendByte(cadenasa[x]);
  2301  000C60  501A               	movf	i1EUSART_SendString@x^0,w,c
  2302  000C62  2415               	addwf	i1EUSART_SendString@cadenasa^0,w,c
  2303  000C64  6E17               	movwf	??i1_EUSART_SendString^0,c
  2304  000C66  0E00               	movlw	0
  2305  000C68  2016               	addwfc	(i1EUSART_SendString@cadenasa+1)^0,w,c
  2306  000C6A  6E18               	movwf	(??i1_EUSART_SendString+1)^0,c
  2307  000C6C  C017  FFF6         	movff	??i1_EUSART_SendString,tblptrl
  2308  000C70  C018  FFF7         	movff	??i1_EUSART_SendString+1,tblptrh
  2309  000C74                     	if	0	;tblptru may be non-zero
  2310  000C74                     	endif
  2311  000C74                     	if	0	;tblptru may be non-zero
  2312  000C74                     	endif
  2313  000C74  0008               	tblrd		*
  2314  000C76  50F5               	movf	tablat,w,c
  2315  000C78  ECA0  F008         	call	i1_EUSART_SendByte
  2316  000C7C                     
  2317                           ;maincode1.c: 54:     }
  2318  000C7C  2A1A               	incf	i1EUSART_SendString@x^0,f,c
  2319  000C7E                     i1l1766:
  2320  000C7E  5019               	movf	i1EUSART_SendString@tam^0,w,c
  2321  000C80  5C1A               	subwf	i1EUSART_SendString@x^0,w,c
  2322  000C82  A0D8               	btfss	status,0,c
  2323  000C84  EF46  F006         	goto	i1u49_21
  2324  000C88  EF48  F006         	goto	i1u49_20
  2325  000C8C                     i1u49_21:
  2326  000C8C  EF30  F006         	goto	i1l1762
  2327  000C90                     i1u49_20:
  2328  000C90  0012               	return		;funcret
  2329  000C92                     __end_ofi1_EUSART_SendString:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function i1_EUSART_SendByte *****************
  2333 ;; Defined at:
  2334 ;;		line 43 in file "maincode1.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  dato            1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  dato            1   16[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0
  2349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2352 ;;Total ram usage:        1 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 4
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		i1_EUSART_SendString
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text21
  2363  001140                     __ptext21:
  2364                           	callstack 0
  2365  001140                     i1_EUSART_SendByte:
  2366                           	callstack 19
  2367                           
  2368                           ;incstack = 0
  2369                           ;i1EUSART_SendByte@dato stored from wreg
  2370  001140  6E11               	movwf	i1EUSART_SendByte@dato^0,c
  2371  001142                     
  2372                           ;maincode1.c: 44:     TXREG1 = dato;
  2373  001142  C011  FFAD         	movff	i1EUSART_SendByte@dato,4013	;volatile
  2374  001146                     i1l64:
  2375  001146  A2AC               	btfss	172,1,c	;volatile
  2376  001148  EFA8  F008         	goto	i1u45_21
  2377  00114C  EFAA  F008         	goto	i1u45_20
  2378  001150                     i1u45_21:
  2379  001150  EFA3  F008         	goto	i1l64
  2380  001154                     i1u45_20:
  2381  001154  0012               	return		;funcret
  2382  001156                     __end_ofi1_EUSART_SendByte:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function i1_EUSART_NewLine *****************
  2386 ;; Defined at:
  2387 ;;		line 57 in file "maincode1.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 4
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_INT1_ISR
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text22
  2416  00108A                     __ptext22:
  2417                           	callstack 0
  2418  00108A                     i1_EUSART_NewLine:
  2419                           	callstack 20
  2420  00108A                     
  2421                           ;maincode1.c: 58:     TXREG1 = 0x0D;
  2422  00108A  0E0D               	movlw	13
  2423  00108C  6EAD               	movwf	173,c	;volatile
  2424  00108E                     i1l76:
  2425  00108E  A2AC               	btfss	172,1,c	;volatile
  2426  001090  EF4C  F008         	goto	i1u20_21
  2427  001094  EF4E  F008         	goto	i1u20_20
  2428  001098                     i1u20_21:
  2429  001098  EF47  F008         	goto	i1l76
  2430  00109C                     i1u20_20:
  2431  00109C                     
  2432                           ;maincode1.c: 60:     TXREG1 = 0x0A;
  2433  00109C  0E0A               	movlw	10
  2434  00109E  6EAD               	movwf	173,c	;volatile
  2435  0010A0                     i1l79:
  2436  0010A0  A2AC               	btfss	172,1,c	;volatile
  2437  0010A2  EF55  F008         	goto	i1u21_21
  2438  0010A6  EF57  F008         	goto	i1u21_20
  2439  0010AA                     i1u21_21:
  2440  0010AA  EF50  F008         	goto	i1l79
  2441  0010AE                     i1u21_20:
  2442  0010AE  0012               	return		;funcret
  2443  0010B0                     __end_ofi1_EUSART_NewLine:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function i1_ESCRIBE_MENSAJE2 *****************
  2447 ;; Defined at:
  2448 ;;		line 69 in file "LCD.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  cadena          2   20[COMRAM] PTR const unsigned char 
  2451 ;;		 -> STR_9(16), STR_8(17), STR_6(16), STR_5(17), 
  2452 ;;		 -> STR_2(10), STR_1(13), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  i               1   25[COMRAM] unsigned char 
  2455 ;;  tam             1   24[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2465 ;;      Params:         2       0       0       0       0       0       0       0       0
  2466 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2467 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2468 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        6 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 6
  2472 ;; This function calls:
  2473 ;;		i1_ENVIA_CHAR
  2474 ;;		i1_strlen
  2475 ;; This function is called by:
  2476 ;;		_INT1_ISR
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text23
  2481  000C92                     __ptext23:
  2482                           	callstack 0
  2483  000C92                     i1_ESCRIBE_MENSAJE2:
  2484                           	callstack 18
  2485  000C92                     
  2486                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2487  000C92  C015  F011         	movff	i1ESCRIBE_MENSAJE2@cadena,i1strlen@s
  2488  000C96  C016  F012         	movff	i1ESCRIBE_MENSAJE2@cadena+1,i1strlen@s+1
  2489  000C9A  EC0F  F007         	call	i1_strlen	;wreg free
  2490  000C9E  5011               	movf	?i1_strlen^0,w,c
  2491  000CA0  6E19               	movwf	i1ESCRIBE_MENSAJE2@tam^0,c
  2492  000CA2                     
  2493                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2494  000CA2  0E00               	movlw	0
  2495  000CA4  6E1A               	movwf	i1ESCRIBE_MENSAJE2@i^0,c
  2496  000CA6  EF64  F006         	goto	i1l1804
  2497  000CAA                     i1l1800:
  2498                           
  2499                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2500  000CAA  501A               	movf	i1ESCRIBE_MENSAJE2@i^0,w,c
  2501  000CAC  2415               	addwf	i1ESCRIBE_MENSAJE2@cadena^0,w,c
  2502  000CAE  6E17               	movwf	??i1_ESCRIBE_MENSAJE2^0,c
  2503  000CB0  0E00               	movlw	0
  2504  000CB2  2016               	addwfc	(i1ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  2505  000CB4  6E18               	movwf	(??i1_ESCRIBE_MENSAJE2+1)^0,c
  2506  000CB6  C017  FFF6         	movff	??i1_ESCRIBE_MENSAJE2,tblptrl
  2507  000CBA  C018  FFF7         	movff	??i1_ESCRIBE_MENSAJE2+1,tblptrh
  2508  000CBE                     	if	0	;tblptru may be non-zero
  2509  000CBE                     	endif
  2510  000CBE                     	if	0	;tblptru may be non-zero
  2511  000CBE                     	endif
  2512  000CBE  0008               	tblrd		*
  2513  000CC0  50F5               	movf	tablat,w,c
  2514  000CC2  EC9A  F007         	call	i1_ENVIA_CHAR
  2515  000CC6                     
  2516                           ;LCD.c: 77:  }
  2517  000CC6  2A1A               	incf	i1ESCRIBE_MENSAJE2@i^0,f,c
  2518  000CC8                     i1l1804:
  2519  000CC8  5019               	movf	i1ESCRIBE_MENSAJE2@tam^0,w,c
  2520  000CCA  5C1A               	subwf	i1ESCRIBE_MENSAJE2@i^0,w,c
  2521  000CCC  A0D8               	btfss	status,0,c
  2522  000CCE  EF6B  F006         	goto	i1u55_21
  2523  000CD2  EF6D  F006         	goto	i1u55_20
  2524  000CD6                     i1u55_21:
  2525  000CD6  EF55  F006         	goto	i1l1800
  2526  000CDA                     i1u55_20:
  2527  000CDA  0012               	return		;funcret
  2528  000CDC                     __end_ofi1_ESCRIBE_MENSAJE2:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function i1_strlen *****************
  2532 ;; Defined at:
  2533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2536 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  2537 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  2538 ;;		 -> STR_2(10), STR_1(13), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2541 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  2542 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  2543 ;;		 -> STR_2(10), STR_1(13), 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   16[COMRAM] unsigned int 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         2       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2556 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:        4 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 4
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		i1_EUSART_SendString
  2564 ;;		i1_ESCRIBE_MENSAJE2
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text24
  2569  000E1E                     __ptext24:
  2570                           	callstack 0
  2571  000E1E                     i1_strlen:
  2572                           	callstack 19
  2573  000E1E  C011  F013         	movff	i1strlen@s,i1strlen@a
  2574  000E22  C012  F014         	movff	i1strlen@s+1,i1strlen@a+1
  2575  000E26  EF17  F007         	goto	i1l1728
  2576  000E2A                     i1l1726:
  2577  000E2A  4A11               	infsnz	i1strlen@s^0,f,c
  2578  000E2C  2A12               	incf	(i1strlen@s+1)^0,f,c
  2579  000E2E                     i1l1728:
  2580  000E2E  C011  FFF6         	movff	i1strlen@s,tblptrl
  2581  000E32  C012  FFF7         	movff	i1strlen@s+1,tblptrh
  2582  000E36                     	if	0	;tblptru may be non-zero
  2583  000E36                     	endif
  2584  000E36                     	if	0	;tblptru may be non-zero
  2585  000E36                     	endif
  2586  000E36  0008               	tblrd		*
  2587  000E38  50F5               	movf	tablat,w,c
  2588  000E3A  0900               	iorlw	0
  2589  000E3C  A4D8               	btfss	status,2,c
  2590  000E3E  EF23  F007         	goto	i1u47_21
  2591  000E42  EF25  F007         	goto	i1u47_20
  2592  000E46                     i1u47_21:
  2593  000E46  EF15  F007         	goto	i1l1726
  2594  000E4A                     i1u47_20:
  2595  000E4A  5013               	movf	i1strlen@a^0,w,c
  2596  000E4C  5C11               	subwf	i1strlen@s^0,w,c
  2597  000E4E  6E11               	movwf	?i1_strlen^0,c
  2598  000E50  5014               	movf	(i1strlen@a+1)^0,w,c
  2599  000E52  5812               	subwfb	(i1strlen@s+1)^0,w,c
  2600  000E54  6E12               	movwf	(?i1_strlen+1)^0,c
  2601  000E56  0012               	return		;funcret
  2602  000E58                     __end_ofi1_strlen:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function i1_ENVIA_CHAR *****************
  2606 ;; Defined at:
  2607 ;;		line 80 in file "LCD.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  dato            1    wreg     unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  dato            1   17[COMRAM] unsigned char 
  2612 ;;  aux             1   18[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        2 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 5
  2629 ;; This function calls:
  2630 ;;		i1_ENVIA_NIBBLE
  2631 ;;		i1_LEER_LCD
  2632 ;; This function is called by:
  2633 ;;		_INT1_ISR
  2634 ;;		i1_ESCRIBE_MENSAJE2
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text25
  2639  000F34                     __ptext25:
  2640                           	callstack 0
  2641  000F34                     i1_ENVIA_CHAR:
  2642                           	callstack 18
  2643                           
  2644                           ;incstack = 0
  2645                           ;i1ENVIA_CHAR@dato stored from wreg
  2646  000F34  6E12               	movwf	i1ENVIA_CHAR@dato^0,c
  2647  000F36                     
  2648                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2649  000F36  808D               	bsf	141,0,c	;volatile
  2650  000F38                     
  2651                           ;LCD.c: 84:  LEER_LCD();
  2652  000F38  ECE1  F004         	call	i1_LEER_LCD	;wreg free
  2653  000F3C                     
  2654                           ;LCD.c: 85:  TRISD = 0x00;
  2655  000F3C  0E00               	movlw	0
  2656  000F3E  6E95               	movwf	149,c	;volatile
  2657  000F40                     
  2658                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2659  000F40  0E21               	movlw	33
  2660  000F42                     i1u75_27:
  2661  000F42  2EE8               	decfsz	wreg,f,c
  2662  000F44  D7FE               	bra	i1u75_27
  2663  000F46  F000               	nop	
  2664  000F48                     
  2665                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2666  000F48  928D               	bcf	141,1,c	;volatile
  2667  000F4A                     
  2668                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2669  000F4A  948D               	bcf	141,2,c	;volatile
  2670  000F4C                     
  2671                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2672  000F4C  808D               	bsf	141,0,c	;volatile
  2673  000F4E                     
  2674                           ;LCD.c: 90:  aux = dato & 0xF0;
  2675  000F4E  5012               	movf	i1ENVIA_CHAR@dato^0,w,c
  2676  000F50  0BF0               	andlw	240
  2677  000F52  6E13               	movwf	i1ENVIA_CHAR@aux^0,c
  2678  000F54                     
  2679                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2680  000F54  5013               	movf	i1ENVIA_CHAR@aux^0,w,c
  2681  000F56  EC79  F008         	call	i1_ENVIA_NIBBLE
  2682  000F5A                     
  2683                           ;LCD.c: 92:  aux = dato << 4;
  2684  000F5A  3812               	swapf	i1ENVIA_CHAR@dato^0,w,c
  2685  000F5C  0BF0               	andlw	240
  2686  000F5E  6E13               	movwf	i1ENVIA_CHAR@aux^0,c
  2687  000F60                     
  2688                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2689  000F60  5013               	movf	i1ENVIA_CHAR@aux^0,w,c
  2690  000F62  EC79  F008         	call	i1_ENVIA_NIBBLE
  2691  000F66  0012               	return		;funcret
  2692  000F68                     __end_ofi1_ENVIA_CHAR:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function i1_BORRAR_LCD *****************
  2696 ;; Defined at:
  2697 ;;		line 96 in file "LCD.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 6
  2718 ;; This function calls:
  2719 ;;		i1_ENVIA_LCD_CMD
  2720 ;; This function is called by:
  2721 ;;		_INT1_ISR
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text26
  2726  00119E                     __ptext26:
  2727                           	callstack 0
  2728  00119E                     i1_BORRAR_LCD:
  2729                           	callstack 18
  2730  00119E                     
  2731                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2732  00119E  0E01               	movlw	1
  2733  0011A0  ECB4  F007         	call	i1_ENVIA_LCD_CMD
  2734  0011A4  0012               	return		;funcret
  2735  0011A6                     __end_ofi1_BORRAR_LCD:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function i1_ENVIA_LCD_CMD *****************
  2739 ;; Defined at:
  2740 ;;		line 128 in file "LCD.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  dato            1    wreg     unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  dato            1   17[COMRAM] unsigned char 
  2745 ;;  aux             1   18[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 5
  2762 ;; This function calls:
  2763 ;;		i1_ENVIA_NIBBLE
  2764 ;;		i1_LEER_LCD
  2765 ;; This function is called by:
  2766 ;;		i1_POS_CURSOR
  2767 ;;		i1_BORRAR_LCD
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text27
  2772  000F68                     __ptext27:
  2773                           	callstack 0
  2774  000F68                     i1_ENVIA_LCD_CMD:
  2775                           	callstack 18
  2776                           
  2777                           ;incstack = 0
  2778                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  2779  000F68  6E12               	movwf	i1ENVIA_LCD_CMD@dato^0,c
  2780  000F6A                     
  2781                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  2782  000F6A  908D               	bcf	141,0,c	;volatile
  2783  000F6C                     
  2784                           ;LCD.c: 132:  LEER_LCD();
  2785  000F6C  ECE1  F004         	call	i1_LEER_LCD	;wreg free
  2786  000F70                     
  2787                           ;LCD.c: 133:  TRISD = 0b00000000;
  2788  000F70  0E00               	movlw	0
  2789  000F72  6E95               	movwf	149,c	;volatile
  2790  000F74                     
  2791                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2792  000F74  0E21               	movlw	33
  2793  000F76                     i1u76_27:
  2794  000F76  2EE8               	decfsz	wreg,f,c
  2795  000F78  D7FE               	bra	i1u76_27
  2796  000F7A  F000               	nop	
  2797  000F7C                     
  2798                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  2799  000F7C  928D               	bcf	141,1,c	;volatile
  2800  000F7E                     
  2801                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  2802  000F7E  948D               	bcf	141,2,c	;volatile
  2803  000F80                     
  2804                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  2805  000F80  908D               	bcf	141,0,c	;volatile
  2806  000F82                     
  2807                           ;LCD.c: 138:  aux = dato & 0xF0;
  2808  000F82  5012               	movf	i1ENVIA_LCD_CMD@dato^0,w,c
  2809  000F84  0BF0               	andlw	240
  2810  000F86  6E13               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2811  000F88                     
  2812                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2813  000F88  5013               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2814  000F8A  EC79  F008         	call	i1_ENVIA_NIBBLE
  2815  000F8E                     
  2816                           ;LCD.c: 140:  aux = dato<<4;
  2817  000F8E  3812               	swapf	i1ENVIA_LCD_CMD@dato^0,w,c
  2818  000F90  0BF0               	andlw	240
  2819  000F92  6E13               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  2820  000F94                     
  2821                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2822  000F94  5013               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  2823  000F96  EC79  F008         	call	i1_ENVIA_NIBBLE
  2824  000F9A  0012               	return		;funcret
  2825  000F9C                     __end_ofi1_ENVIA_LCD_CMD:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function i1_LEER_LCD *****************
  2829 ;; Defined at:
  2830 ;;		line 144 in file "LCD.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  aux             1   16[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0
  2845 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2847 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2848 ;;Total ram usage:        1 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 4
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		i1_ENVIA_CHAR
  2855 ;;		i1_ENVIA_LCD_CMD
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text28
  2860  0009C2                     __ptext28:
  2861                           	callstack 0
  2862  0009C2                     i1_LEER_LCD:
  2863                           	callstack 18
  2864  0009C2                     
  2865                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2866  0009C2  0EF8               	movlw	248
  2867  0009C4  6E95               	movwf	149,c	;volatile
  2868  0009C6                     
  2869                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  2870  0009C6  908D               	bcf	141,0,c	;volatile
  2871  0009C8                     
  2872                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  2873  0009C8  828D               	bsf	141,1,c	;volatile
  2874  0009CA                     
  2875                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  2876  0009CA  848D               	bsf	141,2,c	;volatile
  2877  0009CC                     
  2878                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2879  0009CC  0E21               	movlw	33
  2880  0009CE                     i1u77_27:
  2881  0009CE  2EE8               	decfsz	wreg,f,c
  2882  0009D0  D7FE               	bra	i1u77_27
  2883  0009D2  F000               	nop	
  2884  0009D4                     
  2885                           ;LCD.c: 152:  aux = PORTD;
  2886  0009D4  CF83 F011          	movff	3971,i1LEER_LCD@aux	;volatile
  2887  0009D8                     
  2888                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  2889  0009D8  948D               	bcf	141,2,c	;volatile
  2890  0009DA                     
  2891                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2892  0009DA  0E21               	movlw	33
  2893  0009DC                     i1u78_27:
  2894  0009DC  2EE8               	decfsz	wreg,f,c
  2895  0009DE  D7FE               	bra	i1u78_27
  2896  0009E0  F000               	nop	
  2897  0009E2                     
  2898                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  2899  0009E2  848D               	bsf	141,2,c	;volatile
  2900  0009E4                     
  2901                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2902  0009E4  0E21               	movlw	33
  2903  0009E6                     i1u79_27:
  2904  0009E6  2EE8               	decfsz	wreg,f,c
  2905  0009E8  D7FE               	bra	i1u79_27
  2906  0009EA  F000               	nop	
  2907  0009EC                     
  2908                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  2909  0009EC  948D               	bcf	141,2,c	;volatile
  2910  0009EE                     i1l1548:
  2911                           
  2912                           ;LCD.c: 158:  aux = aux & 0x80;
  2913  0009EE  5011               	movf	i1LEER_LCD@aux^0,w,c
  2914  0009F0  0B80               	andlw	128
  2915  0009F2  6E11               	movwf	i1LEER_LCD@aux^0,c
  2916                           
  2917                           ;LCD.c: 159:  while(aux == 0x80)
  2918  0009F4  EF10  F005         	goto	i1l1562
  2919  0009F8                     i1l194:
  2920                           
  2921                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  2922  0009F8  848D               	bsf	141,2,c	;volatile
  2923  0009FA                     
  2924                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2925  0009FA  0E21               	movlw	33
  2926  0009FC                     i1u80_27:
  2927  0009FC  2EE8               	decfsz	wreg,f,c
  2928  0009FE  D7FE               	bra	i1u80_27
  2929  000A00  F000               	nop	
  2930  000A02                     
  2931                           ;LCD.c: 163:             aux = PORTD;
  2932  000A02  CF83 F011          	movff	3971,i1LEER_LCD@aux	;volatile
  2933  000A06                     
  2934                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  2935  000A06  948D               	bcf	141,2,c	;volatile
  2936                           
  2937                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2938  000A08  0E21               	movlw	33
  2939  000A0A                     i1u81_27:
  2940  000A0A  2EE8               	decfsz	wreg,f,c
  2941  000A0C  D7FE               	bra	i1u81_27
  2942  000A0E  F000               	nop	
  2943  000A10                     
  2944                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  2945  000A10  848D               	bsf	141,2,c	;volatile
  2946                           
  2947                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2948  000A12  0E21               	movlw	33
  2949  000A14                     i1u82_27:
  2950  000A14  2EE8               	decfsz	wreg,f,c
  2951  000A16  D7FE               	bra	i1u82_27
  2952  000A18  F000               	nop	
  2953  000A1A                     
  2954                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  2955  000A1A  948D               	bcf	141,2,c	;volatile
  2956  000A1C  EFF7  F004         	goto	i1l1548
  2957  000A20                     i1l1562:
  2958                           
  2959                           ;LCD.c: 159:  while(aux == 0x80)
  2960  000A20  0E80               	movlw	128
  2961  000A22  1811               	xorwf	i1LEER_LCD@aux^0,w,c
  2962  000A24  B4D8               	btfsc	status,2,c
  2963  000A26  EF17  F005         	goto	i1u39_21
  2964  000A2A  EF19  F005         	goto	i1u39_20
  2965  000A2E                     i1u39_21:
  2966  000A2E  EFFC  F004         	goto	i1l194
  2967  000A32                     i1u39_20:
  2968  000A32  0012               	return		;funcret
  2969  000A34                     __end_ofi1_LEER_LCD:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function i1_ENVIA_NIBBLE *****************
  2973 ;; Defined at:
  2974 ;;		line 118 in file "LCD.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  dato            1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  dato            1   16[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2991 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 4
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		i1_ENVIA_CHAR
  2999 ;;		i1_ENVIA_LCD_CMD
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text29
  3004  0010F2                     __ptext29:
  3005                           	callstack 0
  3006  0010F2                     i1_ENVIA_NIBBLE:
  3007                           	callstack 18
  3008                           
  3009                           ;incstack = 0
  3010                           ;i1ENVIA_NIBBLE@dato stored from wreg
  3011  0010F2  6E11               	movwf	i1ENVIA_NIBBLE@dato^0,c
  3012  0010F4                     
  3013                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  3014  0010F4  0E0F               	movlw	15
  3015  0010F6  168C               	andwf	140,f,c	;volatile
  3016                           
  3017                           ;LCD.c: 121:  dato &= 0xF0;
  3018  0010F8  0EF0               	movlw	240
  3019  0010FA  1611               	andwf	i1ENVIA_NIBBLE@dato^0,f,c
  3020                           
  3021                           ;LCD.c: 122:  LATD|= dato;
  3022  0010FC  5011               	movf	i1ENVIA_NIBBLE@dato^0,w,c	;volatile
  3023  0010FE  128C               	iorwf	140,f,c	;volatile
  3024  001100                     
  3025                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  3026  001100  848D               	bsf	141,2,c	;volatile
  3027  001102                     
  3028                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3029  001102  0E21               	movlw	33
  3030  001104                     i1u83_27:
  3031  001104  2EE8               	decfsz	wreg,f,c
  3032  001106  D7FE               	bra	i1u83_27
  3033  001108  F000               	nop	
  3034  00110A                     
  3035                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  3036  00110A  948D               	bcf	141,2,c	;volatile
  3037  00110C  0012               	return		;funcret
  3038  00110E                     __end_ofi1_ENVIA_NIBBLE:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _INT0_ISR *****************
  3042 ;; Defined at:
  3043 ;;		line 83 in file "maincode1.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  x               1   15[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0
  3058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3059 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3060 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        6 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 3
  3064 ;; This function calls:
  3065 ;;		i2_BORRAR_LCD
  3066 ;;		i2_ENVIA_CHAR
  3067 ;;		i2_ESCRIBE_MENSAJE2
  3068 ;;		i2_EUSART_NewLine
  3069 ;;		i2_EUSART_SendString
  3070 ;;		i2_POS_CURSOR
  3071 ;; This function is called by:
  3072 ;;		Interrupt level 2
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	intcode
  3077  000008                     __pintcode:
  3078                           	callstack 0
  3079  000008                     _INT0_ISR:
  3080                           	callstack 18
  3081                           
  3082                           ;incstack = 0
  3083  000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3084  00000A  EF59  F004         	goto	int_func
  3085                           
  3086                           	psect	intcode_body
  3087  0008B2                     __pintcode_body:
  3088                           	callstack 18
  3089  0008B2                     int_func:
  3090                           	callstack 18
  3091  0008B2  CFF6 F00C          	movff	tblptrl,??_INT0_ISR+1
  3092  0008B6  CFF7 F00D          	movff	tblptrh,??_INT0_ISR+2
  3093  0008BA  CFF8 F00E          	movff	tblptru,??_INT0_ISR+3
  3094  0008BE  CFF5 F00F          	movff	tablat,??_INT0_ISR+4
  3095  0008C2                     
  3096                           ;maincode1.c: 84:     INTCONbits.INT0IF = 0;
  3097  0008C2  92F2               	bcf	242,1,c	;volatile
  3098  0008C4                     
  3099                           ;maincode1.c: 85:     POS_CURSOR(1,0);
  3100  0008C4  0E00               	movlw	0
  3101  0008C6  6E04               	movwf	i2POS_CURSOR@columna^0,c
  3102  0008C8  0E01               	movlw	1
  3103  0008CA  EC2C  F007         	call	i2_POS_CURSOR
  3104  0008CE                     
  3105                           ;maincode1.c: 86:     ESCRIBE_MENSAJE2("Servomotor      ");
  3106  0008CE  0E5D               	movlw	low STR_5
  3107  0008D0  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  3108  0008D2  0E08               	movlw	high STR_5
  3109  0008D4  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  3110  0008D6  EC93  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  3111  0008DA                     
  3112                           ;maincode1.c: 87:     POS_CURSOR(2,0);
  3113  0008DA  0E00               	movlw	0
  3114  0008DC  6E04               	movwf	i2POS_CURSOR@columna^0,c
  3115  0008DE  0E02               	movlw	2
  3116  0008E0  EC2C  F007         	call	i2_POS_CURSOR
  3117                           
  3118                           ;maincode1.c: 88:     ESCRIBE_MENSAJE2("moviendose a  0");
  3119  0008E4  0E6E               	movlw	low STR_6
  3120  0008E6  6E05               	movwf	i2ESCRIBE_MENSAJE2@cadena^0,c
  3121  0008E8  0E08               	movlw	high STR_6
  3122  0008EA  6E06               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^0,c
  3123  0008EC  EC93  F006         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  3124  0008F0                     
  3125                           ;maincode1.c: 89:     ENVIA_CHAR(0xDF);
  3126  0008F0  0EDF               	movlw	223
  3127  0008F2  ECCE  F007         	call	i2_ENVIA_CHAR
  3128  0008F6                     
  3129                           ;maincode1.c: 90:     EUSART_SendString("Moviendo servomotor a cero grados");
  3130  0008F6  0E01               	movlw	low STR_7
  3131  0008F8  6E05               	movwf	i2EUSART_SendString@cadenasa^0,c
  3132  0008FA  0E08               	movlw	high STR_7
  3133  0008FC  6E06               	movwf	(i2EUSART_SendString@cadenasa+1)^0,c
  3134  0008FE  EC6E  F006         	call	i2_EUSART_SendString	;wreg free
  3135  000902                     
  3136                           ;maincode1.c: 91:     EUSART_NewLine();
  3137  000902  EC58  F008         	call	i2_EUSART_NewLine	;wreg free
  3138  000906                     
  3139                           ;maincode1.c: 92:     unsigned char x;;maincode1.c: 93:     for(x=0;x<50;x++){
  3140  000906  0E00               	movlw	0
  3141  000908  6E10               	movwf	INT0_ISR@x^0,c
  3142  00090A                     i2l98:
  3143                           
  3144                           ;maincode1.c: 94:         LATAbits.LA0 = 1;
  3145  00090A  8089               	bsf	137,0,c	;volatile
  3146  00090C                     
  3147                           ;maincode1.c: 95:         _delay((unsigned long)((700)*(4000000UL/4000000.0)));
  3148  00090C  0EE9               	movlw	233
  3149  00090E                     i2u84_47:
  3150  00090E  2EE8               	decfsz	wreg,f,c
  3151  000910  D7FE               	bra	i2u84_47
  3152  000912  F000               	nop	
  3153  000914                     
  3154                           ;maincode1.c: 96:         LATAbits.LA0 = 0;
  3155  000914  9089               	bcf	137,0,c	;volatile
  3156                           
  3157                           ;maincode1.c: 97:         _delay((unsigned long)((19300)*(4000000UL/4000000.0)));
  3158  000916  0E1A               	movlw	26
  3159  000918  6E0B               	movwf	??_INT0_ISR^0,c
  3160  00091A  0E0F               	movlw	15
  3161  00091C                     i2u85_47:
  3162  00091C  2EE8               	decfsz	wreg,f,c
  3163  00091E  D7FE               	bra	i2u85_47
  3164  000920  2E0B               	decfsz	??_INT0_ISR^0,f,c
  3165  000922  D7FC               	bra	i2u85_47
  3166  000924  F000               	nop	
  3167  000926                     
  3168                           ;maincode1.c: 98:     }
  3169  000926  2A10               	incf	INT0_ISR@x^0,f,c
  3170  000928  0E31               	movlw	49
  3171  00092A  6410               	cpfsgt	INT0_ISR@x^0,c
  3172  00092C  EF9A  F004         	goto	i2u57_41
  3173  000930  EF9C  F004         	goto	i2u57_40
  3174  000934                     i2u57_41:
  3175  000934  EF85  F004         	goto	i2l98
  3176  000938                     i2u57_40:
  3177  000938                     
  3178                           ;maincode1.c: 99:     BORRAR_LCD();
  3179  000938  ECD3  F008         	call	i2_BORRAR_LCD	;wreg free
  3180  00093C  C00F  FFF5         	movff	??_INT0_ISR+4,tablat
  3181  000940  C00E  FFF8         	movff	??_INT0_ISR+3,tblptru
  3182  000944  C00D  FFF7         	movff	??_INT0_ISR+2,tblptrh
  3183  000948  C00C  FFF6         	movff	??_INT0_ISR+1,tblptrl
  3184  00094C  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3185  00094E  0011               	retfie		f
  3186  000950                     __end_of_INT0_ISR:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function i2_POS_CURSOR *****************
  3190 ;; Defined at:
  3191 ;;		line 5 in file "LCD.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  fila            1    wreg     unsigned char 
  3194 ;;  columna         1    3[COMRAM] unsigned char 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  fila            1    4[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3206 ;;      Params:         1       0       0       0       0       0       0       0       0
  3207 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 2
  3213 ;; This function calls:
  3214 ;;		i2_ENVIA_LCD_CMD
  3215 ;; This function is called by:
  3216 ;;		_INT0_ISR
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text31
  3221  000E58                     __ptext31:
  3222                           	callstack 0
  3223  000E58                     i2_POS_CURSOR:
  3224                           	callstack 18
  3225                           
  3226                           ;incstack = 0
  3227                           ;i2POS_CURSOR@fila stored from wreg
  3228  000E58  6E05               	movwf	i2POS_CURSOR@fila^0,c
  3229  000E5A                     
  3230                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  3231  000E5A  0405               	decf	i2POS_CURSOR@fila^0,w,c
  3232  000E5C  A4D8               	btfss	status,2,c
  3233  000E5E  EF33  F007         	goto	i2u53_41
  3234  000E62  EF35  F007         	goto	i2u53_40
  3235  000E66                     i2u53_41:
  3236  000E66  EF3B  F007         	goto	i2l1790
  3237  000E6A                     i2u53_40:
  3238  000E6A                     
  3239                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  3240  000E6A  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3241  000E6C  0F80               	addlw	128
  3242  000E6E  ECE8  F007         	call	i2_ENVIA_LCD_CMD
  3243                           
  3244                           ;LCD.c: 10:  }
  3245  000E72  EF48  F007         	goto	i2l133
  3246  000E76                     i2l1790:
  3247  000E76  0E02               	movlw	2
  3248  000E78  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  3249  000E7A  A4D8               	btfss	status,2,c
  3250  000E7C  EF42  F007         	goto	i2u54_41
  3251  000E80  EF44  F007         	goto	i2u54_40
  3252  000E84                     i2u54_41:
  3253  000E84  EF48  F007         	goto	i2l133
  3254  000E88                     i2u54_40:
  3255  000E88                     
  3256                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  3257  000E88  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3258  000E8A  0FC0               	addlw	192
  3259  000E8C  ECE8  F007         	call	i2_ENVIA_LCD_CMD
  3260  000E90                     i2l133:
  3261  000E90  0012               	return		;funcret
  3262  000E92                     __end_ofi2_POS_CURSOR:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function i2_EUSART_SendString *****************
  3266 ;; Defined at:
  3267 ;;		line 48 in file "maincode1.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  cadenasa        2    4[COMRAM] PTR unsigned char 
  3270 ;;		 -> STR_10(33), STR_7(34), STR_4(25), STR_3(11), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  x               1    9[COMRAM] unsigned char 
  3273 ;;  tam             1    8[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3283 ;;      Params:         2       0       0       0       0       0       0       0       0
  3284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3285 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3286 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3287 ;;Total ram usage:        6 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 1
  3290 ;; This function calls:
  3291 ;;		i2_EUSART_SendByte
  3292 ;;		i2_strlen
  3293 ;; This function is called by:
  3294 ;;		_INT0_ISR
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text32
  3299  000CDC                     __ptext32:
  3300                           	callstack 0
  3301  000CDC                     i2_EUSART_SendString:
  3302                           	callstack 19
  3303  000CDC                     
  3304                           ;maincode1.c: 49:     unsigned char tam;;maincode1.c: 50:     tam = strlen(cadenasa);
  3305  000CDC  C005  F001         	movff	i2EUSART_SendString@cadenasa,i2strlen@s
  3306  000CE0  C006  F002         	movff	i2EUSART_SendString@cadenasa+1,i2strlen@s+1
  3307  000CE4  EC49  F007         	call	i2_strlen	;wreg free
  3308  000CE8  5001               	movf	?i2_strlen^0,w,c
  3309  000CEA  6E09               	movwf	i2EUSART_SendString@tam^0,c
  3310  000CEC                     
  3311                           ;maincode1.c: 51:     unsigned char x;;maincode1.c: 52:     for(x=0;x<tam;x++){
  3312  000CEC  0E00               	movlw	0
  3313  000CEE  6E0A               	movwf	i2EUSART_SendString@x^0,c
  3314  000CF0  EF89  F006         	goto	i2l1776
  3315  000CF4                     i2l1772:
  3316                           
  3317                           ;maincode1.c: 53:         EUSART_SendByte(cadenasa[x]);
  3318  000CF4  500A               	movf	i2EUSART_SendString@x^0,w,c
  3319  000CF6  2405               	addwf	i2EUSART_SendString@cadenasa^0,w,c
  3320  000CF8  6E07               	movwf	??i2_EUSART_SendString^0,c
  3321  000CFA  0E00               	movlw	0
  3322  000CFC  2006               	addwfc	(i2EUSART_SendString@cadenasa+1)^0,w,c
  3323  000CFE  6E08               	movwf	(??i2_EUSART_SendString+1)^0,c
  3324  000D00  C007  FFF6         	movff	??i2_EUSART_SendString,tblptrl
  3325  000D04  C008  FFF7         	movff	??i2_EUSART_SendString+1,tblptrh
  3326  000D08                     	if	0	;tblptru may be non-zero
  3327  000D08                     	endif
  3328  000D08                     	if	0	;tblptru may be non-zero
  3329  000D08                     	endif
  3330  000D08  0008               	tblrd		*
  3331  000D0A  50F5               	movf	tablat,w,c
  3332  000D0C  ECAB  F008         	call	i2_EUSART_SendByte
  3333  000D10                     
  3334                           ;maincode1.c: 54:     }
  3335  000D10  2A0A               	incf	i2EUSART_SendString@x^0,f,c
  3336  000D12                     i2l1776:
  3337  000D12  5009               	movf	i2EUSART_SendString@tam^0,w,c
  3338  000D14  5C0A               	subwf	i2EUSART_SendString@x^0,w,c
  3339  000D16  A0D8               	btfss	status,0,c
  3340  000D18  EF90  F006         	goto	i2u50_41
  3341  000D1C  EF92  F006         	goto	i2u50_40
  3342  000D20                     i2u50_41:
  3343  000D20  EF7A  F006         	goto	i2l1772
  3344  000D24                     i2u50_40:
  3345  000D24  0012               	return		;funcret
  3346  000D26                     __end_ofi2_EUSART_SendString:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function i2_EUSART_SendByte *****************
  3350 ;; Defined at:
  3351 ;;		line 43 in file "maincode1.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  dato            1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  dato            1    0[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0
  3366 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3368 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		i2_EUSART_SendString
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text33
  3379  001156                     __ptext33:
  3380                           	callstack 0
  3381  001156                     i2_EUSART_SendByte:
  3382                           	callstack 19
  3383                           
  3384                           ;incstack = 0
  3385                           ;i2EUSART_SendByte@dato stored from wreg
  3386  001156  6E01               	movwf	i2EUSART_SendByte@dato^0,c
  3387  001158                     
  3388                           ;maincode1.c: 44:     TXREG1 = dato;
  3389  001158  C001  FFAD         	movff	i2EUSART_SendByte@dato,4013	;volatile
  3390  00115C                     i2l64:
  3391  00115C  A2AC               	btfss	172,1,c	;volatile
  3392  00115E  EFB3  F008         	goto	i2u46_41
  3393  001162  EFB5  F008         	goto	i2u46_40
  3394  001166                     i2u46_41:
  3395  001166  EFAE  F008         	goto	i2l64
  3396  00116A                     i2u46_40:
  3397  00116A  0012               	return		;funcret
  3398  00116C                     __end_ofi2_EUSART_SendByte:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function i2_EUSART_NewLine *****************
  3402 ;; Defined at:
  3403 ;;		line 57 in file "maincode1.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_INT0_ISR
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text34
  3431  0010B0                     __ptext34:
  3432                           	callstack 0
  3433  0010B0                     i2_EUSART_NewLine:
  3434                           	callstack 20
  3435  0010B0                     
  3436                           ;maincode1.c: 58:     TXREG1 = 0x0D;
  3437  0010B0  0E0D               	movlw	13
  3438  0010B2  6EAD               	movwf	173,c	;volatile
  3439  0010B4                     i2l76:
  3440  0010B4  A2AC               	btfss	172,1,c	;volatile
  3441  0010B6  EF5F  F008         	goto	i2u22_41
  3442  0010BA  EF61  F008         	goto	i2u22_40
  3443  0010BE                     i2u22_41:
  3444  0010BE  EF5A  F008         	goto	i2l76
  3445  0010C2                     i2u22_40:
  3446  0010C2                     
  3447                           ;maincode1.c: 60:     TXREG1 = 0x0A;
  3448  0010C2  0E0A               	movlw	10
  3449  0010C4  6EAD               	movwf	173,c	;volatile
  3450  0010C6                     i2l79:
  3451  0010C6  A2AC               	btfss	172,1,c	;volatile
  3452  0010C8  EF68  F008         	goto	i2u23_41
  3453  0010CC  EF6A  F008         	goto	i2u23_40
  3454  0010D0                     i2u23_41:
  3455  0010D0  EF63  F008         	goto	i2l79
  3456  0010D4                     i2u23_40:
  3457  0010D4  0012               	return		;funcret
  3458  0010D6                     __end_ofi2_EUSART_NewLine:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  3462 ;; Defined at:
  3463 ;;		line 69 in file "LCD.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  3466 ;;		 -> STR_9(16), STR_8(17), STR_6(16), STR_5(17), 
  3467 ;;		 -> STR_2(10), STR_1(13), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  i               1    9[COMRAM] unsigned char 
  3470 ;;  tam             1    8[COMRAM] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3480 ;;      Params:         2       0       0       0       0       0       0       0       0
  3481 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3482 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3483 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3484 ;;Total ram usage:        6 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 2
  3487 ;; This function calls:
  3488 ;;		i2_ENVIA_CHAR
  3489 ;;		i2_strlen
  3490 ;; This function is called by:
  3491 ;;		_INT0_ISR
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text35
  3496  000D26                     __ptext35:
  3497                           	callstack 0
  3498  000D26                     i2_ESCRIBE_MENSAJE2:
  3499                           	callstack 18
  3500  000D26                     
  3501                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  3502  000D26  C005  F001         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  3503  000D2A  C006  F002         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  3504  000D2E  EC49  F007         	call	i2_strlen	;wreg free
  3505  000D32  5001               	movf	?i2_strlen^0,w,c
  3506  000D34  6E09               	movwf	i2ESCRIBE_MENSAJE2@tam^0,c
  3507  000D36                     
  3508                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  3509  000D36  0E00               	movlw	0
  3510  000D38  6E0A               	movwf	i2ESCRIBE_MENSAJE2@i^0,c
  3511  000D3A  EFAE  F006         	goto	i2l1816
  3512  000D3E                     i2l1812:
  3513                           
  3514                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  3515  000D3E  500A               	movf	i2ESCRIBE_MENSAJE2@i^0,w,c
  3516  000D40  2405               	addwf	i2ESCRIBE_MENSAJE2@cadena^0,w,c
  3517  000D42  6E07               	movwf	??i2_ESCRIBE_MENSAJE2^0,c
  3518  000D44  0E00               	movlw	0
  3519  000D46  2006               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^0,w,c
  3520  000D48  6E08               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^0,c
  3521  000D4A  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  3522  000D4E  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  3523  000D52                     	if	0	;tblptru may be non-zero
  3524  000D52                     	endif
  3525  000D52                     	if	0	;tblptru may be non-zero
  3526  000D52                     	endif
  3527  000D52  0008               	tblrd		*
  3528  000D54  50F5               	movf	tablat,w,c
  3529  000D56  ECCE  F007         	call	i2_ENVIA_CHAR
  3530  000D5A                     
  3531                           ;LCD.c: 77:  }
  3532  000D5A  2A0A               	incf	i2ESCRIBE_MENSAJE2@i^0,f,c
  3533  000D5C                     i2l1816:
  3534  000D5C  5009               	movf	i2ESCRIBE_MENSAJE2@tam^0,w,c
  3535  000D5E  5C0A               	subwf	i2ESCRIBE_MENSAJE2@i^0,w,c
  3536  000D60  A0D8               	btfss	status,0,c
  3537  000D62  EFB5  F006         	goto	i2u56_41
  3538  000D66  EFB7  F006         	goto	i2u56_40
  3539  000D6A                     i2u56_41:
  3540  000D6A  EF9F  F006         	goto	i2l1812
  3541  000D6E                     i2u56_40:
  3542  000D6E  0012               	return		;funcret
  3543  000D70                     __end_ofi2_ESCRIBE_MENSAJE2:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function i2_strlen *****************
  3547 ;; Defined at:
  3548 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3551 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  3552 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  3553 ;;		 -> STR_2(10), STR_1(13), 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3556 ;;		 -> STR_10(33), STR_9(16), STR_8(17), STR_7(34), 
  3557 ;;		 -> STR_6(16), STR_5(17), STR_4(25), STR_3(11), 
  3558 ;;		 -> STR_2(10), STR_1(13), 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  2    0[COMRAM] unsigned int 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3568 ;;      Params:         2       0       0       0       0       0       0       0       0
  3569 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3571 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3572 ;;Total ram usage:        4 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		i2_EUSART_SendString
  3578 ;;		i2_ESCRIBE_MENSAJE2
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text36
  3583  000E92                     __ptext36:
  3584                           	callstack 0
  3585  000E92                     i2_strlen:
  3586                           	callstack 19
  3587  000E92  C001  F003         	movff	i2strlen@s,i2strlen@a
  3588  000E96  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3589  000E9A  EF51  F007         	goto	i2l1738
  3590  000E9E                     i2l1736:
  3591  000E9E  4A01               	infsnz	i2strlen@s^0,f,c
  3592  000EA0  2A02               	incf	(i2strlen@s+1)^0,f,c
  3593  000EA2                     i2l1738:
  3594  000EA2  C001  FFF6         	movff	i2strlen@s,tblptrl
  3595  000EA6  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  3596  000EAA                     	if	0	;tblptru may be non-zero
  3597  000EAA                     	endif
  3598  000EAA                     	if	0	;tblptru may be non-zero
  3599  000EAA                     	endif
  3600  000EAA  0008               	tblrd		*
  3601  000EAC  50F5               	movf	tablat,w,c
  3602  000EAE  0900               	iorlw	0
  3603  000EB0  A4D8               	btfss	status,2,c
  3604  000EB2  EF5D  F007         	goto	i2u48_41
  3605  000EB6  EF5F  F007         	goto	i2u48_40
  3606  000EBA                     i2u48_41:
  3607  000EBA  EF4F  F007         	goto	i2l1736
  3608  000EBE                     i2u48_40:
  3609  000EBE  5003               	movf	i2strlen@a^0,w,c
  3610  000EC0  5C01               	subwf	i2strlen@s^0,w,c
  3611  000EC2  6E01               	movwf	?i2_strlen^0,c
  3612  000EC4  5004               	movf	(i2strlen@a+1)^0,w,c
  3613  000EC6  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3614  000EC8  6E02               	movwf	(?i2_strlen+1)^0,c
  3615  000ECA  0012               	return		;funcret
  3616  000ECC                     __end_ofi2_strlen:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function i2_ENVIA_CHAR *****************
  3620 ;; Defined at:
  3621 ;;		line 80 in file "LCD.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  dato            1    wreg     unsigned char 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  dato            1    1[COMRAM] unsigned char 
  3626 ;;  aux             1    2[COMRAM] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0
  3637 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3639 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		i2_ENVIA_NIBBLE
  3645 ;;		i2_LEER_LCD
  3646 ;; This function is called by:
  3647 ;;		_INT0_ISR
  3648 ;;		i2_ESCRIBE_MENSAJE2
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text37
  3653  000F9C                     __ptext37:
  3654                           	callstack 0
  3655  000F9C                     i2_ENVIA_CHAR:
  3656                           	callstack 18
  3657                           
  3658                           ;incstack = 0
  3659                           ;i2ENVIA_CHAR@dato stored from wreg
  3660  000F9C  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  3661  000F9E                     
  3662                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  3663  000F9E  808D               	bsf	141,0,c	;volatile
  3664  000FA0                     
  3665                           ;LCD.c: 84:  LEER_LCD();
  3666  000FA0  EC1A  F005         	call	i2_LEER_LCD	;wreg free
  3667  000FA4                     
  3668                           ;LCD.c: 85:  TRISD = 0x00;
  3669  000FA4  0E00               	movlw	0
  3670  000FA6  6E95               	movwf	149,c	;volatile
  3671  000FA8                     
  3672                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3673  000FA8  0E21               	movlw	33
  3674  000FAA                     i2u86_47:
  3675  000FAA  2EE8               	decfsz	wreg,f,c
  3676  000FAC  D7FE               	bra	i2u86_47
  3677  000FAE  F000               	nop	
  3678  000FB0                     
  3679                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  3680  000FB0  928D               	bcf	141,1,c	;volatile
  3681  000FB2                     
  3682                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  3683  000FB2  948D               	bcf	141,2,c	;volatile
  3684  000FB4                     
  3685                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  3686  000FB4  808D               	bsf	141,0,c	;volatile
  3687  000FB6                     
  3688                           ;LCD.c: 90:  aux = dato & 0xF0;
  3689  000FB6  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  3690  000FB8  0BF0               	andlw	240
  3691  000FBA  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3692  000FBC                     
  3693                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  3694  000FBC  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3695  000FBE  EC87  F008         	call	i2_ENVIA_NIBBLE
  3696  000FC2                     
  3697                           ;LCD.c: 92:  aux = dato << 4;
  3698  000FC2  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  3699  000FC4  0BF0               	andlw	240
  3700  000FC6  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3701  000FC8                     
  3702                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  3703  000FC8  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3704  000FCA  EC87  F008         	call	i2_ENVIA_NIBBLE
  3705  000FCE  0012               	return		;funcret
  3706  000FD0                     __end_ofi2_ENVIA_CHAR:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function i2_BORRAR_LCD *****************
  3710 ;; Defined at:
  3711 ;;		line 96 in file "LCD.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 2
  3732 ;; This function calls:
  3733 ;;		i2_ENVIA_LCD_CMD
  3734 ;; This function is called by:
  3735 ;;		_INT0_ISR
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text38
  3740  0011A6                     __ptext38:
  3741                           	callstack 0
  3742  0011A6                     i2_BORRAR_LCD:
  3743                           	callstack 18
  3744  0011A6                     
  3745                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  3746  0011A6  0E01               	movlw	1
  3747  0011A8  ECE8  F007         	call	i2_ENVIA_LCD_CMD
  3748  0011AC  0012               	return		;funcret
  3749  0011AE                     __end_ofi2_BORRAR_LCD:
  3750                           	callstack 0
  3751                           
  3752 ;; *************** function i2_ENVIA_LCD_CMD *****************
  3753 ;; Defined at:
  3754 ;;		line 128 in file "LCD.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  dato            1    wreg     unsigned char 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  dato            1    1[COMRAM] unsigned char 
  3759 ;;  aux             1    2[COMRAM] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0
  3770 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3772 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3773 ;;Total ram usage:        2 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 1
  3776 ;; This function calls:
  3777 ;;		i2_ENVIA_NIBBLE
  3778 ;;		i2_LEER_LCD
  3779 ;; This function is called by:
  3780 ;;		i2_POS_CURSOR
  3781 ;;		i2_BORRAR_LCD
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text39
  3786  000FD0                     __ptext39:
  3787                           	callstack 0
  3788  000FD0                     i2_ENVIA_LCD_CMD:
  3789                           	callstack 18
  3790                           
  3791                           ;incstack = 0
  3792                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  3793  000FD0  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  3794  000FD2                     
  3795                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  3796  000FD2  908D               	bcf	141,0,c	;volatile
  3797  000FD4                     
  3798                           ;LCD.c: 132:  LEER_LCD();
  3799  000FD4  EC1A  F005         	call	i2_LEER_LCD	;wreg free
  3800  000FD8                     
  3801                           ;LCD.c: 133:  TRISD = 0b00000000;
  3802  000FD8  0E00               	movlw	0
  3803  000FDA  6E95               	movwf	149,c	;volatile
  3804  000FDC                     
  3805                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3806  000FDC  0E21               	movlw	33
  3807  000FDE                     i2u87_47:
  3808  000FDE  2EE8               	decfsz	wreg,f,c
  3809  000FE0  D7FE               	bra	i2u87_47
  3810  000FE2  F000               	nop	
  3811  000FE4                     
  3812                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  3813  000FE4  928D               	bcf	141,1,c	;volatile
  3814  000FE6                     
  3815                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  3816  000FE6  948D               	bcf	141,2,c	;volatile
  3817  000FE8                     
  3818                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  3819  000FE8  908D               	bcf	141,0,c	;volatile
  3820  000FEA                     
  3821                           ;LCD.c: 138:  aux = dato & 0xF0;
  3822  000FEA  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  3823  000FEC  0BF0               	andlw	240
  3824  000FEE  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3825  000FF0                     
  3826                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  3827  000FF0  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3828  000FF2  EC87  F008         	call	i2_ENVIA_NIBBLE
  3829  000FF6                     
  3830                           ;LCD.c: 140:  aux = dato<<4;
  3831  000FF6  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  3832  000FF8  0BF0               	andlw	240
  3833  000FFA  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3834  000FFC                     
  3835                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  3836  000FFC  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3837  000FFE  EC87  F008         	call	i2_ENVIA_NIBBLE
  3838  001002  0012               	return		;funcret
  3839  001004                     __end_ofi2_ENVIA_LCD_CMD:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function i2_LEER_LCD *****************
  3843 ;; Defined at:
  3844 ;;		line 144 in file "LCD.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  aux             1    0[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3861 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:        1 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		i2_ENVIA_CHAR
  3868 ;;		i2_ENVIA_LCD_CMD
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text40
  3873  000A34                     __ptext40:
  3874                           	callstack 0
  3875  000A34                     i2_LEER_LCD:
  3876                           	callstack 18
  3877  000A34                     
  3878                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  3879  000A34  0EF8               	movlw	248
  3880  000A36  6E95               	movwf	149,c	;volatile
  3881  000A38                     
  3882                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  3883  000A38  908D               	bcf	141,0,c	;volatile
  3884  000A3A                     
  3885                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  3886  000A3A  828D               	bsf	141,1,c	;volatile
  3887  000A3C                     
  3888                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  3889  000A3C  848D               	bsf	141,2,c	;volatile
  3890  000A3E                     
  3891                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3892  000A3E  0E21               	movlw	33
  3893  000A40                     i2u88_47:
  3894  000A40  2EE8               	decfsz	wreg,f,c
  3895  000A42  D7FE               	bra	i2u88_47
  3896  000A44  F000               	nop	
  3897  000A46                     
  3898                           ;LCD.c: 152:  aux = PORTD;
  3899  000A46  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3900  000A4A                     
  3901                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  3902  000A4A  948D               	bcf	141,2,c	;volatile
  3903  000A4C                     
  3904                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3905  000A4C  0E21               	movlw	33
  3906  000A4E                     i2u89_47:
  3907  000A4E  2EE8               	decfsz	wreg,f,c
  3908  000A50  D7FE               	bra	i2u89_47
  3909  000A52  F000               	nop	
  3910  000A54                     
  3911                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  3912  000A54  848D               	bsf	141,2,c	;volatile
  3913  000A56                     
  3914                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3915  000A56  0E21               	movlw	33
  3916  000A58                     i2u90_47:
  3917  000A58  2EE8               	decfsz	wreg,f,c
  3918  000A5A  D7FE               	bra	i2u90_47
  3919  000A5C  F000               	nop	
  3920  000A5E                     
  3921                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  3922  000A5E  948D               	bcf	141,2,c	;volatile
  3923  000A60                     i2l1586:
  3924                           
  3925                           ;LCD.c: 158:  aux = aux & 0x80;
  3926  000A60  5001               	movf	i2LEER_LCD@aux^0,w,c
  3927  000A62  0B80               	andlw	128
  3928  000A64  6E01               	movwf	i2LEER_LCD@aux^0,c
  3929                           
  3930                           ;LCD.c: 159:  while(aux == 0x80)
  3931  000A66  EF49  F005         	goto	i2l1600
  3932  000A6A                     i2l194:
  3933                           
  3934                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  3935  000A6A  848D               	bsf	141,2,c	;volatile
  3936  000A6C                     
  3937                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3938  000A6C  0E21               	movlw	33
  3939  000A6E                     i2u91_47:
  3940  000A6E  2EE8               	decfsz	wreg,f,c
  3941  000A70  D7FE               	bra	i2u91_47
  3942  000A72  F000               	nop	
  3943  000A74                     
  3944                           ;LCD.c: 163:             aux = PORTD;
  3945  000A74  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3946  000A78                     
  3947                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  3948  000A78  948D               	bcf	141,2,c	;volatile
  3949                           
  3950                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3951  000A7A  0E21               	movlw	33
  3952  000A7C                     i2u92_47:
  3953  000A7C  2EE8               	decfsz	wreg,f,c
  3954  000A7E  D7FE               	bra	i2u92_47
  3955  000A80  F000               	nop	
  3956  000A82                     
  3957                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  3958  000A82  848D               	bsf	141,2,c	;volatile
  3959                           
  3960                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  3961  000A84  0E21               	movlw	33
  3962  000A86                     i2u93_47:
  3963  000A86  2EE8               	decfsz	wreg,f,c
  3964  000A88  D7FE               	bra	i2u93_47
  3965  000A8A  F000               	nop	
  3966  000A8C                     
  3967                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  3968  000A8C  948D               	bcf	141,2,c	;volatile
  3969  000A8E  EF30  F005         	goto	i2l1586
  3970  000A92                     i2l1600:
  3971                           
  3972                           ;LCD.c: 159:  while(aux == 0x80)
  3973  000A92  0E80               	movlw	128
  3974  000A94  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  3975  000A96  B4D8               	btfsc	status,2,c
  3976  000A98  EF50  F005         	goto	i2u40_41
  3977  000A9C  EF52  F005         	goto	i2u40_40
  3978  000AA0                     i2u40_41:
  3979  000AA0  EF35  F005         	goto	i2l194
  3980  000AA4                     i2u40_40:
  3981  000AA4  0012               	return		;funcret
  3982  000AA6                     __end_ofi2_LEER_LCD:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function i2_ENVIA_NIBBLE *****************
  3986 ;; Defined at:
  3987 ;;		line 118 in file "LCD.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  dato            1    wreg     unsigned char 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  dato            1    0[COMRAM] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0
  4002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        1 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		i2_ENVIA_CHAR
  4011 ;;		i2_ENVIA_LCD_CMD
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text41
  4016  00110E                     __ptext41:
  4017                           	callstack 0
  4018  00110E                     i2_ENVIA_NIBBLE:
  4019                           	callstack 18
  4020                           
  4021                           ;incstack = 0
  4022                           ;i2ENVIA_NIBBLE@dato stored from wreg
  4023  00110E  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  4024  001110                     
  4025                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  4026  001110  0E0F               	movlw	15
  4027  001112  168C               	andwf	140,f,c	;volatile
  4028                           
  4029                           ;LCD.c: 121:  dato &= 0xF0;
  4030  001114  0EF0               	movlw	240
  4031  001116  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  4032                           
  4033                           ;LCD.c: 122:  LATD|= dato;
  4034  001118  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  4035  00111A  128C               	iorwf	140,f,c	;volatile
  4036  00111C                     
  4037                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  4038  00111C  848D               	bsf	141,2,c	;volatile
  4039  00111E                     
  4040                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  4041  00111E  0E21               	movlw	33
  4042  001120                     i2u94_47:
  4043  001120  2EE8               	decfsz	wreg,f,c
  4044  001122  D7FE               	bra	i2u94_47
  4045  001124  F000               	nop	
  4046  001126                     
  4047                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  4048  001126  948D               	bcf	141,2,c	;volatile
  4049  001128  0012               	return		;funcret
  4050  00112A                     __end_ofi2_ENVIA_NIBBLE:
  4051                           	callstack 0
  4052                           
  4053                           	psect	rparam
  4054  0000                     
  4055                           	psect	temp
  4056  000030                     btemp:
  4057                           	callstack 0
  4058  000030                     	ds	1
  4059  0000                     int$flags	set	btemp
  4060  0000                     wtemp8	set	btemp+1
  4061  0000                     ttemp5	set	btemp+1
  4062  0000                     ttemp6	set	btemp+4
  4063  0000                     ttemp7	set	btemp+8
  4064                           
  4065                           	psect	idloc
  4066                           
  4067                           ;Config register IDLOC0 @ 0x200000
  4068                           ;	unspecified, using default values
  4069  200000                     	org	2097152
  4070  200000  FF                 	db	255
  4071                           
  4072                           ;Config register IDLOC1 @ 0x200001
  4073                           ;	unspecified, using default values
  4074  200001                     	org	2097153
  4075  200001  FF                 	db	255
  4076                           
  4077                           ;Config register IDLOC2 @ 0x200002
  4078                           ;	unspecified, using default values
  4079  200002                     	org	2097154
  4080  200002  FF                 	db	255
  4081                           
  4082                           ;Config register IDLOC3 @ 0x200003
  4083                           ;	unspecified, using default values
  4084  200003                     	org	2097155
  4085  200003  FF                 	db	255
  4086                           
  4087                           ;Config register IDLOC4 @ 0x200004
  4088                           ;	unspecified, using default values
  4089  200004                     	org	2097156
  4090  200004  FF                 	db	255
  4091                           
  4092                           ;Config register IDLOC5 @ 0x200005
  4093                           ;	unspecified, using default values
  4094  200005                     	org	2097157
  4095  200005  FF                 	db	255
  4096                           
  4097                           ;Config register IDLOC6 @ 0x200006
  4098                           ;	unspecified, using default values
  4099  200006                     	org	2097158
  4100  200006  FF                 	db	255
  4101                           
  4102                           ;Config register IDLOC7 @ 0x200007
  4103                           ;	unspecified, using default values
  4104  200007                     	org	2097159
  4105  200007  FF                 	db	255
  4106                           
  4107                           	psect	config
  4108                           
  4109                           ;Config register CONFIG1L @ 0x300000
  4110                           ;	PLL Selection
  4111                           ;	PLLSEL = PLL4X, 4x clock multiplier
  4112                           ;	PLL Enable Configuration bit
  4113                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4114                           ;	CPU System Clock Postscaler
  4115                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4116                           ;	Low Speed USB mode with 48 MHz system clock
  4117                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  4118  300000                     	org	3145728
  4119  300000  00                 	db	0
  4120                           
  4121                           ;Config register CONFIG1H @ 0x300001
  4122                           ;	Oscillator Selection
  4123                           ;	FOSC = INTOSCIO, Internal oscillator
  4124                           ;	Primary Oscillator Shutdown
  4125                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  4126                           ;	Fail-Safe Clock Monitor
  4127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4128                           ;	Internal/External Oscillator Switchover
  4129                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4130  300001                     	org	3145729
  4131  300001  08                 	db	8
  4132                           
  4133                           ;Config register CONFIG2L @ 0x300002
  4134                           ;	Power-up Timer Enable
  4135                           ;	nPWRTEN = ON, Power up timer enabled
  4136                           ;	Brown-out Reset Enable
  4137                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  4138                           ;	Brown-out Reset Voltage
  4139                           ;	BORV = 190, BOR set to 1.9V nominal
  4140                           ;	Low-Power Brown-out Reset
  4141                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4142  300002                     	org	3145730
  4143  300002  58                 	db	88
  4144                           
  4145                           ;Config register CONFIG2H @ 0x300003
  4146                           ;	Watchdog Timer Enable bits
  4147                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4148                           ;	Watchdog Timer Postscaler
  4149                           ;	WDTPS = 32768, 1:32768
  4150  300003                     	org	3145731
  4151  300003  3C                 	db	60
  4152                           
  4153                           ; Padding undefined space
  4154  300004                     	org	3145732
  4155  300004  FF                 	db	255
  4156                           
  4157                           ;Config register CONFIG3H @ 0x300005
  4158                           ;	CCP2 MUX bit
  4159                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4160                           ;	PORTB A/D Enable bit
  4161                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4162                           ;	Timer3 Clock Input MUX bit
  4163                           ;	T3CMX = RC0, T3CKI function is on RC0
  4164                           ;	SDO Output MUX bit
  4165                           ;	SDOMX = RB3, SDO function is on RB3
  4166                           ;	Master Clear Reset Pin Enable
  4167                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4168  300005                     	org	3145733
  4169  300005  D1                 	db	209
  4170                           
  4171                           ;Config register CONFIG4L @ 0x300006
  4172                           ;	Stack Full/Underflow Reset
  4173                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4174                           ;	Single-Supply ICSP Enable bit
  4175                           ;	LVP = OFF, Single-Supply ICSP disabled
  4176                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4177                           ;	ICPRT = OFF, ICPORT disabled
  4178                           ;	Extended Instruction Set Enable bit
  4179                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4180                           ;	Background Debugger Enable bit
  4181                           ;	DEBUG = 0x1, unprogrammed default
  4182  300006                     	org	3145734
  4183  300006  81                 	db	129
  4184                           
  4185                           ; Padding undefined space
  4186  300007                     	org	3145735
  4187  300007  FF                 	db	255
  4188                           
  4189                           ;Config register CONFIG5L @ 0x300008
  4190                           ;	Block 0 Code Protect
  4191                           ;	CP0 = OFF, Block 0 is not code-protected
  4192                           ;	Block 1 Code Protect
  4193                           ;	CP1 = OFF, Block 1 is not code-protected
  4194                           ;	Block 2 Code Protect
  4195                           ;	CP2 = OFF, Block 2 is not code-protected
  4196                           ;	Block 3 Code Protect
  4197                           ;	CP3 = OFF, Block 3 is not code-protected
  4198  300008                     	org	3145736
  4199  300008  0F                 	db	15
  4200                           
  4201                           ;Config register CONFIG5H @ 0x300009
  4202                           ;	Boot Block Code Protect
  4203                           ;	CPB = OFF, Boot block is not code-protected
  4204                           ;	Data EEPROM Code Protect
  4205                           ;	CPD = OFF, Data EEPROM is not code-protected
  4206  300009                     	org	3145737
  4207  300009  C0                 	db	192
  4208                           
  4209                           ;Config register CONFIG6L @ 0x30000A
  4210                           ;	Block 0 Write Protect
  4211                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4212                           ;	Block 1 Write Protect
  4213                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4214                           ;	Block 2 Write Protect
  4215                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4216                           ;	Block 3 Write Protect
  4217                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4218  30000A                     	org	3145738
  4219  30000A  0F                 	db	15
  4220                           
  4221                           ;Config register CONFIG6H @ 0x30000B
  4222                           ;	Configuration Registers Write Protect
  4223                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4224                           ;	Boot Block Write Protect
  4225                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4226                           ;	Data EEPROM Write Protect
  4227                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4228  30000B                     	org	3145739
  4229  30000B  E0                 	db	224
  4230                           
  4231                           ;Config register CONFIG7L @ 0x30000C
  4232                           ;	Block 0 Table Read Protect
  4233                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4234                           ;	Block 1 Table Read Protect
  4235                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4236                           ;	Block 2 Table Read Protect
  4237                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4238                           ;	Block 3 Table Read Protect
  4239                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4240  30000C                     	org	3145740
  4241  30000C  0F                 	db	15
  4242                           
  4243                           ;Config register CONFIG7H @ 0x30000D
  4244                           ;	Boot Block Table Read Protect
  4245                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4246  30000D                     	org	3145741
  4247  30000D  40                 	db	64
  4248                           tosu	equ	0xFFF
  4249                           tosh	equ	0xFFE
  4250                           tosl	equ	0xFFD
  4251                           stkptr	equ	0xFFC
  4252                           pclatu	equ	0xFFB
  4253                           pclath	equ	0xFFA
  4254                           pcl	equ	0xFF9
  4255                           tblptru	equ	0xFF8
  4256                           tblptrh	equ	0xFF7
  4257                           tblptrl	equ	0xFF6
  4258                           tablat	equ	0xFF5
  4259                           prodh	equ	0xFF4
  4260                           prodl	equ	0xFF3
  4261                           indf0	equ	0xFEF
  4262                           postinc0	equ	0xFEE
  4263                           postdec0	equ	0xFED
  4264                           preinc0	equ	0xFEC
  4265                           plusw0	equ	0xFEB
  4266                           fsr0h	equ	0xFEA
  4267                           fsr0l	equ	0xFE9
  4268                           wreg	equ	0xFE8
  4269                           indf1	equ	0xFE7
  4270                           postinc1	equ	0xFE6
  4271                           postdec1	equ	0xFE5
  4272                           preinc1	equ	0xFE4
  4273                           plusw1	equ	0xFE3
  4274                           fsr1h	equ	0xFE2
  4275                           fsr1l	equ	0xFE1
  4276                           bsr	equ	0xFE0
  4277                           indf2	equ	0xFDF
  4278                           postinc2	equ	0xFDE
  4279                           postdec2	equ	0xFDD
  4280                           preinc2	equ	0xFDC
  4281                           plusw2	equ	0xFDB
  4282                           fsr2h	equ	0xFDA
  4283                           fsr2l	equ	0xFD9
  4284                           status	equ	0xFD8

Data Sizes:
    Strings     175
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_10(CODE[33]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[34]), 
		 -> STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[25]), STR_3(CODE[11]), 
		 -> STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_10(CODE[33]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[34]), 
		 -> STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[25]), STR_3(CODE[11]), 
		 -> STR_2(CODE[10]), STR_1(CODE[13]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[16]), STR_5(CODE[17]), 
		 -> STR_2(CODE[10]), STR_1(CODE[13]), 

    EUSART_SendString@cadenasa	PTR unsigned char  size(2) Largest target is 34
		 -> STR_10(CODE[33]), STR_7(CODE[34]), STR_4(CODE[25]), STR_3(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_pantallazo
    _pantallazo->_ESCRIBE_MENSAJE2
    _pantallazo->_EUSART_SendString
    _POS_CURSOR->_ENVIA_LCD_CMD
    _EUSART_SendString->_strlen
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->i1_ESCRIBE_MENSAJE2
    _INT1_ISR->i1_EUSART_SendString
    i1_POS_CURSOR->i1_ENVIA_LCD_CMD
    i1_EUSART_SendString->i1_strlen
    i1_ESCRIBE_MENSAJE2->i1_strlen
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD
    i1_BORRAR_LCD->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_ESCRIBE_MENSAJE2
    _INT0_ISR->i2_EUSART_SendString
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_EUSART_SendString->i2_strlen
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2655
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    2130
                                             45 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                     _EUSART_NewLine
                  _EUSART_SendString
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     560
                                             38 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _EUSART_SendString                                    6     4      2     622
                                             39 COMRAM     6     4      2
                    _EUSART_SendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART_SendByte                                      1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_NewLine                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     828
                                             39 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                             36 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             39 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             38 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             38 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             36 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             9     9      0    1529
                                             26 COMRAM     9     9      0
                       i1_BORRAR_LCD
                       i1_ENVIA_CHAR
                 i1_ESCRIBE_MENSAJE2
                   i1_EUSART_NewLine
                i1_EUSART_SendString
                       i1_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i1_POS_CURSOR                                         2     1      1     323
                                             19 COMRAM     2     1      1
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i1_EUSART_SendString                                  6     4      2     303
                                             20 COMRAM     6     4      2
                  i1_EUSART_SendByte
                           i1_strlen
 ---------------------------------------------------------------------------------
 (8) i1_EUSART_SendByte                                    1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_EUSART_NewLine                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_ESCRIBE_MENSAJE2                                   6     4      2     491
                                             20 COMRAM     6     4      2
                       i1_ENVIA_CHAR
                           i1_strlen
 ---------------------------------------------------------------------------------
 (8) i1_strlen                                             4     2      2     142
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_CHAR                                         2     2      0     183
                                             17 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i1_BORRAR_LCD                                         0     0      0     183
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             17 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i1_LEER_LCD                                           1     1      0      70
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_ENVIA_NIBBLE                                       1     1      0      23
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            6     6      0    1529
                                             10 COMRAM     6     6      0
                       i2_BORRAR_LCD
                       i2_ENVIA_CHAR
                 i2_ESCRIBE_MENSAJE2
                   i2_EUSART_NewLine
                i2_EUSART_SendString
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (11) i2_POS_CURSOR                                        2     1      1     323
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_SendString                                 6     4      2     303
                                              4 COMRAM     6     4      2
                  i2_EUSART_SendByte
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_EUSART_SendByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_NewLine                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_ESCRIBE_MENSAJE2                                  6     4      2     491
                                              4 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (11) i2_BORRAR_LCD                                        0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (13) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
           _ENVIA_NIBBLE
           _LEER_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _strlen
     _EUSART_NewLine
     _EUSART_SendString
       _EUSART_SendByte
       _strlen
     _POS_CURSOR
       _ENVIA_LCD_CMD

 _INT1_ISR (ROOT)
   i1_BORRAR_LCD
     i1_ENVIA_LCD_CMD
       i1_ENVIA_NIBBLE
       i1_LEER_LCD
   i1_ENVIA_CHAR
     i1_ENVIA_NIBBLE
     i1_LEER_LCD
   i1_ESCRIBE_MENSAJE2
     i1_ENVIA_CHAR
     i1_strlen
   i1_EUSART_NewLine
   i1_EUSART_SendString
     i1_EUSART_SendByte
     i1_strlen
   i1_POS_CURSOR
     i1_ENVIA_LCD_CMD

 _INT0_ISR (ROOT)
   i2_BORRAR_LCD
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ENVIA_CHAR
     i2_ENVIA_NIBBLE
     i2_LEER_LCD
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
     i2_strlen
   i2_EUSART_NewLine
   i2_EUSART_SendString
     i2_EUSART_SendByte
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     2F      2F       1       50.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhl         1C      0       0      21        0.0%
BITBIGSFRlhh         2      0       0      22        0.0%
BITBIGSFRlhlhh      1F      0       0      23        0.0%
BITBIGSFRlhlhl       1      0       0      24        0.0%
BITBIGSFRlhll       14      0       0      25        0.0%
BITBIGSFRllhhhh      4      0       0      26        0.0%
BITBIGSFRllhhhl      2      0       0      27        0.0%
BITBIGSFRllhhl       3      0       0      28        0.0%
BITBIGSFRllhlh       1      0       0      29        0.0%
BITBIGSFRllhll      23      0       0      30        0.0%
BITBIGSFRlll         8      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BIGRAM             7FF      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 16 18:47:25 2023

                         l61 0B60                           l64 1130                           l73 0BFC  
                         l82 1088                           l90 1186                           l67 113E  
                         l91 1186                           l76 1068                           l85 0B0C  
                         l79 107A                           u10 09C0                           u11 09BC  
                         u20 113E                           u21 113A                           u40 1046  
                         u41 1042                           u50 105C                           u51 1058  
                         u90 1076                           u91 1072         i2EUSART_SendString@x 000A  
                         bsr 000FE0             i2_EUSART_NewLine 10B0                ENVIA_CHAR@aux 0026  
  __end_ofi1_EUSART_SendByte 1156                          l204 1032                          l133 0DA8  
                        l146 1194                          l163 1062                          l181 119C  
                        l190 0F32                          l175 0C46                          l184 0BB2  
                        l194 0986                          l178 0EFE                          l187 10F0  
                        l196 09C0                          l900 0968                          l910 0988  
                        l902 0970                          l912 0990                          l904 0972  
                        l930 10EE                          l914 0994                          l922 09AE  
                        l906 097A                          l924 10D8                          l916 099E  
                        l908 097C                          l940 0F14                          l932 0F02  
                        l926 10E4                          l918 09A8                          l950 0F26  
                        l942 0F16                          l934 0F04                          l928 10E6  
                        l952 0F2C                          l944 0F18                          l936 0F08  
                        l890 0956                          l946 0F1A                          l938 0F0C  
                        l970 0ED0                          l954 112C                          l892 0958  
                        l948 0F20                          l980 0EE4                          l972 0ED4  
                        l884 0DE2                          l894 095A                          l886 0950  
                        l966 1196                          l990 118E                          l982 0EE6  
                        l974 0ED8                          l896 0962                          l888 0954  
                        l992 1036                          l984 0EEC                          l976 0EE0  
                        l968 0ECE                          l898 0966                          l994 1046  
                        l986 0EF2                          l978 0EE2                          l996 104C  
                        l988 0EF8                          l998 105C                          u100 1088  
                        u101 1084                          u410 0BFC                          u411 0BF8  
                        u420 0D82                          u421 0D7E                          u430 0DA0  
                        u431 0D9C                          u440 0C46                          u441 0C42  
                        u380 0DD6                          u381 0DD2                          u607 0EDA  
                        u617 100A                          u707 0998                          u627 101C  
                        u717 09A2                          u637 0B72                          u727 10E8  
                        u647 0B82                          u657 0F0E                          u667 095C  
                        u677 096A                          u597 0AFC                          u687 0974  
                        u697 098A                  LEER_LCD@aux 0024                          wreg 000FE8  
           ??i2_ENVIA_NIBBLE 0001                 ?_CURSOR_HOME 0001              i1_ENVIA_LCD_CMD 0F68  
             ??_ENVIA_NIBBLE 0024                  ?i1_LEER_LCD 0001               ENVIA_CHAR@dato 0025  
                       l1000 0B62                         l1010 0B8E                         l1002 0B66  
                       l1020 0BAC                         l1012 0B94                         l1004 0B6C  
                       l1014 0B9A                         l1006 0B7A                         l1016 0BA0  
                       l1008 0B88                         l1018 0BA6                         l1114 1004  
                       l1130 1064                         l1116 1012                         l1300 0B52  
                       l1132 1076                         l1118 1016                         l1302 0B54  
                       l1304 0B58                         l1306 0B5C                         l1308 0B5E  
                       l1500 0DAA                         l1270 0B14                         l1502 0DB6  
                       l1280 0B38                         l1272 0B20                         l1504 0DBA  
                       l1290 0B46                         l1282 0B3E                         l1274 0B22  
                       l1266 0B0E                         l1506 0DD6                         l1610 0BEA  
                       l1602 0BB4                         l1292 0B48                         l1284 0B40  
                       l1276 0B24                         l1268 0B12                         l1620 0BFE  
                       l1604 0BC4                         l1612 0D72                         l1294 0B4A  
                       l1286 0B42                         l1278 0B26                         l1630 0C34  
                       l1622 0C0E                         l1606 0BCC                         l1614 0D82  
                       l1296 0B4C                         l1288 0B44                         l1624 0C0E  
                       l1608 0BE8                         l1616 0D8E                         l1298 0B4E  
                       l1626 0C16                         l1618 0DA0                         l1628 0C32  
                       l1750 0ADE                         l1822 117E                         l1752 0AE2  
                       l1744 0AA6                         l1824 1182                         l1754 0AF2  
                       l1746 0AB0                         l1756 0B08                         l1748 0ABC  
                       STR_1 088E                         STR_2 08A6                         STR_3 089B  
                       STR_4 0844                         STR_5 085D                         STR_6 086E  
                       STR_7 0801                         STR_8 085D                         STR_9 087E  
           i1POS_CURSOR@fila 0015                         _LATD 000F8C                         i1l64 1146  
                       i1l73 0C90                         i1l82 10AE                         i1l67 1154  
                       i1l76 108E                         i1l79 10A0                         i2l64 115C  
                       i2l73 0D24                         i2l82 10D4                         i2l67 116A  
                       i2l76 10B4                         i2l79 10C6                         i2l98 090A  
          i2_EUSART_SendByte 1156                         _WPUB 000F85                  ?i2_LEER_LCD 0001  
     i2EUSART_SendString@tam 0009                         _main 117E           ?i2_EUSART_SendByte 0001  
                       btemp 0030            ??i2_ENVIA_LCD_CMD 0002                         start 00D4  
              ?_CURSOR_ONOFF 0001                 ___param_bank 000000          ??i2_EUSART_SendByte 0001  
            ??_ENVIA_LCD_CMD 0025             __end_of_LCD_INIT 1034             __end_of_LEER_LCD 09C2  
           __end_of_INT0_ISR 0950             __end_of_INT1_ISR 00D4                        ?_main 0001  
                      STR_10 0823                        i1l105 007E                        i1l107 00B4  
                      i1l133 0E1C                        i2l100 093C                        i1l181 11A4  
                      i1l190 0F9A                        i1l175 0CDA                        i1l194 09F8  
                      i1l178 0F66                        i1l187 110C                        i1l196 0A32  
                      i2l133 0E90                        i2l181 11AC                        i2l190 1002  
                      i2l175 0D6E                        i2l194 0A6A                        i2l178 0FCE  
                      i2l187 1128                        i2l196 0AA4                        i1l884 0E56  
                      i2l884 0ECA    EUSART_SendString@cadenasa 0028                        _PORTD 000F83  
                      _TRISB 000F93                        _TRISD 000F95                        _TRISE 000F96  
  __end_ofi2_EUSART_SendByte 116C                  ?_POS_CURSOR 0027                        tablat 000FF5  
                      ttemp5 0031                        ttemp6 0034                        ttemp7 0038  
                      status 000FD8                        wtemp8 0031               ??_CURSOR_ONOFF 0027  
          ??_EUSART_SendByte 0024             __end_ofi1_strlen 0E58             __end_ofi2_strlen 0ECC  
            __initialization 116C                 __end_of_main 118E                ?i1_BORRAR_LCD 0001  
   i2ESCRIBE_MENSAJE2@cadena 0005      __end_ofi1_ENVIA_LCD_CMD 0F9C                       ??_main 0030  
        EUSART_SendByte@dato 0024                __activetblptr 000001                ?i1_ENVIA_CHAR 0001  
            i1ENVIA_CHAR@aux 0013                ?i2_BORRAR_LCD 0001                       _ANSELB 000F5C  
                     _ANSELD 000F5E                       _ANSELE 000F5F                       i1l1510 10F4  
                     i1l1512 1100                       i1l1344 108A                       i1l1514 1102  
                     i1l1530 09C8                       i1l1346 109C                       i1l1516 110A  
                     i1l1540 09DA                       i1l1532 09CA                       i1l1700 0F94  
                     i1l1550 09FA                       i1l1542 09E2                       i1l1534 09CC  
                     i1l1526 09C2                       i1l1552 0A02                       i1l1544 09E4  
                     i1l1536 09D4                       i1l1528 09C6                       i1l1640 0F3C  
                     i1l1800 0CAA                       i1l1632 1142                       i1l1554 0A06  
                     i1l1562 0A20                       i1l1546 09EC                       i1l1538 09D8  
                     i1l1650 0F4E                       i1l1642 0F40                       i1l1730 0E4A  
                     i1l1802 0CC6                       i1l1556 0A10                       i1l1548 09EE  
                     i1l1652 0F54                       i1l1644 0F48                       i1l1636 0F36  
                     i1l1724 0E1E                       i1l1804 0CC8                       i1l1558 0A1A  
                     i1l1654 0F5A                       i1l1646 0F4A                       i1l1638 0F38  
                     i1l1726 0E2A                       i1l1680 0F6A                       i1l1656 0F60  
                     i1l1648 0F4C                       i1l1728 0E2E                       i1l1760 0C58  
                     i1l1690 0F7E                       i1l1682 0F6C                       i1l1818 119E  
                     i1l1762 0C60                       i1l1692 0F80                       i1l1684 0F70  
                     i1l1764 0C7C                       i1l1780 0DF6                       i1l1860 0064  
                     i1l1852 0036                       i1l1694 0F82                       i1l1686 0F74  
                     i1l1766 0C7E                       i1l1758 0C48                       i1l1782 0E02  
                     i1l1870 0080                       i1l1862 006A                       i1l1854 0038  
                     i1l1696 0F88                       i1l1688 0F7C                       i1l1784 0E14  
                     i1l1872 008E                       i1l1864 0076                       i1l1856 0042  
                     i1l1698 0F8E                       i1l1794 0C92                       i1l1778 0DE6  
                     i1l1874 009E                       i1l1866 007A                       i1l1858 004E  
                     i1l1796 0CA2                       i1l1876 00B0                       i2l1350 10C2  
                     i1l1798 0CA2                       i2l1520 111C                       i2l1600 0A92  
                     i2l1522 111E                       i2l1524 1126                       i2l1348 10B0  
                     i2l1518 1110                       i2l1710 0FE4                       i2l1702 0FD2  
                     i2l1720 0FF6                       i2l1712 0FE6                       i2l1704 0FD4  
                     i2l1570 0A3C                       i2l1722 0FFC                       i2l1714 0FE8  
                     i2l1706 0FD8                       i2l1810 0D36                       i2l1634 1158  
                     i2l1580 0A54                       i2l1572 0A3E                       i2l1564 0A34  
                     i2l1716 0FEA                       i2l1708 0FDC                       i2l1820 11A6  
                     i2l1660 0FA0                       i2l1740 0EBE                       i2l1812 0D3E  
                     i2l1590 0A74                       i2l1582 0A56                       i2l1574 0A46  
                     i2l1566 0A38                       i2l1718 0FF0                       i2l1670 0FB4  
                     i2l1662 0FA4                       i2l1734 0E92                       i2l1814 0D5A  
                     i2l1806 0D26                       i2l1830 08CE                       i2l1592 0A78  
                     i2l1584 0A5E                       i2l1576 0A4A                       i2l1568 0A3A  
                     i2l1672 0FB6                       i2l1664 0FA8                       i2l1736 0E9E  
                     i2l1816 0D5C                       i2l1808 0D36                       i2l1840 0906  
                     i2l1832 08DA                       i2l1594 0A82                       i2l1586 0A60  
                     i2l1578 0A4C                       i2l1674 0FBC                       i2l1666 0FB0  
                     i2l1658 0F9E                       i2l1738 0EA2                       i2l1770 0CEC  
                     i2l1850 0938                       i2l1834 08F0                       i2l1826 08C2  
                     i2l1596 0A8C                       i2l1588 0A6C                       i2l1676 0FC2  
                     i2l1668 0FB2                       i2l1772 0CF4                       i2l1844 090C  
                     i2l1836 08F6                       i2l1828 08C4                       i2l1678 0FC8  
                     i2l1774 0D10                       i2l1790 0E76                       i2l1846 0914  
                     i2l1838 0902                       i2l1776 0D12                       i2l1768 0CDC  
                     i2l1792 0E88                       i2l1848 0926                       i2l1786 0E5A  
                     i2l1788 0E6A               _EUSART_NewLine 1064                       _OSCCON 000FD3  
 __end_ofi1_ESCRIBE_MENSAJE2 0CDC                       _SPBRG1 000FAF                       _TXREG1 000FAD  
i1EUSART_SendString@cadenasa 0015          i2ESCRIBE_MENSAJE2@i 000A          i2_EUSART_SendString 0CDC  
              ?i2_ENVIA_CHAR 0001               ??i1_BORRAR_LCD 0014         __end_of_ENVIA_NIBBLE 10F2  
                     isa$std 000001                       _strlen 0DAA               ??i1_ENVIA_CHAR 0012  
       ?i2_EUSART_SendString 0005                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8               ??i2_BORRAR_LCD 0004  
               ??_BORRAR_LCD 0027       __end_of_EUSART_NewLine 108A                    ?_LCD_INIT 0001  
                  ?_LEER_LCD 0001                   __accesstop 0060      __end_of__initialization 116C  
                  ?_INT0_ISR 0001                    ?_INT1_ISR 0001     __end_ofi2_EUSART_NewLine 10D6  
               ??_LCD_CONFIG 0027               ??i2_ENVIA_CHAR 0002                ___rparam_used 000001  
               ??_ENVIA_CHAR 0025                    INT0_ISR@x 0010               __pcstackCOMRAM 0001  
                  INT1_ISR@x 0023  __end_ofi1_EUSART_SendString 0C92                ?i1_POS_CURSOR 0014  
         __end_of_BORRAR_LCD 119E             ?i1_ENVIA_LCD_CMD 0001          i2ENVIA_LCD_CMD@dato 0002  
      ??i2_EUSART_SendString 0007             _ESCRIBE_MENSAJE2 0BFE             ENVIA_LCD_CMD@aux 0026  
       __end_of_CURSOR_ONOFF 1064           __end_of_LCD_CONFIG 0BB4           __end_of_ENVIA_CHAR 0F00  
            i2_ENVIA_LCD_CMD 0FD0                    ?i1_strlen 0011                    ?i2_strlen 0001  
               ??i1_LEER_LCD 0011              ?_EUSART_NewLine 0001                ?i2_POS_CURSOR 0004  
                 ??_LCD_INIT 0028                 ??i2_LEER_LCD 0001                   ??_LEER_LCD 0024  
           ENVIA_NIBBLE@dato 0024                   ??_INT0_ISR 000B                   ??_INT1_ISR 001B  
           i1ENVIA_CHAR@dato 0012               ??i1_POS_CURSOR 0015         i1EUSART_SendString@x 001A  
         __end_ofi1_LEER_LCD 0A34   __end_ofi2_ESCRIBE_MENSAJE2 0D70                      ?_strlen 0024  
         __end_ofi2_LEER_LCD 0AA6          i1POS_CURSOR@columna 0014                      i1u20_20 109C  
                    i1u20_21 1098                      i1u21_20 10AE                      i1u21_21 10AA  
                    i1u51_20 0DF6                      i1u51_21 0DF2                      i1u52_20 0E14  
                    i1u52_21 0E10                      i1u45_20 1154                      i1u45_21 1150  
                    i2u22_40 10C2                      i2u22_41 10BE                      i1u39_20 0A32  
                    i1u47_20 0E4A                      i1u55_20 0CDA                      i1u39_21 0A2E  
                    i1u47_21 0E46                      i1u55_21 0CD6                      i2u23_40 10D4  
                    i2u23_41 10D0                      i2u40_40 0AA4                      i2u40_41 0AA0  
                    i1u80_27 09FC                      i1u49_20 0C90                      i1u49_21 0C8C  
                    i1u81_27 0A0A                      i1u73_27 0086                      i1u58_20 00B0  
                    i1u58_21 00AC                      i2u50_40 0D24                      i2u50_41 0D20  
                    i1u82_27 0A14                      i1u74_27 0096                      i1u83_27 1104  
                    i1u75_27 0F42                      i1u76_27 0F76                      i2u53_40 0E6A  
                    i2u53_41 0E66                      i1u77_27 09CE                      i2u46_40 116A  
                    i2u54_40 0E88                      i2u46_41 1166                      i2u54_41 0E84  
                    i1u78_27 09DC                      i1u79_27 09E6                      i2u48_40 0EBE  
                    i2u56_40 0D6E                      i2u48_41 0EBA                      i2u56_41 0D6A  
                    i2u57_40 0938                      i2u57_41 0934                   ??i1_strlen 0013  
                    i2u90_47 0A58                      _SPBRGH1 000FB0                      i2u91_47 0A6E  
                    i2u92_47 0A7C                      i2u84_47 090E                      i2u93_47 0A86  
                    i2u85_47 091C                      i2u94_47 1120                      i2u86_47 0FAA  
                    i2u87_47 0FDE                      i2u88_47 0A40                      i2u89_47 0A4E  
                 ??i2_strlen 0003              _EUSART_SendByte 112A               ??i2_POS_CURSOR 0005  
       __end_ofi1_BORRAR_LCD 11A6                 ??_POS_CURSOR 0028       i1EUSART_SendString@tam 0019  
       __end_ofi1_ENVIA_CHAR 0F68                      __Hparam 0000                      __Lparam 0000  
          __end_of_configuro 0B62         __end_ofi2_BORRAR_LCD 11AE                 __psmallconst 0800  
      __end_of_ENVIA_LCD_CMD 0F34                      __pcinit 116C           __end_of_POS_CURSOR 0DAA  
                    __ramtop 0800                      __ptext0 117E                      __ptext1 0AA6  
                    __ptext2 0D70                      __ptext3 0BB4                      __ptext4 112A  
                    __ptext5 1064                      __ptext6 0BFE                      __ptext7 0DAA  
                    __ptext8 0ECC                      __ptext9 0B0E      __end_ofi2_ENVIA_LCD_CMD 1004  
       __end_ofi2_ENVIA_CHAR 0FD0                   _pantallazo 0AA6        i1ESCRIBE_MENSAJE2@tam 0019  
            i2ENVIA_CHAR@aux 0003               __pintcode_body 08B2                 _ENVIA_NIBBLE 10D6  
       end_of_initialization 116C                      int_func 08B2         EUSART_SendString@tam 002C  
                  _RCSTAbits 000FAB     i1ESCRIBE_MENSAJE2@cadena 0015           i1_ESCRIBE_MENSAJE2 0C92  
         i1ENVIA_LCD_CMD@aux 0013             i1_EUSART_NewLine 108A                      strlen@a 0026  
                    strlen@s 0024      __end_of_EUSART_SendByte 1140          ?i1_ESCRIBE_MENSAJE2 0015  
          ESCRIBE_MENSAJE2@i 002D            _EUSART_SendString 0BB4                    _TRISAbits 000F92  
                  _TRISCbits 000F94           i1ENVIA_NIBBLE@dato 0011           ?_EUSART_SendString 0028  
       __end_ofi1_POS_CURSOR 0E1E               i1_ENVIA_NIBBLE 10F2          ??_EUSART_SendString 002A  
                  _TXSTAbits 000FAC            ?i2_EUSART_NewLine 0001         ??i1_ESCRIBE_MENSAJE2 0017  
   __end_of_ESCRIBE_MENSAJE2 0C48                 _CURSOR_ONOFF 1034           CURSOR_ONOFF@estado 0027  
         ??i2_EUSART_NewLine 0001         __end_ofi2_POS_CURSOR 0E92    __end_of_EUSART_SendString 0BFE  
           ?i2_ENVIA_LCD_CMD 0001  i2EUSART_SendString@cadenasa 0005             ??_EUSART_NewLine 0024  
             __end_of_strlen 0DE4                ??_CURSOR_HOME 0027          start_initialization 116C  
                ?_pantallazo 0001                i1LEER_LCD@aux 0011       __end_ofi1_ENVIA_NIBBLE 110E  
                  i1strlen@a 0013                    i1strlen@s 0011                    i2strlen@a 0003  
                  i2strlen@s 0001            ENVIA_LCD_CMD@dato 0025             i2POS_CURSOR@fila 0005  
__end_ofi2_EUSART_SendString 0D26                 i1_BORRAR_LCD 119E           EUSART_SendString@x 002D  
      i1EUSART_SendByte@dato 0011                     ??_strlen 0026             ?_EUSART_SendByte 0001  
               i1_ENVIA_CHAR 0F34                i2LEER_LCD@aux 0001                 i2_BORRAR_LCD 11A6  
            ?i1_ENVIA_NIBBLE 0001           i2_ESCRIBE_MENSAJE2 0D26           i2ENVIA_LCD_CMD@aux 0003  
        __end_of_CURSOR_HOME 1196               i2_ENVIA_NIBBLE 110E          ?i2_ESCRIBE_MENSAJE2 0005  
               i2_ENVIA_CHAR 0F9C           i2ENVIA_NIBBLE@dato 0001                    __pintcode 0008  
                __pintcodelo 0018                    _configuro 0B0E         ??i2_ESCRIBE_MENSAJE2 0007  
                __smallconst 0800          i2POS_CURSOR@columna 0004       __end_ofi2_ENVIA_NIBBLE 112A  
   __end_ofi1_EUSART_NewLine 10B0                     _LCD_INIT 1004                     _LEER_LCD 0950  
                   _INT0_ISR 0008                     _INT1_ISR 0018                     _LATAbits 000F89  
                   _LATEbits 000F8D                     _RCONbits 000FD0                 i1_POS_CURSOR 0DE4  
             POS_CURSOR@fila 0028                   ?_configuro 0001       ESCRIBE_MENSAJE2@cadena 0028  
                _CURSOR_HOME 118E                     i1_strlen 0E1E        i2ESCRIBE_MENSAJE2@tam 0009  
                   i2_strlen 0E92                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
               i2_POS_CURSOR 0E58              ?i2_ENVIA_NIBBLE 0001            ??i1_ENVIA_LCD_CMD 0012  
                   __Hrparam 0000            ?_ESCRIBE_MENSAJE2 0028                     __Lrparam 0000  
               __Lsmallconst 0800           ??_ESCRIBE_MENSAJE2 002A                   _ANSELAbits 000F5B  
                 _ANSELCbits 000F5D                 ??_pantallazo 002E                     __ptext10 1004  
                   __ptext11 0B62                     __ptext20 0C48                     __ptext12 1034  
                   __ptext21 1140                     __ptext13 118E                     __ptext22 108A  
                   __ptext14 1196                     __ptext31 0E58                     __ptext23 0C92  
                   __ptext15 0F00                     __ptext40 0A34                     __ptext32 0CDC  
                   __ptext24 0E1E                     __ptext16 0950                     __ptext41 110E  
                   __ptext33 1156                     __ptext25 0F34                     __ptext17 10D6  
                   __ptext34 10B0                     __ptext26 119E                     __ptext35 0D26  
                   __ptext27 0F68                     __ptext19 0DE4                     __ptext36 0E92  
                   __ptext28 09C2                     __ptext37 0F9C                     __ptext29 10F2  
                   __ptext38 11A6                     __ptext39 0FD0                   _BORRAR_LCD 1196  
                 _LCD_CONFIG 0B62          i1ESCRIBE_MENSAJE2@i 001A          i1_EUSART_SendString 0C48  
                 _ENVIA_CHAR 0ECC                     isa$xinst 000000           __end_of_pantallazo 0B0E  
                   int$flags 0030             i2ENVIA_CHAR@dato 0002                _ENVIA_LCD_CMD 0F00  
                ??_configuro 0029         ?i1_EUSART_SendString 0015                   _INTCONbits 000FF2  
           ??i1_ENVIA_NIBBLE 0011                   i1_LEER_LCD 09C2                     intlevel1 0000  
                   intlevel2 0000                   i2_LEER_LCD 0A34               ?_ENVIA_LCD_CMD 0001  
        i1ENVIA_LCD_CMD@dato 0012        i2EUSART_SendByte@dato 0001        ??i1_EUSART_SendString 0017  
          i1_EUSART_SendByte 1140           ?i1_EUSART_SendByte 0001          ESCRIBE_MENSAJE2@tam 002C  
                ?_BORRAR_LCD 0001                ?_ENVIA_NIBBLE 0001                   _POS_CURSOR 0D70  
          ?i1_EUSART_NewLine 0001          ??i1_EUSART_SendByte 0011                  ?_LCD_CONFIG 0001  
         ??i1_EUSART_NewLine 0011                  ?_ENVIA_CHAR 0001            POS_CURSOR@columna 0027  
