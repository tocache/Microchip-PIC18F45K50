

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 23 17:50:51 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.35
    34                           ; Generated 05/05/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _SSP1STATbits	set	4039
    69  0000                     _SSP1ADD	set	4040
    70  0000                     _LATD	set	3980
    71  0000                     _ANSELD	set	3934
    72  0000                     _PORTD	set	3971
    73  0000                     _LATDbits	set	3980
    74  0000                     _TRISD	set	3989
    75  0000                     _SSP1CON2bits	set	4037
    76  0000                     _SSP1CON1bits	set	4038
    77  0000                     _OSCCON	set	4051
    78  0000                     _SSP1BUF	set	4041
    79                           
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	callstack 0
    83  000800  00                 	db	0
    84  000801                     STR_7:
    85  000801  4D                 	db	77	;'M'
    86  000802  69                 	db	105	;'i'
    87  000803  63                 	db	99	;'c'
    88  000804  72                 	db	114	;'r'
    89  000805  6F                 	db	111	;'o'
    90  000806  20                 	db	32
    91  000807  32                 	db	50	;'2'
    92  000808  30                 	db	48	;'0'
    93  000809  32                 	db	50	;'2'
    94  00080A  33                 	db	51	;'3'
    95  00080B  31                 	db	49	;'1'
    96  00080C  20                 	db	32
    97  00080D  45                 	db	69	;'E'
    98  00080E  4C                 	db	76	;'L'
    99  00080F  35                 	db	53	;'5'
   100  000810  33                 	db	51	;'3'
   101  000811  00                 	db	0
   102  000812                     STR_8:
   103  000812  53                 	db	83	;'S'
   104  000813  65                 	db	101	;'e'
   105  000814  6D                 	db	109	;'m'
   106  000815  61                 	db	97	;'a'
   107  000816  6E                 	db	110	;'n'
   108  000817  61                 	db	97	;'a'
   109  000818  20                 	db	32
   110  000819  31                 	db	49	;'1'
   111  00081A  34                 	db	52	;'4'
   112  00081B  20                 	db	32
   113  00081C  79                 	db	121	;'y'
   114  00081D  61                 	db	97	;'a'
   115  00081E  20                 	db	32
   116  00081F  66                 	db	102	;'f'
   117  000820  75                 	db	117	;'u'
   118  000821  69                 	db	105	;'i'
   119  000822  00                 	db	0
   120  000823                     STR_9:
   121  000823  50                 	db	80	;'P'
   122  000824  72                 	db	114	;'r'
   123  000825  75                 	db	117	;'u'
   124  000826  65                 	db	101	;'e'
   125  000827  62                 	db	98	;'b'
   126  000828  61                 	db	97	;'a'
   127  000829  20                 	db	32
   128  00082A  50                 	db	80	;'P'
   129  00082B  43                 	db	67	;'C'
   130  00082C  46                 	db	70	;'F'
   131  00082D  38                 	db	56	;'8'
   132  00082E  35                 	db	53	;'5'
   133  00082F  37                 	db	55	;'7'
   134  000830  34                 	db	52	;'4'
   135  000831  00                 	db	0
   136  000832                     STR_3:
   137  000832  20                 	db	32
   138  000833  20                 	db	32
   139  000834  20                 	db	32
   140  000835  20                 	db	32
   141  000836  00                 	db	0
   142  000837  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147  000D7E                     __pcinit:
   148                           	callstack 0
   149  000D7E                     start_initialization:
   150                           	callstack 0
   151  000D7E                     __initialization:
   152                           	callstack 0
   153  000D7E                     end_of_initialization:
   154                           	callstack 0
   155  000D7E                     __end_of__initialization:
   156                           	callstack 0
   157  000D7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158  000D80  6EF8               	movwf	tblptru,c
   159  000D82  0100               	movlb	0
   160  000D84  EFDB  F005         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165  000001                     ?_strlen:
   166                           	callstack 0
   167  000001                     ENVIA_NIBBLE@dato:
   168                           	callstack 0
   169  000001                     LEER_LCD@aux:
   170                           	callstack 0
   171  000001                     PCA9685_WR@registro:
   172                           	callstack 0
   173  000001                     PCF8574_RD@direccion:
   174                           	callstack 0
   175  000001                     strlen@s:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x0
   179  000001                     	ds	1
   180  000002                     ENVIA_CHAR@dato:
   181                           	callstack 0
   182  000002                     ENVIA_LCD_CMD@dato:
   183                           	callstack 0
   184  000002                     PCF8574_WR@dato:
   185                           	callstack 0
   186  000002                     PCA9685_WR@dato:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ENVIA_CHAR@aux:
   192                           	callstack 0
   193  000003                     ENVIA_LCD_CMD@aux:
   194                           	callstack 0
   195  000003                     PCF8574_WR@direccion:
   196                           	callstack 0
   197  000003                     PCA9685_WR@direccion:
   198                           	callstack 0
   199  000003                     strlen@a:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  000003                     	ds	1
   204  000004                     ??_LCD_CONFIG:
   205  000004                     ??_LCD_VARCHAR_BITS:
   206  000004                     POS_CURSOR@columna:
   207                           	callstack 0
   208  000004                     CURSOR_ONOFF@estado:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x3
   212  000004                     	ds	1
   213  000005                     ??_LCD_INIT:
   214  000005                     POS_CURSOR@fila:
   215                           	callstack 0
   216  000005                     ESCRIBE_MENSAJE2@cadena:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x4
   220  000005                     	ds	1
   221  000006                     LCD_VARCHAR_BITS@dato:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x5
   225  000006                     	ds	1
   226  000007                     ??_ESCRIBE_MENSAJE2:
   227  000007                     LCD_VARCHAR_BITS@x_var:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x6
   231  000007                     	ds	2
   232  000009                     ESCRIBE_MENSAJE2@tam:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x8
   236  000009                     	ds	1
   237  00000A                     ESCRIBE_MENSAJE2@i:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x9
   241  00000A                     	ds	1
   242  00000B                     ??_splash_msg:
   243                           
   244                           ; 1 bytes @ 0xA
   245  00000B                     	ds	2
   246  00000D                     
   247                           ; 1 bytes @ 0xC
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 27 in file "maincode4.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   267 ;;      Params:         0       0       0       0       0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels required when called: 5
   273 ;; This function calls:
   274 ;;		_ESCRIBE_MENSAJE2
   275 ;;		_LCD_VARCHAR_BITS
   276 ;;		_PCF8574_RD
   277 ;;		_PCF8574_WR
   278 ;;		_POS_CURSOR
   279 ;;		_configuro
   280 ;;		_splash_msg
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  000BB6                     __ptext0:
   288                           	callstack 0
   289  000BB6                     _main:
   290                           	callstack 26
   291  000BB6                     
   292                           ;maincode4.c: 28:     configuro();
   293  000BB6  EC3A  F005         	call	_configuro	;wreg free
   294  000BBA                     
   295                           ;maincode4.c: 29:     splash_msg();
   296  000BBA  ECFF  F005         	call	_splash_msg	;wreg free
   297  000BBE                     l1513:
   298                           
   299                           ;maincode4.c: 31:         POS_CURSOR(1,0);
   300  000BBE  0E00               	movlw	0
   301  000BC0  6E04               	movwf	POS_CURSOR@columna^0,c
   302  000BC2  0E01               	movlw	1
   303  000BC4  EC5E  F004         	call	_POS_CURSOR
   304                           
   305                           ;maincode4.c: 32:         ESCRIBE_MENSAJE2("Prueba PCF8574");
   306  000BC8  0E23               	movlw	low STR_9
   307  000BCA  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   308  000BCC  0E08               	movlw	high STR_9
   309  000BCE  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   310  000BD0  ECB6  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   311  000BD4                     
   312                           ;maincode4.c: 33:         POS_CURSOR(2,0);
   313  000BD4  0E00               	movlw	0
   314  000BD6  6E04               	movwf	POS_CURSOR@columna^0,c
   315  000BD8  0E02               	movlw	2
   316  000BDA  EC5E  F004         	call	_POS_CURSOR
   317  000BDE                     
   318                           ;maincode4.c: 34:         LCD_VARCHAR_BITS(PCF8574_RD(0x43));
   319  000BDE  0E43               	movlw	67
   320  000BE0  ECD4  F004         	call	_PCF8574_RD
   321  000BE4  EC8D  F005         	call	_LCD_VARCHAR_BITS
   322  000BE8                     
   323                           ;maincode4.c: 35:         PCF8574_WR(0x40,PCF8574_RD(0x43));
   324  000BE8  0E43               	movlw	67
   325  000BEA  ECD4  F004         	call	_PCF8574_RD
   326  000BEE  6E02               	movwf	PCF8574_WR@dato^0,c
   327  000BF0  0E40               	movlw	64
   328  000BF2  EC08  F005         	call	_PCF8574_WR
   329  000BF6  EFDF  F005         	goto	l1513
   330  000BFA  EF00  F000         	goto	start
   331  000BFE                     __end_of_main:
   332                           	callstack 0
   333                           
   334 ;; *************** function _splash_msg *****************
   335 ;; Defined at:
   336 ;;		line 18 in file "maincode4.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   350 ;;      Params:         0       0       0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0       0       0       0       0
   353 ;;      Totals:         2       0       0       0       0       0       0       0       0
   354 ;;Total ram usage:        2 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 3
   357 ;; This function calls:
   358 ;;		_BORRAR_LCD
   359 ;;		_ESCRIBE_MENSAJE2
   360 ;;		_POS_CURSOR
   361 ;; This function is called by:
   362 ;;		_main
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text1
   367  000BFE                     __ptext1:
   368                           	callstack 0
   369  000BFE                     _splash_msg:
   370                           	callstack 27
   371  000BFE                     
   372                           ;maincode4.c: 19:     POS_CURSOR(1,0);
   373  000BFE  0E00               	movlw	0
   374  000C00  6E04               	movwf	POS_CURSOR@columna^0,c
   375  000C02  0E01               	movlw	1
   376  000C04  EC5E  F004         	call	_POS_CURSOR
   377  000C08                     
   378                           ;maincode4.c: 20:     ESCRIBE_MENSAJE2("Micro 20231 EL53");
   379  000C08  0E01               	movlw	low STR_7
   380  000C0A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   381  000C0C  0E08               	movlw	high STR_7
   382  000C0E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   383  000C10  ECB6  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   384  000C14                     
   385                           ;maincode4.c: 21:     POS_CURSOR(2,0);
   386  000C14  0E00               	movlw	0
   387  000C16  6E04               	movwf	POS_CURSOR@columna^0,c
   388  000C18  0E02               	movlw	2
   389  000C1A  EC5E  F004         	call	_POS_CURSOR
   390                           
   391                           ;maincode4.c: 22:     ESCRIBE_MENSAJE2("Semana 14 ya fui");
   392  000C1E  0E12               	movlw	low STR_8
   393  000C20  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^0,c
   394  000C22  0E08               	movlw	high STR_8
   395  000C24  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^0,c
   396  000C26  ECB6  F005         	call	_ESCRIBE_MENSAJE2	;wreg free
   397  000C2A                     
   398                           ;maincode4.c: 23:     _delay((unsigned long)((3000)*(4000000UL/4000.0)));
   399  000C2A  0E10               	movlw	16
   400  000C2C  6E0C               	movwf	(??_splash_msg+1)^0,c
   401  000C2E  0E39               	movlw	57
   402  000C30  6E0B               	movwf	??_splash_msg^0,c
   403  000C32  0E0E               	movlw	14
   404  000C34                     u937:
   405  000C34  2EE8               	decfsz	wreg,f,c
   406  000C36  D7FE               	bra	u937
   407  000C38  2E0B               	decfsz	??_splash_msg^0,f,c
   408  000C3A  D7FC               	bra	u937
   409  000C3C  2E0C               	decfsz	(??_splash_msg+1)^0,f,c
   410  000C3E  D7FA               	bra	u937
   411  000C40                     
   412                           ;maincode4.c: 24:     BORRAR_LCD();
   413  000C40  ECC8  F006         	call	_BORRAR_LCD	;wreg free
   414  000C44  0012               	return		;funcret
   415  000C46                     __end_of_splash_msg:
   416                           	callstack 0
   417                           
   418 ;; *************** function _POS_CURSOR *****************
   419 ;; Defined at:
   420 ;;		line 5 in file "LCD.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  fila            1    wreg     unsigned char 
   423 ;;  columna         1    3[COMRAM] unsigned char 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  fila            1    4[COMRAM] unsigned char 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   435 ;;      Params:         1       0       0       0       0       0       0       0       0
   436 ;;      Locals:         1       0       0       0       0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0       0       0
   438 ;;      Totals:         2       0       0       0       0       0       0       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 2
   442 ;; This function calls:
   443 ;;		_ENVIA_LCD_CMD
   444 ;; This function is called by:
   445 ;;		_splash_msg
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text2
   451  0008BC                     __ptext2:
   452                           	callstack 0
   453  0008BC                     _POS_CURSOR:
   454                           	callstack 27
   455                           
   456                           ;incstack = 0
   457                           ;POS_CURSOR@fila stored from wreg
   458  0008BC  6E05               	movwf	POS_CURSOR@fila^0,c
   459  0008BE                     
   460                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   461  0008BE  0405               	decf	POS_CURSOR@fila^0,w,c
   462  0008C0  A4D8               	btfss	status,2,c
   463  0008C2  EF65  F004         	goto	u571
   464  0008C6  EF67  F004         	goto	u570
   465  0008CA                     u571:
   466  0008CA  EF6D  F004         	goto	l1353
   467  0008CE                     u570:
   468  0008CE                     
   469                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   470  0008CE  5004               	movf	POS_CURSOR@columna^0,w,c
   471  0008D0  0F80               	addlw	128
   472  0008D2  EC5D  F006         	call	_ENVIA_LCD_CMD
   473                           
   474                           ;LCD.c: 10:  }
   475  0008D6  EF9A  F004         	goto	l32
   476  0008DA                     l1353:
   477  0008DA  0E02               	movlw	2
   478  0008DC  1805               	xorwf	POS_CURSOR@fila^0,w,c
   479  0008DE  A4D8               	btfss	status,2,c
   480  0008E0  EF74  F004         	goto	u581
   481  0008E4  EF76  F004         	goto	u580
   482  0008E8                     u581:
   483  0008E8  EF7C  F004         	goto	l1357
   484  0008EC                     u580:
   485  0008EC                     
   486                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   487  0008EC  5004               	movf	POS_CURSOR@columna^0,w,c
   488  0008EE  0FC0               	addlw	192
   489  0008F0  EC5D  F006         	call	_ENVIA_LCD_CMD
   490                           
   491                           ;LCD.c: 14:  }
   492  0008F4  EF9A  F004         	goto	l32
   493  0008F8                     l1357:
   494  0008F8  0E03               	movlw	3
   495  0008FA  1805               	xorwf	POS_CURSOR@fila^0,w,c
   496  0008FC  A4D8               	btfss	status,2,c
   497  0008FE  EF83  F004         	goto	u591
   498  000902  EF85  F004         	goto	u590
   499  000906                     u591:
   500  000906  EF8B  F004         	goto	l1361
   501  00090A                     u590:
   502  00090A                     
   503                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   504  00090A  5004               	movf	POS_CURSOR@columna^0,w,c
   505  00090C  0F94               	addlw	148
   506  00090E  EC5D  F006         	call	_ENVIA_LCD_CMD
   507                           
   508                           ;LCD.c: 18:  }
   509  000912  EF9A  F004         	goto	l32
   510  000916                     l1361:
   511  000916  0E04               	movlw	4
   512  000918  1805               	xorwf	POS_CURSOR@fila^0,w,c
   513  00091A  A4D8               	btfss	status,2,c
   514  00091C  EF92  F004         	goto	u601
   515  000920  EF94  F004         	goto	u600
   516  000924                     u601:
   517  000924  EF9A  F004         	goto	l28
   518  000928                     u600:
   519  000928                     
   520                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
   521  000928  5004               	movf	POS_CURSOR@columna^0,w,c
   522  00092A  0FD4               	addlw	212
   523  00092C  EC5D  F006         	call	_ENVIA_LCD_CMD
   524  000930  EF9A  F004         	goto	l32
   525  000934                     l28:
   526  000934                     l32:
   527  000934  0012               	return		;funcret
   528  000936                     __end_of_POS_CURSOR:
   529                           	callstack 0
   530                           
   531 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   532 ;; Defined at:
   533 ;;		line 77 in file "LCD.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   536 ;;		 -> STR_9(15), STR_8(17), STR_7(17), STR_6(2), 
   537 ;;		 -> STR_5(3), STR_4(4), STR_3(5), STR_2(2), 
   538 ;;		 -> STR_1(3), 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  i               1    9[COMRAM] unsigned char 
   541 ;;  tam             1    8[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   551 ;;      Params:         2       0       0       0       0       0       0       0       0
   552 ;;      Locals:         2       0       0       0       0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0       0       0       0       0
   554 ;;      Totals:         6       0       0       0       0       0       0       0       0
   555 ;;Total ram usage:        6 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 2
   558 ;; This function calls:
   559 ;;		_ENVIA_CHAR
   560 ;;		_strlen
   561 ;; This function is called by:
   562 ;;		_splash_msg
   563 ;;		_main
   564 ;;		_LCD_ESCRIBE_VAR_CHAR
   565 ;;		_LCD_ESCRIBE_VAR_INT
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text3
   570  000B6C                     __ptext3:
   571                           	callstack 0
   572  000B6C                     _ESCRIBE_MENSAJE2:
   573                           	callstack 27
   574  000B6C                     
   575                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
   576  000B6C  C005  F001         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   577  000B70  C006  F002         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   578  000B74  EC23  F006         	call	_strlen	;wreg free
   579  000B78  5001               	movf	?_strlen^0,w,c
   580  000B7A  6E09               	movwf	ESCRIBE_MENSAJE2@tam^0,c
   581  000B7C                     
   582                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
   583  000B7C  0E00               	movlw	0
   584  000B7E  6E0A               	movwf	ESCRIBE_MENSAJE2@i^0,c
   585  000B80  EFD1  F005         	goto	l1375
   586  000B84                     l1371:
   587                           
   588                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
   589  000B84  500A               	movf	ESCRIBE_MENSAJE2@i^0,w,c
   590  000B86  2405               	addwf	ESCRIBE_MENSAJE2@cadena^0,w,c
   591  000B88  6E07               	movwf	??_ESCRIBE_MENSAJE2^0,c
   592  000B8A  0E00               	movlw	0
   593  000B8C  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^0,w,c
   594  000B8E  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^0,c
   595  000B90  C007  FFF6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   596  000B94  C008  FFF7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   597  000B98                     	if	0	;tblptru may be non-zero
   598  000B98                     	endif
   599  000B98                     	if	0	;tblptru may be non-zero
   600  000B98                     	endif
   601  000B98  0008               	tblrd		*
   602  000B9A  50F5               	movf	tablat,w,c
   603  000B9C  EC77  F006         	call	_ENVIA_CHAR
   604  000BA0                     
   605                           ;LCD.c: 85:  }
   606  000BA0  2A0A               	incf	ESCRIBE_MENSAJE2@i^0,f,c
   607  000BA2                     l1375:
   608  000BA2  5009               	movf	ESCRIBE_MENSAJE2@tam^0,w,c
   609  000BA4  5C0A               	subwf	ESCRIBE_MENSAJE2@i^0,w,c
   610  000BA6  A0D8               	btfss	status,0,c
   611  000BA8  EFD8  F005         	goto	u611
   612  000BAC  EFDA  F005         	goto	u610
   613  000BB0                     u611:
   614  000BB0  EFC2  F005         	goto	l1371
   615  000BB4                     u610:
   616  000BB4  0012               	return		;funcret
   617  000BB6                     __end_of_ESCRIBE_MENSAJE2:
   618                           	callstack 0
   619                           
   620 ;; *************** function _strlen *****************
   621 ;; Defined at:
   622 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  s               2    0[COMRAM] PTR const unsigned char 
   625 ;;		 -> STR_9(15), STR_8(17), STR_7(17), STR_6(2), 
   626 ;;		 -> STR_5(3), STR_4(4), STR_3(5), STR_2(2), 
   627 ;;		 -> STR_1(3), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  a               2    2[COMRAM] PTR const unsigned char 
   630 ;;		 -> STR_9(15), STR_8(17), STR_7(17), STR_6(2), 
   631 ;;		 -> STR_5(3), STR_4(4), STR_3(5), STR_2(2), 
   632 ;;		 -> STR_1(3), 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2    0[COMRAM] unsigned int 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         2       0       0       0       0       0       0       0       0
   643 ;;      Locals:         2       0       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         4       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        4 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_ESCRIBE_MENSAJE2
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  000C46                     __ptext4:
   657                           	callstack 0
   658  000C46                     _strlen:
   659                           	callstack 28
   660  000C46  C001  F003         	movff	strlen@s,strlen@a
   661  000C4A  C002  F004         	movff	strlen@s+1,strlen@a+1
   662  000C4E  EF2B  F006         	goto	l1343
   663  000C52                     l1341:
   664  000C52  4A01               	infsnz	strlen@s^0,f,c
   665  000C54  2A02               	incf	(strlen@s+1)^0,f,c
   666  000C56                     l1343:
   667  000C56  C001  FFF6         	movff	strlen@s,tblptrl
   668  000C5A  C002  FFF7         	movff	strlen@s+1,tblptrh
   669  000C5E                     	if	0	;tblptru may be non-zero
   670  000C5E                     	endif
   671  000C5E                     	if	0	;tblptru may be non-zero
   672  000C5E                     	endif
   673  000C5E  0008               	tblrd		*
   674  000C60  50F5               	movf	tablat,w,c
   675  000C62  0900               	iorlw	0
   676  000C64  A4D8               	btfss	status,2,c
   677  000C66  EF37  F006         	goto	u561
   678  000C6A  EF39  F006         	goto	u560
   679  000C6E                     u561:
   680  000C6E  EF29  F006         	goto	l1341
   681  000C72                     u560:
   682  000C72  5003               	movf	strlen@a^0,w,c
   683  000C74  5C01               	subwf	strlen@s^0,w,c
   684  000C76  6E01               	movwf	?_strlen^0,c
   685  000C78  5004               	movf	(strlen@a+1)^0,w,c
   686  000C7A  5802               	subwfb	(strlen@s+1)^0,w,c
   687  000C7C  6E02               	movwf	(?_strlen+1)^0,c
   688  000C7E  0012               	return		;funcret
   689  000C80                     __end_of_strlen:
   690                           	callstack 0
   691                           
   692 ;; *************** function _configuro *****************
   693 ;; Defined at:
   694 ;;		line 7 in file "maincode4.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         0       0       0       0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 4
   715 ;; This function calls:
   716 ;;		_LCD_INIT
   717 ;;		_MSSP_INIT
   718 ;;		_PCA9685_WR
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text5
   725  000A74                     __ptext5:
   726                           	callstack 0
   727  000A74                     _configuro:
   728                           	callstack 26
   729  000A74                     
   730                           ;maincode4.c: 8:     OSCCON = 0x62;
   731  000A74  0E62               	movlw	98
   732  000A76  6ED3               	movwf	211,c	;volatile
   733  000A78                     
   734                           ;maincode4.c: 9:     LCD_INIT();
   735  000A78  EC40  F006         	call	_LCD_INIT	;wreg free
   736  000A7C                     
   737                           ;maincode4.c: 10:     MSSP_INIT();
   738  000A7C  ECB7  F006         	call	_MSSP_INIT	;wreg free
   739  000A80                     
   740                           ;maincode4.c: 11:     PCA9685_WR(0x80,0x00,0x21);
   741  000A80  0E00               	movlw	0
   742  000A82  6E01               	movwf	PCA9685_WR@registro^0,c
   743  000A84  0E21               	movlw	33
   744  000A86  6E02               	movwf	PCA9685_WR@dato^0,c
   745  000A88  0E80               	movlw	128
   746  000A8A  EC1C  F004         	call	_PCA9685_WR
   747  000A8E                     
   748                           ;maincode4.c: 12:     PCA9685_WR(0x80,0x06,0x99);
   749  000A8E  0E06               	movlw	6
   750  000A90  6E01               	movwf	PCA9685_WR@registro^0,c
   751  000A92  0E99               	movlw	153
   752  000A94  6E02               	movwf	PCA9685_WR@dato^0,c
   753  000A96  0E80               	movlw	128
   754  000A98  EC1C  F004         	call	_PCA9685_WR
   755  000A9C                     
   756                           ;maincode4.c: 13:     PCA9685_WR(0x80,0x07,0x01);
   757  000A9C  0E07               	movlw	7
   758  000A9E  6E01               	movwf	PCA9685_WR@registro^0,c
   759  000AA0  0E01               	movlw	1
   760  000AA2  6E02               	movwf	PCA9685_WR@dato^0,c
   761  000AA4  0E80               	movlw	128
   762  000AA6  EC1C  F004         	call	_PCA9685_WR
   763  000AAA                     
   764                           ;maincode4.c: 14:     PCA9685_WR(0x80,0x08,0x66);
   765  000AAA  0E08               	movlw	8
   766  000AAC  6E01               	movwf	PCA9685_WR@registro^0,c
   767  000AAE  0E66               	movlw	102
   768  000AB0  6E02               	movwf	PCA9685_WR@dato^0,c
   769  000AB2  0E80               	movlw	128
   770  000AB4  EC1C  F004         	call	_PCA9685_WR
   771  000AB8                     
   772                           ;maincode4.c: 15:     PCA9685_WR(0x80,0x09,0x06);
   773  000AB8  0E09               	movlw	9
   774  000ABA  6E01               	movwf	PCA9685_WR@registro^0,c
   775  000ABC  0E06               	movlw	6
   776  000ABE  6E02               	movwf	PCA9685_WR@dato^0,c
   777  000AC0  0E80               	movlw	128
   778  000AC2  EC1C  F004         	call	_PCA9685_WR
   779  000AC6  0012               	return		;funcret
   780  000AC8                     __end_of_configuro:
   781                           	callstack 0
   782                           
   783 ;; *************** function _PCA9685_WR *****************
   784 ;; Defined at:
   785 ;;		line 23 in file "PCF8574.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  direccion       1    wreg     unsigned char 
   788 ;;  registro        1    0[COMRAM] unsigned char 
   789 ;;  dato            1    1[COMRAM] unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  direccion       1    2[COMRAM] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   801 ;;      Params:         2       0       0       0       0       0       0       0       0
   802 ;;      Locals:         1       0       0       0       0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0
   804 ;;      Totals:         3       0       0       0       0       0       0       0       0
   805 ;;Total ram usage:        3 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_configuro
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text6
   815  000838                     __ptext6:
   816                           	callstack 0
   817  000838                     _PCA9685_WR:
   818                           	callstack 29
   819                           
   820                           ;incstack = 0
   821                           ;PCA9685_WR@direccion stored from wreg
   822  000838  6E03               	movwf	PCA9685_WR@direccion^0,c
   823  00083A                     
   824                           ;PCF8574.c: 24:     SSP1CON2bits.SEN = 1;
   825  00083A  80C5               	bsf	197,0,c	;volatile
   826  00083C                     l182:
   827  00083C  B0C5               	btfsc	197,0,c	;volatile
   828  00083E  EF23  F004         	goto	u621
   829  000842  EF25  F004         	goto	u620
   830  000846                     u621:
   831  000846  EF1E  F004         	goto	l182
   832  00084A                     u620:
   833  00084A                     
   834                           ;PCF8574.c: 26:     SSP1BUF = direccion;
   835  00084A  C003  FFC9         	movff	PCA9685_WR@direccion,4041	;volatile
   836  00084E                     l185:
   837  00084E  B0C7               	btfsc	199,0,c	;volatile
   838  000850  EF2C  F004         	goto	u631
   839  000854  EF2E  F004         	goto	u630
   840  000858                     u631:
   841  000858  EF27  F004         	goto	l185
   842  00085C                     u630:
   843  00085C                     l188:
   844  00085C  B4C7               	btfsc	199,2,c	;volatile
   845  00085E  EF33  F004         	goto	u641
   846  000862  EF35  F004         	goto	u640
   847  000866                     u641:
   848  000866  EF2E  F004         	goto	l188
   849  00086A                     u640:
   850  00086A                     
   851                           ;PCF8574.c: 29:     SSP1BUF = registro;
   852  00086A  C001  FFC9         	movff	PCA9685_WR@registro,4041	;volatile
   853  00086E                     l191:
   854  00086E  B0C7               	btfsc	199,0,c	;volatile
   855  000870  EF3C  F004         	goto	u651
   856  000874  EF3E  F004         	goto	u650
   857  000878                     u651:
   858  000878  EF37  F004         	goto	l191
   859  00087C                     u650:
   860  00087C                     l194:
   861  00087C  B4C7               	btfsc	199,2,c	;volatile
   862  00087E  EF43  F004         	goto	u661
   863  000882  EF45  F004         	goto	u660
   864  000886                     u661:
   865  000886  EF3E  F004         	goto	l194
   866  00088A                     u660:
   867  00088A                     
   868                           ;PCF8574.c: 32:     SSP1BUF = dato;
   869  00088A  C002  FFC9         	movff	PCA9685_WR@dato,4041	;volatile
   870  00088E                     l197:
   871  00088E  B0C7               	btfsc	199,0,c	;volatile
   872  000890  EF4C  F004         	goto	u671
   873  000894  EF4E  F004         	goto	u670
   874  000898                     u671:
   875  000898  EF47  F004         	goto	l197
   876  00089C                     u670:
   877  00089C                     l200:
   878  00089C  B4C7               	btfsc	199,2,c	;volatile
   879  00089E  EF53  F004         	goto	u681
   880  0008A2  EF55  F004         	goto	u680
   881  0008A6                     u681:
   882  0008A6  EF4E  F004         	goto	l200
   883  0008AA                     u680:
   884  0008AA                     
   885                           ;PCF8574.c: 35:     SSP1CON2bits.PEN = 1;
   886  0008AA  84C5               	bsf	197,2,c	;volatile
   887  0008AC                     l203:
   888  0008AC  B4C5               	btfsc	197,2,c	;volatile
   889  0008AE  EF5B  F004         	goto	u691
   890  0008B2  EF5D  F004         	goto	u690
   891  0008B6                     u691:
   892  0008B6  EF56  F004         	goto	l203
   893  0008BA                     u690:
   894  0008BA  0012               	return		;funcret
   895  0008BC                     __end_of_PCA9685_WR:
   896                           	callstack 0
   897                           
   898 ;; *************** function _MSSP_INIT *****************
   899 ;; Defined at:
   900 ;;		line 4 in file "PCF8574.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_configuro
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text7
   928  000D6E                     __ptext7:
   929                           	callstack 0
   930  000D6E                     _MSSP_INIT:
   931                           	callstack 29
   932  000D6E                     
   933                           ;PCF8574.c: 5:     SSP1CON1bits.SSPEN = 1;
   934  000D6E  8AC6               	bsf	198,5,c	;volatile
   935  000D70                     
   936                           ;PCF8574.c: 6:     SSP1CON1bits.SSPM = 0b1000;
   937  000D70  50C6               	movf	198,w,c	;volatile
   938  000D72  0BF0               	andlw	-16
   939  000D74  0908               	iorlw	8
   940  000D76  6EC6               	movwf	198,c	;volatile
   941                           
   942                           ;PCF8574.c: 7:     SSP1ADD = 19;
   943  000D78  0E13               	movlw	19
   944  000D7A  6EC8               	movwf	200,c	;volatile
   945  000D7C  0012               	return		;funcret
   946  000D7E                     __end_of_MSSP_INIT:
   947                           	callstack 0
   948                           
   949 ;; *************** function _LCD_INIT *****************
   950 ;; Defined at:
   951 ;;		line 192 in file "LCD.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   965 ;;      Params:         0       0       0       0       0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0
   967 ;;      Temps:          1       0       0       0       0       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 3
   972 ;; This function calls:
   973 ;;		_BORRAR_LCD
   974 ;;		_CURSOR_HOME
   975 ;;		_CURSOR_ONOFF
   976 ;;		_LCD_CONFIG
   977 ;; This function is called by:
   978 ;;		_configuro
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text8
   983  000C80                     __ptext8:
   984                           	callstack 0
   985  000C80                     _LCD_INIT:
   986                           	callstack 26
   987  000C80                     
   988                           ;LCD.c: 193:     TRISD = 0x00;
   989  000C80  0E00               	movlw	0
   990  000C82  6E95               	movwf	149,c	;volatile
   991                           
   992                           ;LCD.c: 194:     ANSELD = 0x00;
   993  000C84  0E00               	movlw	0
   994  000C86  010F               	movlb	15	; () banked
   995  000C88  6F5E               	movwf	94,b	;volatile
   996  000C8A                     
   997                           ; BSR set to: 15
   998                           ;LCD.c: 195:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   999  000C8A  0E14               	movlw	20
  1000  000C8C  6E05               	movwf	??_LCD_INIT^0,c
  1001  000C8E  0E7A               	movlw	122
  1002  000C90                     u947:
  1003  000C90  2EE8               	decfsz	wreg,f,c
  1004  000C92  D7FE               	bra	u947
  1005  000C94  2E05               	decfsz	??_LCD_INIT^0,f,c
  1006  000C96  D7FC               	bra	u947
  1007  000C98                     
  1008                           ;LCD.c: 196:     LCD_CONFIG();
  1009  000C98  EC64  F005         	call	_LCD_CONFIG	;wreg free
  1010  000C9C                     
  1011                           ;LCD.c: 197:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1012  000C9C  0E14               	movlw	20
  1013  000C9E  6E05               	movwf	??_LCD_INIT^0,c
  1014  000CA0  0E7A               	movlw	122
  1015  000CA2                     u957:
  1016  000CA2  2EE8               	decfsz	wreg,f,c
  1017  000CA4  D7FE               	bra	u957
  1018  000CA6  2E05               	decfsz	??_LCD_INIT^0,f,c
  1019  000CA8  D7FC               	bra	u957
  1020  000CAA                     
  1021                           ;LCD.c: 198:     BORRAR_LCD();
  1022  000CAA  ECC8  F006         	call	_BORRAR_LCD	;wreg free
  1023  000CAE                     
  1024                           ;LCD.c: 199:     CURSOR_HOME();
  1025  000CAE  ECC4  F006         	call	_CURSOR_HOME	;wreg free
  1026  000CB2                     
  1027                           ;LCD.c: 200:     CURSOR_ONOFF(1);
  1028  000CB2  0E01               	movlw	1
  1029  000CB4  EC91  F006         	call	_CURSOR_ONOFF
  1030  000CB8  0012               	return		;funcret
  1031  000CBA                     __end_of_LCD_INIT:
  1032                           	callstack 0
  1033                           
  1034 ;; *************** function _LCD_CONFIG *****************
  1035 ;; Defined at:
  1036 ;;		line 109 in file "LCD.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:        1 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 2
  1057 ;; This function calls:
  1058 ;;		_ENVIA_LCD_CMD
  1059 ;;		_ENVIA_NIBBLE
  1060 ;; This function is called by:
  1061 ;;		_LCD_INIT
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text9
  1066  000AC8                     __ptext9:
  1067                           	callstack 0
  1068  000AC8                     _LCD_CONFIG:
  1069                           	callstack 26
  1070  000AC8                     
  1071                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
  1072  000AC8  908C               	bcf	140,0,c	;volatile
  1073                           
  1074                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
  1075  000ACA  928C               	bcf	140,1,c	;volatile
  1076  000ACC                     
  1077                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
  1078  000ACC  0E30               	movlw	48
  1079  000ACE  ECA9  F006         	call	_ENVIA_NIBBLE
  1080  000AD2                     
  1081                           ;LCD.c: 114:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1082  000AD2  0E03               	movlw	3
  1083  000AD4  6E04               	movwf	??_LCD_CONFIG^0,c
  1084  000AD6  0E98               	movlw	152
  1085  000AD8                     u967:
  1086  000AD8  2EE8               	decfsz	wreg,f,c
  1087  000ADA  D7FE               	bra	u967
  1088  000ADC  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1089  000ADE  D7FC               	bra	u967
  1090  000AE0                     
  1091                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
  1092  000AE0  0E30               	movlw	48
  1093  000AE2  ECA9  F006         	call	_ENVIA_NIBBLE
  1094                           
  1095                           ;LCD.c: 116:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1096  000AE6  0E21               	movlw	33
  1097  000AE8                     u977:
  1098  000AE8  2EE8               	decfsz	wreg,f,c
  1099  000AEA  D7FE               	bra	u977
  1100  000AEC  F000               	nop	
  1101  000AEE                     
  1102                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
  1103  000AEE  0E30               	movlw	48
  1104  000AF0  ECA9  F006         	call	_ENVIA_NIBBLE
  1105  000AF4                     
  1106                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
  1107  000AF4  0E20               	movlw	32
  1108  000AF6  ECA9  F006         	call	_ENVIA_NIBBLE
  1109  000AFA                     
  1110                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
  1111  000AFA  0E01               	movlw	1
  1112  000AFC  EC5D  F006         	call	_ENVIA_LCD_CMD
  1113  000B00                     
  1114                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
  1115  000B00  0E28               	movlw	40
  1116  000B02  EC5D  F006         	call	_ENVIA_LCD_CMD
  1117  000B06                     
  1118                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
  1119  000B06  0E0F               	movlw	15
  1120  000B08  EC5D  F006         	call	_ENVIA_LCD_CMD
  1121  000B0C                     
  1122                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
  1123  000B0C  0E06               	movlw	6
  1124  000B0E  EC5D  F006         	call	_ENVIA_LCD_CMD
  1125  000B12                     
  1126                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1127  000B12  0E01               	movlw	1
  1128  000B14  EC5D  F006         	call	_ENVIA_LCD_CMD
  1129  000B18  0012               	return		;funcret
  1130  000B1A                     __end_of_LCD_CONFIG:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _CURSOR_ONOFF *****************
  1134 ;; Defined at:
  1135 ;;		line 62 in file "LCD.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  estado          1    wreg     unsigned char 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  estado          1    3[COMRAM] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         0       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1152 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 2
  1156 ;; This function calls:
  1157 ;;		_ENVIA_LCD_CMD
  1158 ;; This function is called by:
  1159 ;;		_LCD_INIT
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text10
  1164  000D22                     __ptext10:
  1165                           	callstack 0
  1166  000D22                     _CURSOR_ONOFF:
  1167                           	callstack 26
  1168                           
  1169                           ;incstack = 0
  1170                           ;CURSOR_ONOFF@estado stored from wreg
  1171  000D22  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1172  000D24                     
  1173                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1174  000D24  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1175  000D26  A4D8               	btfss	status,2,c
  1176  000D28  EF98  F006         	goto	u21
  1177  000D2C  EF9A  F006         	goto	u20
  1178  000D30                     u21:
  1179  000D30  EF9D  F006         	goto	l1019
  1180  000D34                     u20:
  1181  000D34  0E0E               	movlw	14
  1182  000D36  EC5D  F006         	call	_ENVIA_LCD_CMD
  1183  000D3A                     l1019:
  1184                           
  1185                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1186  000D3A  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1187  000D3C  A4D8               	btfss	status,2,c
  1188  000D3E  EFA3  F006         	goto	u31
  1189  000D42  EFA5  F006         	goto	u30
  1190  000D46                     u31:
  1191  000D46  EFA8  F006         	goto	l62
  1192  000D4A                     u30:
  1193  000D4A  0E0C               	movlw	12
  1194  000D4C  EC5D  F006         	call	_ENVIA_LCD_CMD
  1195  000D50                     l62:
  1196  000D50  0012               	return		;funcret
  1197  000D52                     __end_of_CURSOR_ONOFF:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _CURSOR_HOME *****************
  1201 ;; Defined at:
  1202 ;;		line 37 in file "LCD.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 2
  1223 ;; This function calls:
  1224 ;;		_ENVIA_LCD_CMD
  1225 ;; This function is called by:
  1226 ;;		_LCD_INIT
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text11
  1231  000D88                     __ptext11:
  1232                           	callstack 0
  1233  000D88                     _CURSOR_HOME:
  1234                           	callstack 26
  1235  000D88                     
  1236                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1237  000D88  0E02               	movlw	2
  1238  000D8A  EC5D  F006         	call	_ENVIA_LCD_CMD
  1239  000D8E  0012               	return		;funcret
  1240  000D90                     __end_of_CURSOR_HOME:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _BORRAR_LCD *****************
  1244 ;; Defined at:
  1245 ;;		line 104 in file "LCD.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 2
  1266 ;; This function calls:
  1267 ;;		_ENVIA_LCD_CMD
  1268 ;; This function is called by:
  1269 ;;		_LCD_INIT
  1270 ;;		_splash_msg
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text12
  1275  000D90                     __ptext12:
  1276                           	callstack 0
  1277  000D90                     _BORRAR_LCD:
  1278                           	callstack 27
  1279  000D90                     
  1280                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1281  000D90  0E01               	movlw	1
  1282  000D92  EC5D  F006         	call	_ENVIA_LCD_CMD
  1283  000D96  0012               	return		;funcret
  1284  000D98                     __end_of_BORRAR_LCD:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _ENVIA_LCD_CMD *****************
  1288 ;; Defined at:
  1289 ;;		line 136 in file "LCD.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  dato            1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  dato            1    1[COMRAM] unsigned char 
  1294 ;;  aux             1    2[COMRAM] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0
  1305 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1307 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 1
  1311 ;; This function calls:
  1312 ;;		_ENVIA_NIBBLE
  1313 ;;		_LEER_LCD
  1314 ;; This function is called by:
  1315 ;;		_POS_CURSOR
  1316 ;;		_CURSOR_HOME
  1317 ;;		_CURSOR_ONOFF
  1318 ;;		_BORRAR_LCD
  1319 ;;		_LCD_CONFIG
  1320 ;;		_BLINK_CURSOR
  1321 ;;		_DISPLAY_ONOFF
  1322 ;;		_CURSOR_SHIFTLEFT
  1323 ;;		_CURSOR_SHIFTRIGHT
  1324 ;;		_DISPLAY_SHIFTLEFT
  1325 ;;		_DISPLAY_SHIFTRIGHT
  1326 ;;		_GENERACARACTER
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text13
  1331  000CBA                     __ptext13:
  1332                           	callstack 0
  1333  000CBA                     _ENVIA_LCD_CMD:
  1334                           	callstack 27
  1335                           
  1336                           ;incstack = 0
  1337                           ;ENVIA_LCD_CMD@dato stored from wreg
  1338  000CBA  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1339  000CBC                     
  1340                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1341  000CBC  908C               	bcf	140,0,c	;volatile
  1342  000CBE                     
  1343                           ;LCD.c: 140:  LEER_LCD();
  1344  000CBE  EC9B  F004         	call	_LEER_LCD	;wreg free
  1345  000CC2                     
  1346                           ;LCD.c: 141:  TRISD = 0b00000000;
  1347  000CC2  0E00               	movlw	0
  1348  000CC4  6E95               	movwf	149,c	;volatile
  1349  000CC6                     
  1350                           ;LCD.c: 142:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1351  000CC6  0E21               	movlw	33
  1352  000CC8                     u987:
  1353  000CC8  2EE8               	decfsz	wreg,f,c
  1354  000CCA  D7FE               	bra	u987
  1355  000CCC  F000               	nop	
  1356  000CCE                     
  1357                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1358  000CCE  928C               	bcf	140,1,c	;volatile
  1359  000CD0                     
  1360                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1361  000CD0  948C               	bcf	140,2,c	;volatile
  1362  000CD2                     
  1363                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1364  000CD2  908C               	bcf	140,0,c	;volatile
  1365  000CD4                     
  1366                           ;LCD.c: 146:  aux = dato & 0xF0;
  1367  000CD4  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1368  000CD6  0BF0               	andlw	240
  1369  000CD8  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1370  000CDA                     
  1371                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1372  000CDA  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1373  000CDC  ECA9  F006         	call	_ENVIA_NIBBLE
  1374  000CE0                     
  1375                           ;LCD.c: 148:  aux = dato<<4;
  1376  000CE0  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1377  000CE2  0BF0               	andlw	240
  1378  000CE4  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1379  000CE6                     
  1380                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1381  000CE6  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1382  000CE8  ECA9  F006         	call	_ENVIA_NIBBLE
  1383  000CEC  0012               	return		;funcret
  1384  000CEE                     __end_of_ENVIA_LCD_CMD:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _PCF8574_WR *****************
  1388 ;; Defined at:
  1389 ;;		line 10 in file "PCF8574.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  direccion       1    wreg     unsigned char 
  1392 ;;  dato            1    1[COMRAM] unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  direccion       1    2[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         1       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text14
  1418  000A10                     __ptext14:
  1419                           	callstack 0
  1420  000A10                     _PCF8574_WR:
  1421                           	callstack 30
  1422                           
  1423                           ;incstack = 0
  1424                           ;PCF8574_WR@direccion stored from wreg
  1425  000A10  6E03               	movwf	PCF8574_WR@direccion^0,c
  1426  000A12                     
  1427                           ;PCF8574.c: 11:     SSP1CON2bits.SEN = 1;
  1428  000A12  80C5               	bsf	197,0,c	;volatile
  1429  000A14                     l161:
  1430  000A14  B0C5               	btfsc	197,0,c	;volatile
  1431  000A16  EF0F  F005         	goto	u701
  1432  000A1A  EF11  F005         	goto	u700
  1433  000A1E                     u701:
  1434  000A1E  EF0A  F005         	goto	l161
  1435  000A22                     u700:
  1436  000A22                     
  1437                           ;PCF8574.c: 13:     SSP1BUF = direccion;
  1438  000A22  C003  FFC9         	movff	PCF8574_WR@direccion,4041	;volatile
  1439  000A26                     l164:
  1440  000A26  B0C7               	btfsc	199,0,c	;volatile
  1441  000A28  EF18  F005         	goto	u711
  1442  000A2C  EF1A  F005         	goto	u710
  1443  000A30                     u711:
  1444  000A30  EF13  F005         	goto	l164
  1445  000A34                     u710:
  1446  000A34                     l167:
  1447  000A34  B4C7               	btfsc	199,2,c	;volatile
  1448  000A36  EF1F  F005         	goto	u721
  1449  000A3A  EF21  F005         	goto	u720
  1450  000A3E                     u721:
  1451  000A3E  EF1A  F005         	goto	l167
  1452  000A42                     u720:
  1453  000A42                     
  1454                           ;PCF8574.c: 16:     SSP1BUF = dato;
  1455  000A42  C002  FFC9         	movff	PCF8574_WR@dato,4041	;volatile
  1456  000A46                     l170:
  1457  000A46  B0C7               	btfsc	199,0,c	;volatile
  1458  000A48  EF28  F005         	goto	u731
  1459  000A4C  EF2A  F005         	goto	u730
  1460  000A50                     u731:
  1461  000A50  EF23  F005         	goto	l170
  1462  000A54                     u730:
  1463  000A54                     l173:
  1464  000A54  B4C7               	btfsc	199,2,c	;volatile
  1465  000A56  EF2F  F005         	goto	u741
  1466  000A5A  EF31  F005         	goto	u740
  1467  000A5E                     u741:
  1468  000A5E  EF2A  F005         	goto	l173
  1469  000A62                     u740:
  1470  000A62                     
  1471                           ;PCF8574.c: 19:     SSP1CON2bits.PEN = 1;
  1472  000A62  84C5               	bsf	197,2,c	;volatile
  1473  000A64                     l176:
  1474  000A64  B4C5               	btfsc	197,2,c	;volatile
  1475  000A66  EF37  F005         	goto	u751
  1476  000A6A  EF39  F005         	goto	u750
  1477  000A6E                     u751:
  1478  000A6E  EF32  F005         	goto	l176
  1479  000A72                     u750:
  1480  000A72  0012               	return		;funcret
  1481  000A74                     __end_of_PCF8574_WR:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _PCF8574_RD *****************
  1485 ;; Defined at:
  1486 ;;		line 39 in file "PCF8574.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  direccion       1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  direccion       1    0[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text15
  1514  0009A8                     __ptext15:
  1515                           	callstack 0
  1516  0009A8                     _PCF8574_RD:
  1517                           	callstack 30
  1518                           
  1519                           ;incstack = 0
  1520                           ;PCF8574_RD@direccion stored from wreg
  1521  0009A8  6E01               	movwf	PCF8574_RD@direccion^0,c
  1522  0009AA                     
  1523                           ;PCF8574.c: 40:     SSP1CON2bits.SEN = 1;
  1524  0009AA  80C5               	bsf	197,0,c	;volatile
  1525  0009AC                     l209:
  1526  0009AC  B0C5               	btfsc	197,0,c	;volatile
  1527  0009AE  EFDB  F004         	goto	u271
  1528  0009B2  EFDD  F004         	goto	u270
  1529  0009B6                     u271:
  1530  0009B6  EFD6  F004         	goto	l209
  1531  0009BA                     u270:
  1532  0009BA                     
  1533                           ;PCF8574.c: 42:     SSP1BUF = direccion;
  1534  0009BA  C001  FFC9         	movff	PCF8574_RD@direccion,4041	;volatile
  1535  0009BE                     l212:
  1536  0009BE  B0C7               	btfsc	199,0,c	;volatile
  1537  0009C0  EFE4  F004         	goto	u281
  1538  0009C4  EFE6  F004         	goto	u280
  1539  0009C8                     u281:
  1540  0009C8  EFDF  F004         	goto	l212
  1541  0009CC                     u280:
  1542  0009CC                     l215:
  1543  0009CC  B4C7               	btfsc	199,2,c	;volatile
  1544  0009CE  EFEB  F004         	goto	u291
  1545  0009D2  EFED  F004         	goto	u290
  1546  0009D6                     u291:
  1547  0009D6  EFE6  F004         	goto	l215
  1548  0009DA                     u290:
  1549  0009DA                     
  1550                           ;PCF8574.c: 45:     SSP1CON2bits.RCEN = 1;
  1551  0009DA  86C5               	bsf	197,3,c	;volatile
  1552  0009DC                     l218:
  1553  0009DC  A0C7               	btfss	199,0,c	;volatile
  1554  0009DE  EFF3  F004         	goto	u301
  1555  0009E2  EFF5  F004         	goto	u300
  1556  0009E6                     u301:
  1557  0009E6  EFEE  F004         	goto	l218
  1558  0009EA                     u300:
  1559  0009EA                     
  1560                           ;PCF8574.c: 47:     SSP1CON2bits.ACKDT = 1;
  1561  0009EA  8AC5               	bsf	197,5,c	;volatile
  1562                           
  1563                           ;PCF8574.c: 48:     SSP1CON2bits.ACKEN = 1;
  1564  0009EC  88C5               	bsf	197,4,c	;volatile
  1565  0009EE                     l221:
  1566  0009EE  B8C5               	btfsc	197,4,c	;volatile
  1567  0009F0  EFFC  F004         	goto	u311
  1568  0009F4  EFFE  F004         	goto	u310
  1569  0009F8                     u311:
  1570  0009F8  EFF7  F004         	goto	l221
  1571  0009FC                     u310:
  1572  0009FC                     
  1573                           ;PCF8574.c: 50:     SSP1CON2bits.PEN = 1;
  1574  0009FC  84C5               	bsf	197,2,c	;volatile
  1575  0009FE                     l224:
  1576  0009FE  B4C5               	btfsc	197,2,c	;volatile
  1577  000A00  EF04  F005         	goto	u321
  1578  000A04  EF06  F005         	goto	u320
  1579  000A08                     u321:
  1580  000A08  EFFF  F004         	goto	l224
  1581  000A0C                     u320:
  1582  000A0C                     
  1583                           ;PCF8574.c: 52:     return SSP1BUF;
  1584  000A0C  50C9               	movf	201,w,c	;volatile
  1585  000A0E  0012               	return		;funcret
  1586  000A10                     __end_of_PCF8574_RD:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _LCD_VARCHAR_BITS *****************
  1590 ;; Defined at:
  1591 ;;		line 311 in file "LCD.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  dato            1    wreg     unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  dato            1    5[COMRAM] unsigned char 
  1596 ;;  x_var           1    6[COMRAM] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0
  1607 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1608 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1609 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1610 ;;Total ram usage:        4 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 2
  1613 ;; This function calls:
  1614 ;;		_ENVIA_CHAR
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text16
  1621  000B1A                     __ptext16:
  1622                           	callstack 0
  1623  000B1A                     _LCD_VARCHAR_BITS:
  1624                           	callstack 28
  1625                           
  1626                           ;incstack = 0
  1627                           ;LCD_VARCHAR_BITS@dato stored from wreg
  1628  000B1A  6E06               	movwf	LCD_VARCHAR_BITS@dato^0,c
  1629  000B1C                     
  1630                           ;LCD.c: 312:     unsigned char x_var;;LCD.c: 313:     for(x_var=0;x_var<8;x_var++){
  1631  000B1C  0E00               	movlw	0
  1632  000B1E  6E07               	movwf	LCD_VARCHAR_BITS@x_var^0,c
  1633  000B20                     l1135:
  1634                           
  1635                           ;LCD.c: 314:         if (((dato >> (7 - x_var)) & 0x01) == 1){
  1636  000B20  5007               	movf	LCD_VARCHAR_BITS@x_var^0,w,c
  1637  000B22  0807               	sublw	7
  1638  000B24  6E04               	movwf	??_LCD_VARCHAR_BITS^0,c
  1639  000B26  C006  F005         	movff	LCD_VARCHAR_BITS@dato,??_LCD_VARCHAR_BITS+1
  1640  000B2A  2A04               	incf	??_LCD_VARCHAR_BITS^0,f,c
  1641  000B2C  EF9A  F005         	goto	u184
  1642  000B30                     u185:
  1643  000B30  90D8               	bcf	status,0,c
  1644  000B32  3205               	rrcf	(??_LCD_VARCHAR_BITS+1)^0,f,c
  1645  000B34                     u184:
  1646  000B34  2E04               	decfsz	??_LCD_VARCHAR_BITS^0,f,c
  1647  000B36  EF98  F005         	goto	u185
  1648  000B3A  A005               	btfss	(??_LCD_VARCHAR_BITS+1)^0,0,c
  1649  000B3C  EFA2  F005         	goto	u191
  1650  000B40  EFA4  F005         	goto	u190
  1651  000B44                     u191:
  1652  000B44  EFA9  F005         	goto	l1139
  1653  000B48                     u190:
  1654  000B48                     
  1655                           ;LCD.c: 315:             ENVIA_CHAR('1');
  1656  000B48  0E31               	movlw	49
  1657  000B4A  EC77  F006         	call	_ENVIA_CHAR
  1658                           
  1659                           ;LCD.c: 316:         }
  1660  000B4E  EFAC  F005         	goto	l1141
  1661  000B52                     l1139:
  1662                           
  1663                           ;LCD.c: 318:             ENVIA_CHAR('0');
  1664  000B52  0E30               	movlw	48
  1665  000B54  EC77  F006         	call	_ENVIA_CHAR
  1666  000B58                     l1141:
  1667                           
  1668                           ;LCD.c: 320:     }
  1669  000B58  2A07               	incf	LCD_VARCHAR_BITS@x_var^0,f,c
  1670  000B5A  0E07               	movlw	7
  1671  000B5C  6407               	cpfsgt	LCD_VARCHAR_BITS@x_var^0,c
  1672  000B5E  EFB3  F005         	goto	u201
  1673  000B62  EFB5  F005         	goto	u200
  1674  000B66                     u201:
  1675  000B66  EF90  F005         	goto	l1135
  1676  000B6A                     u200:
  1677  000B6A  0012               	return		;funcret
  1678  000B6C                     __end_of_LCD_VARCHAR_BITS:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _ENVIA_CHAR *****************
  1682 ;; Defined at:
  1683 ;;		line 88 in file "LCD.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  dato            1    wreg     unsigned char 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  dato            1    1[COMRAM] unsigned char 
  1688 ;;  aux             1    2[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0
  1699 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1701 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:        2 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 1
  1705 ;; This function calls:
  1706 ;;		_ENVIA_NIBBLE
  1707 ;;		_LEER_LCD
  1708 ;; This function is called by:
  1709 ;;		_ESCRIBE_MENSAJE2
  1710 ;;		_LCD_VARCHAR_BITS
  1711 ;;		_ESCRIBE_MENSAJE
  1712 ;;		_GENERACARACTER
  1713 ;;		_LCD_ESCRIBE_VAR_CHAR
  1714 ;;		_LCD_ESCRIBE_VAR_INT
  1715 ;;		_LCD_CHAR_GRADO
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text17
  1720  000CEE                     __ptext17:
  1721                           	callstack 0
  1722  000CEE                     _ENVIA_CHAR:
  1723                           	callstack 27
  1724                           
  1725                           ;incstack = 0
  1726                           ;ENVIA_CHAR@dato stored from wreg
  1727  000CEE  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1728  000CF0                     
  1729                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  1730  000CF0  808C               	bsf	140,0,c	;volatile
  1731  000CF2                     
  1732                           ;LCD.c: 92:  LEER_LCD();
  1733  000CF2  EC9B  F004         	call	_LEER_LCD	;wreg free
  1734  000CF6                     
  1735                           ;LCD.c: 93:  TRISD = 0x00;
  1736  000CF6  0E00               	movlw	0
  1737  000CF8  6E95               	movwf	149,c	;volatile
  1738  000CFA                     
  1739                           ;LCD.c: 94:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1740  000CFA  0E21               	movlw	33
  1741  000CFC                     u997:
  1742  000CFC  2EE8               	decfsz	wreg,f,c
  1743  000CFE  D7FE               	bra	u997
  1744  000D00  F000               	nop	
  1745  000D02                     
  1746                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  1747  000D02  928C               	bcf	140,1,c	;volatile
  1748  000D04                     
  1749                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  1750  000D04  948C               	bcf	140,2,c	;volatile
  1751  000D06                     
  1752                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  1753  000D06  808C               	bsf	140,0,c	;volatile
  1754  000D08                     
  1755                           ;LCD.c: 98:  aux = dato & 0xF0;
  1756  000D08  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1757  000D0A  0BF0               	andlw	240
  1758  000D0C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1759  000D0E                     
  1760                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  1761  000D0E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1762  000D10  ECA9  F006         	call	_ENVIA_NIBBLE
  1763  000D14                     
  1764                           ;LCD.c: 100:  aux = dato << 4;
  1765  000D14  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1766  000D16  0BF0               	andlw	240
  1767  000D18  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1768  000D1A                     
  1769                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  1770  000D1A  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1771  000D1C  ECA9  F006         	call	_ENVIA_NIBBLE
  1772  000D20  0012               	return		;funcret
  1773  000D22                     __end_of_ENVIA_CHAR:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _LEER_LCD *****************
  1777 ;; Defined at:
  1778 ;;		line 152 in file "LCD.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  aux             1    0[COMRAM] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_ENVIA_CHAR
  1802 ;;		_ENVIA_LCD_CMD
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text18
  1807  000936                     __ptext18:
  1808                           	callstack 0
  1809  000936                     _LEER_LCD:
  1810                           	callstack 27
  1811  000936                     
  1812                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  1813  000936  0EF8               	movlw	248
  1814  000938  6E95               	movwf	149,c	;volatile
  1815  00093A                     
  1816                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  1817  00093A  908C               	bcf	140,0,c	;volatile
  1818  00093C                     
  1819                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  1820  00093C  828C               	bsf	140,1,c	;volatile
  1821  00093E                     
  1822                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  1823  00093E  848C               	bsf	140,2,c	;volatile
  1824  000940                     
  1825                           ;LCD.c: 159:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1826  000940  0E21               	movlw	33
  1827  000942                     u1007:
  1828  000942  2EE8               	decfsz	wreg,f,c
  1829  000944  D7FE               	bra	u1007
  1830  000946  F000               	nop	
  1831  000948                     
  1832                           ;LCD.c: 160:  aux = PORTD;
  1833  000948  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1834  00094C                     
  1835                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  1836  00094C  948C               	bcf	140,2,c	;volatile
  1837  00094E                     
  1838                           ;LCD.c: 162:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1839  00094E  0E21               	movlw	33
  1840  000950                     u1017:
  1841  000950  2EE8               	decfsz	wreg,f,c
  1842  000952  D7FE               	bra	u1017
  1843  000954  F000               	nop	
  1844  000956                     
  1845                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  1846  000956  848C               	bsf	140,2,c	;volatile
  1847  000958                     
  1848                           ;LCD.c: 164:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1849  000958  0E21               	movlw	33
  1850  00095A                     u1027:
  1851  00095A  2EE8               	decfsz	wreg,f,c
  1852  00095C  D7FE               	bra	u1027
  1853  00095E  F000               	nop	
  1854  000960                     
  1855                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  1856  000960  948C               	bcf	140,2,c	;volatile
  1857  000962                     l967:
  1858                           
  1859                           ;LCD.c: 166:  aux = aux & 0x80;
  1860  000962  5001               	movf	LEER_LCD@aux^0,w,c
  1861  000964  0B80               	andlw	128
  1862  000966  6E01               	movwf	LEER_LCD@aux^0,c
  1863                           
  1864                           ;LCD.c: 167:  while(aux == 0x80)
  1865  000968  EFCA  F004         	goto	l981
  1866  00096C                     l93:
  1867                           
  1868                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  1869  00096C  848C               	bsf	140,2,c	;volatile
  1870  00096E                     
  1871                           ;LCD.c: 170:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1872  00096E  0E21               	movlw	33
  1873  000970                     u1037:
  1874  000970  2EE8               	decfsz	wreg,f,c
  1875  000972  D7FE               	bra	u1037
  1876  000974  F000               	nop	
  1877  000976                     
  1878                           ;LCD.c: 171:             aux = PORTD;
  1879  000976  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1880  00097A                     
  1881                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  1882  00097A  948C               	bcf	140,2,c	;volatile
  1883                           
  1884                           ;LCD.c: 173:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1885  00097C  0E21               	movlw	33
  1886  00097E                     u1047:
  1887  00097E  2EE8               	decfsz	wreg,f,c
  1888  000980  D7FE               	bra	u1047
  1889  000982  F000               	nop	
  1890  000984                     
  1891                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  1892  000984  848C               	bsf	140,2,c	;volatile
  1893                           
  1894                           ;LCD.c: 175:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1895  000986  0E21               	movlw	33
  1896  000988                     u1057:
  1897  000988  2EE8               	decfsz	wreg,f,c
  1898  00098A  D7FE               	bra	u1057
  1899  00098C  F000               	nop	
  1900  00098E                     
  1901                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  1902  00098E  948C               	bcf	140,2,c	;volatile
  1903  000990  EFB1  F004         	goto	l967
  1904  000994                     l981:
  1905                           
  1906                           ;LCD.c: 167:  while(aux == 0x80)
  1907  000994  0E80               	movlw	128
  1908  000996  1801               	xorwf	LEER_LCD@aux^0,w,c
  1909  000998  B4D8               	btfsc	status,2,c
  1910  00099A  EFD1  F004         	goto	u11
  1911  00099E  EFD3  F004         	goto	u10
  1912  0009A2                     u11:
  1913  0009A2  EFB6  F004         	goto	l93
  1914  0009A6                     u10:
  1915  0009A6  0012               	return		;funcret
  1916  0009A8                     __end_of_LEER_LCD:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _ENVIA_NIBBLE *****************
  1920 ;; Defined at:
  1921 ;;		line 126 in file "LCD.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  dato            1    wreg     unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  dato            1    0[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1938 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        1 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_ENVIA_CHAR
  1945 ;;		_LCD_CONFIG
  1946 ;;		_ENVIA_LCD_CMD
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text19
  1951  000D52                     __ptext19:
  1952                           	callstack 0
  1953  000D52                     _ENVIA_NIBBLE:
  1954                           	callstack 27
  1955                           
  1956                           ;incstack = 0
  1957                           ;ENVIA_NIBBLE@dato stored from wreg
  1958  000D52  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1959  000D54                     
  1960                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  1961  000D54  0E0F               	movlw	15
  1962  000D56  168C               	andwf	140,f,c	;volatile
  1963                           
  1964                           ;LCD.c: 129:  dato &= 0xF0;
  1965  000D58  0EF0               	movlw	240
  1966  000D5A  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1967                           
  1968                           ;LCD.c: 130:  LATD|= dato;
  1969  000D5C  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1970  000D5E  128C               	iorwf	140,f,c	;volatile
  1971  000D60                     
  1972                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  1973  000D60  848C               	bsf	140,2,c	;volatile
  1974  000D62                     
  1975                           ;LCD.c: 132:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1976  000D62  0E21               	movlw	33
  1977  000D64                     u1067:
  1978  000D64  2EE8               	decfsz	wreg,f,c
  1979  000D66  D7FE               	bra	u1067
  1980  000D68  F000               	nop	
  1981  000D6A                     
  1982                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  1983  000D6A  948C               	bcf	140,2,c	;volatile
  1984  000D6C  0012               	return		;funcret
  1985  000D6E                     __end_of_ENVIA_NIBBLE:
  1986                           	callstack 0
  1987                           
  1988                           	psect	rparam
  1989  0000                     
  1990                           	psect	idloc
  1991                           
  1992                           ;Config register IDLOC0 @ 0x200000
  1993                           ;	unspecified, using default values
  1994  200000                     	org	2097152
  1995  200000  FF                 	db	255
  1996                           
  1997                           ;Config register IDLOC1 @ 0x200001
  1998                           ;	unspecified, using default values
  1999  200001                     	org	2097153
  2000  200001  FF                 	db	255
  2001                           
  2002                           ;Config register IDLOC2 @ 0x200002
  2003                           ;	unspecified, using default values
  2004  200002                     	org	2097154
  2005  200002  FF                 	db	255
  2006                           
  2007                           ;Config register IDLOC3 @ 0x200003
  2008                           ;	unspecified, using default values
  2009  200003                     	org	2097155
  2010  200003  FF                 	db	255
  2011                           
  2012                           ;Config register IDLOC4 @ 0x200004
  2013                           ;	unspecified, using default values
  2014  200004                     	org	2097156
  2015  200004  FF                 	db	255
  2016                           
  2017                           ;Config register IDLOC5 @ 0x200005
  2018                           ;	unspecified, using default values
  2019  200005                     	org	2097157
  2020  200005  FF                 	db	255
  2021                           
  2022                           ;Config register IDLOC6 @ 0x200006
  2023                           ;	unspecified, using default values
  2024  200006                     	org	2097158
  2025  200006  FF                 	db	255
  2026                           
  2027                           ;Config register IDLOC7 @ 0x200007
  2028                           ;	unspecified, using default values
  2029  200007                     	org	2097159
  2030  200007  FF                 	db	255
  2031                           
  2032                           	psect	config
  2033                           
  2034                           ;Config register CONFIG1L @ 0x300000
  2035                           ;	PLL Selection
  2036                           ;	PLLSEL = PLL4X, 4x clock multiplier
  2037                           ;	PLL Enable Configuration bit
  2038                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  2039                           ;	CPU System Clock Postscaler
  2040                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2041                           ;	Low Speed USB mode with 48 MHz system clock
  2042                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  2043  300000                     	org	3145728
  2044  300000  00                 	db	0
  2045                           
  2046                           ;Config register CONFIG1H @ 0x300001
  2047                           ;	Oscillator Selection
  2048                           ;	FOSC = INTOSCIO, Internal oscillator
  2049                           ;	Primary Oscillator Shutdown
  2050                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2051                           ;	Fail-Safe Clock Monitor
  2052                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2053                           ;	Internal/External Oscillator Switchover
  2054                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2055  300001                     	org	3145729
  2056  300001  08                 	db	8
  2057                           
  2058                           ;Config register CONFIG2L @ 0x300002
  2059                           ;	Power-up Timer Enable
  2060                           ;	nPWRTEN = ON, Power up timer enabled
  2061                           ;	Brown-out Reset Enable
  2062                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  2063                           ;	Brown-out Reset Voltage
  2064                           ;	BORV = 190, BOR set to 1.9V nominal
  2065                           ;	Low-Power Brown-out Reset
  2066                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2067  300002                     	org	3145730
  2068  300002  58                 	db	88
  2069                           
  2070                           ;Config register CONFIG2H @ 0x300003
  2071                           ;	Watchdog Timer Enable bits
  2072                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2073                           ;	Watchdog Timer Postscaler
  2074                           ;	WDTPS = 32768, 1:32768
  2075  300003                     	org	3145731
  2076  300003  3C                 	db	60
  2077                           
  2078                           ; Padding undefined space
  2079  300004                     	org	3145732
  2080  300004  FF                 	db	255
  2081                           
  2082                           ;Config register CONFIG3H @ 0x300005
  2083                           ;	CCP2 MUX bit
  2084                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2085                           ;	PORTB A/D Enable bit
  2086                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2087                           ;	Timer3 Clock Input MUX bit
  2088                           ;	T3CMX = RC0, T3CKI function is on RC0
  2089                           ;	SDO Output MUX bit
  2090                           ;	SDOMX = RB3, SDO function is on RB3
  2091                           ;	Master Clear Reset Pin Enable
  2092                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2093  300005                     	org	3145733
  2094  300005  D1                 	db	209
  2095                           
  2096                           ;Config register CONFIG4L @ 0x300006
  2097                           ;	Stack Full/Underflow Reset
  2098                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2099                           ;	Single-Supply ICSP Enable bit
  2100                           ;	LVP = OFF, Single-Supply ICSP disabled
  2101                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2102                           ;	ICPRT = OFF, ICPORT disabled
  2103                           ;	Extended Instruction Set Enable bit
  2104                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2105                           ;	Background Debugger Enable bit
  2106                           ;	DEBUG = 0x1, unprogrammed default
  2107  300006                     	org	3145734
  2108  300006  81                 	db	129
  2109                           
  2110                           ; Padding undefined space
  2111  300007                     	org	3145735
  2112  300007  FF                 	db	255
  2113                           
  2114                           ;Config register CONFIG5L @ 0x300008
  2115                           ;	Block 0 Code Protect
  2116                           ;	CP0 = OFF, Block 0 is not code-protected
  2117                           ;	Block 1 Code Protect
  2118                           ;	CP1 = OFF, Block 1 is not code-protected
  2119                           ;	Block 2 Code Protect
  2120                           ;	CP2 = OFF, Block 2 is not code-protected
  2121                           ;	Block 3 Code Protect
  2122                           ;	CP3 = OFF, Block 3 is not code-protected
  2123  300008                     	org	3145736
  2124  300008  0F                 	db	15
  2125                           
  2126                           ;Config register CONFIG5H @ 0x300009
  2127                           ;	Boot Block Code Protect
  2128                           ;	CPB = OFF, Boot block is not code-protected
  2129                           ;	Data EEPROM Code Protect
  2130                           ;	CPD = OFF, Data EEPROM is not code-protected
  2131  300009                     	org	3145737
  2132  300009  C0                 	db	192
  2133                           
  2134                           ;Config register CONFIG6L @ 0x30000A
  2135                           ;	Block 0 Write Protect
  2136                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2137                           ;	Block 1 Write Protect
  2138                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2139                           ;	Block 2 Write Protect
  2140                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2141                           ;	Block 3 Write Protect
  2142                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2143  30000A                     	org	3145738
  2144  30000A  0F                 	db	15
  2145                           
  2146                           ;Config register CONFIG6H @ 0x30000B
  2147                           ;	Configuration Registers Write Protect
  2148                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2149                           ;	Boot Block Write Protect
  2150                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2151                           ;	Data EEPROM Write Protect
  2152                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2153  30000B                     	org	3145739
  2154  30000B  E0                 	db	224
  2155                           
  2156                           ;Config register CONFIG7L @ 0x30000C
  2157                           ;	Block 0 Table Read Protect
  2158                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2159                           ;	Block 1 Table Read Protect
  2160                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2161                           ;	Block 2 Table Read Protect
  2162                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2163                           ;	Block 3 Table Read Protect
  2164                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2165  30000C                     	org	3145740
  2166  30000C  0F                 	db	15
  2167                           
  2168                           ;Config register CONFIG7H @ 0x30000D
  2169                           ;	Boot Block Table Read Protect
  2170                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2171  30000D                     	org	3145741
  2172  30000D  40                 	db	64
  2173                           tosu	equ	0xFFF
  2174                           tosh	equ	0xFFE
  2175                           tosl	equ	0xFFD
  2176                           stkptr	equ	0xFFC
  2177                           pclatu	equ	0xFFB
  2178                           pclath	equ	0xFFA
  2179                           pcl	equ	0xFF9
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           indf0	equ	0xFEF
  2187                           postinc0	equ	0xFEE
  2188                           postdec0	equ	0xFED
  2189                           preinc0	equ	0xFEC
  2190                           plusw0	equ	0xFEB
  2191                           fsr0h	equ	0xFEA
  2192                           fsr0l	equ	0xFE9
  2193                           wreg	equ	0xFE8
  2194                           indf1	equ	0xFE7
  2195                           postinc1	equ	0xFE6
  2196                           postdec1	equ	0xFE5
  2197                           preinc1	equ	0xFE4
  2198                           plusw1	equ	0xFE3
  2199                           fsr1h	equ	0xFE2
  2200                           fsr1l	equ	0xFE1
  2201                           bsr	equ	0xFE0
  2202                           indf2	equ	0xFDF
  2203                           postinc2	equ	0xFDE
  2204                           postdec2	equ	0xFDD
  2205                           preinc2	equ	0xFDC
  2206                           plusw2	equ	0xFDB
  2207                           fsr2h	equ	0xFDA
  2208                           fsr2l	equ	0xFD9
  2209                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[15]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[2]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[3]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[15]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[2]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[3]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[15]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[2]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_splash_msg
    _splash_msg->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _PCF8574_WR->_PCF8574_RD
    _LCD_VARCHAR_BITS->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5154
                   _ESCRIBE_MENSAJE2
                   _LCD_VARCHAR_BITS
                         _PCF8574_RD
                         _PCF8574_WR
                         _POS_CURSOR
                          _configuro
                         _splash_msg
 ---------------------------------------------------------------------------------
 (1) _splash_msg                                           2     2      0    1804
                                             10 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     600
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2    1084
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0    1351
                           _LCD_INIT
                          _MSSP_INIT
                         _PCA9685_WR
 ---------------------------------------------------------------------------------
 (2) _PCA9685_WR                                           3     1      2     826
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _PCF8574_WR                                           2     1      1     120
                                              1 COMRAM     2     1      1
                         _PCF8574_RD (ARG)
 ---------------------------------------------------------------------------------
 (1) _PCF8574_RD                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_VARCHAR_BITS                                     4     4      0     180
                                              3 COMRAM     4     4      0
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_VARCHAR_BITS
     _ENVIA_CHAR
   _PCF8574_RD
   _PCF8574_WR
     _PCF8574_RD (ARG)
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
     _MSSP_INIT
     _PCA9685_WR
   _splash_msg
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _POS_CURSOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhhh      2C      0       0      20        0.0%
BITBIGSFRhhhhl       9      0       0      21        0.0%
BITBIGSFRhhl        2F      0       0      22        0.0%
BITBIGSFRhl          8      0       0      23        0.0%
BITBIGSFRlh          8      0       0      24        0.0%
BITBIGSFRllh        24      0       0      25        0.0%
BITBIGSFRlll         B      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 23 17:50:51 2023

                      l32 0934                        l28 0934                        l45 0D8E  
                      l62 0D50                        l80 0D96                        l74 0BB4  
                      l83 0B18                        l93 096C                        l77 0D20  
                      l86 0D6C                        l95 09A6                        l89 0CEC  
                      u10 09A6                        u11 09A2                        u20 0D34  
                      u21 0D30                        u30 0D4A                        u31 0D46  
           ENVIA_CHAR@aux 0003                       l103 0CB8                       l200 089C  
                     l202 08AA                       l203 08AC                       l220 09EA  
                     l212 09BE                       l221 09EE                       l206 08BA  
                     l223 09FC                       l215 09CC                       l224 09FE  
                     l145 0B6A                       l217 09DA                       l209 09AC  
                     l161 0A14                       l226 0A0C                       l218 09DC  
                     l170 0A46                       l227 0A0E                       l164 0A26  
                     l252 0AC6                       l173 0A54                       l158 0D7C  
                     l190 086A                       l182 083C                       l175 0A62  
                     l167 0A34                       l191 086E                       l255 0C44  
                     l176 0A64                       l169 0A42                       l185 084E  
                     l194 087C                       l179 0A72                       l196 088A  
                     l188 085C                       l197 088E                       l951 093E  
                     l943 0C7E                       l961 0956                       l953 0940  
                     l945 0936                       l971 0976                       l963 0958  
                     l955 0948                       l947 093A                       l973 097A  
                     l981 0994                       l965 0960                       l957 094C  
                     l949 093C                       l983 0D54                       l975 0984  
                     l967 0962                       l959 094E                       l991 0CBC  
                     l985 0D60                       l977 098E                       l969 096E  
                     l993 0CBE                       l987 0D62                       l995 0CC2  
                     l989 0D6A                       l997 0CC6                       l999 0CCE  
                     u200 0B6A                       u201 0B66                       u300 09EA  
                     u301 09E6                       u310 09FC                       u311 09F8  
                     u320 0A0C                       u321 0A08                       u190 0B48  
                     u270 09BA                       u191 0B44                       u271 09B6  
                     u184 0B34                       u280 09CC                       u600 0928  
                     u185 0B30                       u281 09C8                       u601 0924  
                     u290 09DA                       u610 0BB4                       u291 09D6  
                     u611 0BB0                       u700 0A22                       u620 084A  
                     u701 0A1E                       u621 0846                       u710 0A34  
                     u630 085C                       u711 0A30                       u631 0858  
                     u720 0A42                       u640 086A                       u560 0C72  
                     u721 0A3E                       u641 0866                       u561 0C6E  
                     u730 0A54                       u650 087C                       u570 08CE  
                     u731 0A50                       u651 0878                       u571 08CA  
                     u740 0A62                       u660 088A                       u580 08EC  
                     u741 0A5E                       u661 0886                       u581 08E8  
                     u750 0A72                       u670 089C                       u590 090A  
                     u751 0A6E                       u671 0898                       u591 0906  
                     u680 08AA                       u681 08A6                       u690 08BA  
                     u691 08B6                       u937 0C34                       u947 0C90  
                     u957 0CA2                       u967 0AD8                       u977 0AE8  
                     u987 0CC8                       u997 0CFC               LEER_LCD@aux 0001  
                     wreg 000FE8              ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001  
          ENVIA_CHAR@dato 0002                      l1001 0CD0                      l1011 0CE6  
                    l1003 0CD2                      l1005 0CD4                      l1013 0D88  
                    l1021 0D4A                      l1031 0D02                      l1023 0CF0  
                    l1007 0CDA                      l1015 0D24                      l1111 0C98  
                    l1041 0D14                      l1033 0D04                      l1025 0CF2  
                    l1009 0CE0                      l1017 0D34                      l1113 0C9C  
                    l1121 0D6E                      l1043 0D1A                      l1035 0D06  
                    l1027 0CF6                      l1019 0D3A                      l1115 0CAA  
                    l1107 0C80                      l1123 0D70                      l1037 0D08  
                    l1029 0CFA                      l1141 0B58                      l1061 0AD2  
                    l1117 0CAE                      l1109 0C8A                      l1039 0D0E  
                    l1143 0B5A                      l1135 0B20                      l1151 09BA  
                    l1055 0D90                      l1071 0B00                      l1063 0AE0  
                    l1119 0CB2                      l1137 0B48                      l1129 0B1C  
                    l1073 0B06                      l1065 0AEE                      l1057 0AC8  
                    l1401 0BFE                      l1139 0B52                      l1075 0B0C  
                    l1067 0AF4                      l1059 0ACC                      l1403 0C08  
                    l1149 09AA                      l1077 0B12                      l1069 0AFA  
                    l1341 0C52                      l1405 0C14                      l1343 0C56  
                    l1351 08CE                      l1407 0C2A                      l1511 0BBA  
                    l1345 0C72                      l1361 0916                      l1353 08DA  
                    l1409 0C40                      l1513 0BBE                      l1339 0C46  
                    l1371 0B84                      l1363 0928                      l1355 08EC  
                    l1515 0BD4                      l1381 0A12                      l1373 0BA0  
                    l1365 0B6C                      l1357 08F8                      l1349 08BE  
                    l1517 0BDE                      l1509 0BB6                      l1383 0A22  
                    l1391 0A80                      l1375 0BA2                      l1367 0B7C  
                    l1359 090A                      l1519 0BE8                      l1377 083A  
                    l1393 0A8E                      l1385 0A74                      l1369 0B7C  
                    l1379 084A                      l1395 0A9C                      l1387 0A78  
                    l1397 0AAA                      l1389 0A7C                      l1399 0AB8  
                    STR_3 0832                      STR_7 0801                      STR_8 0812  
                    STR_9 0823                      u1007 0942                      u1017 0950  
                    u1027 095A                      u1037 0970                      u1047 097E  
                    u1057 0988                      u1067 0D64                      _LATD 000F8C  
                    _main 0BB6        PCA9685_WR@registro 0001                      start 0000  
     PCA9685_WR@direccion 0003             ?_CURSOR_ONOFF 0001            PCA9685_WR@dato 0002  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0002          __end_of_LCD_INIT 0CBA  
        __end_of_LEER_LCD 09A8                     ?_main 0001                     _PORTD 000F83  
                   _TRISD 000F95               ?_POS_CURSOR 0004      LCD_VARCHAR_BITS@dato 0006  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 0D7E              __end_of_main 0BFE                    ??_main 000D  
           __activetblptr 000002          _LCD_VARCHAR_BITS 0B1A                    _ANSELD 000F5E  
                  _OSCCON 000FD3         __end_of_MSSP_INIT 0D7E      __end_of_ENVIA_NIBBLE 0D6E  
                  isa$std 000001                    _strlen 0C46     LCD_VARCHAR_BITS@x_var 0007  
            ??_PCA9685_WR 0003              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_PCF8574_RD 0001  
            ??_PCF8574_WR 0003              ??_BORRAR_LCD 0004                 ?_LCD_INIT 0001  
               ?_LEER_LCD 0001                __accesstop 0060   __end_of__initialization 0D7E  
            ??_LCD_CONFIG 0004             ___rparam_used 000001              ??_ENVIA_CHAR 0002  
          __pcstackCOMRAM 0001        __end_of_PCA9685_WR 08BC        __end_of_PCF8574_RD 0A10  
      __end_of_PCF8574_WR 0A74        __end_of_BORRAR_LCD 0D98          _ESCRIBE_MENSAJE2 0B6C  
        ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0D52        __end_of_LCD_CONFIG 0B1A  
      __end_of_ENVIA_CHAR 0D22                ??_LCD_INIT 0005                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001            PCF8574_WR@dato 0002                   ?_strlen 0001  
                 _SSP1ADD 000FC8                   _SSP1BUF 000FC9              ??_POS_CURSOR 0005  
                 __Hparam 0000                   __Lparam 0000         __end_of_configuro 0AC8  
__end_of_LCD_VARCHAR_BITS 0B6C              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0CEE  
                 __pcinit 0D7E        __end_of_POS_CURSOR 0936                   __ramtop 0800  
                 __ptext0 0BB6                   __ptext1 0BFE                   __ptext2 08BC  
                 __ptext3 0B6C                   __ptext4 0C46                   __ptext5 0A74  
                 __ptext6 0838                   __ptext7 0D6E                   __ptext8 0C80  
                 __ptext9 0AC8              _ENVIA_NIBBLE 0D52      end_of_initialization 0D7E  
           __Lmediumconst 0000       PCF8574_RD@direccion 0001                   strlen@a 0003  
               _MSSP_INIT 0D6E                   strlen@s 0001         ESCRIBE_MENSAJE2@i 000A  
              _splash_msg 0BFE  __end_of_ESCRIBE_MENSAJE2 0BB6              _CURSOR_ONOFF 0D22  
      CURSOR_ONOFF@estado 0004                ?_MSSP_INIT 0001            __end_of_strlen 0C80  
           ??_CURSOR_HOME 0004       start_initialization 0D7E         ENVIA_LCD_CMD@dato 0002  
                ??_strlen 0003               ?_splash_msg 0001       __end_of_CURSOR_HOME 0D90  
       ?_LCD_VARCHAR_BITS 0001               ??_MSSP_INIT 0001                 _configuro 0A74  
      ??_LCD_VARCHAR_BITS 0004               __smallconst 0800                  _LCD_INIT 0C80  
                _LEER_LCD 0936                  _LATDbits 000F8C            POS_CURSOR@fila 0005  
              ?_configuro 0001    ESCRIBE_MENSAJE2@cadena 0005               _CURSOR_HOME 0D88  
                __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0005                  __Lrparam 0000  
      ??_ESCRIBE_MENSAJE2 0007                _PCA9685_WR 0838                  __ptext10 0D22  
                __ptext11 0D88                  __ptext12 0D90                  __ptext13 0CBA  
                __ptext14 0A10                  __ptext15 09A8                  __ptext16 0B1A  
                __ptext17 0CEE                  __ptext18 0936                _PCF8574_RD 09A8  
                __ptext19 0D52                _PCF8574_WR 0A10              _SSP1CON1bits 000FC6  
            _SSP1CON2bits 000FC5                _BORRAR_LCD 0D90                _LCD_CONFIG 0AC8  
              _ENVIA_CHAR 0CEE       PCF8574_WR@direccion 0003                  isa$xinst 000000  
            _SSP1STATbits 000FC7             _ENVIA_LCD_CMD 0CBA               ??_configuro 0006  
            ??_splash_msg 000B        __end_of_splash_msg 0C46            ?_ENVIA_LCD_CMD 0001  
             ?_PCA9685_WR 0001               ?_PCF8574_RD 0001               ?_PCF8574_WR 0002  
     ESCRIBE_MENSAJE2@tam 0009               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 08BC               ?_LCD_CONFIG 0001               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
